#
#
# $Id: indimail.spec.in,v 2.352 2016-06-17 20:53:44+05:30 Cprogrammer Exp mbhangui $
%undefine _missing_build_ids_terminate_build
%global _unpackaged_files_terminate_build 1

%global is_suse %(test -e /etc/SuSE-release && echo 1 || echo 0)
%global is_fedora %(test -e /etc/fedora-release && echo 1 || echo 0)

%global _hardened_build    1
%if 0%{?opensuse_bs}
# define to 1 if building on openSUSE build service
%global build_on_obs       1
%global reconfigure_mode   1
%else
%global build_on_obs       0
%global reconfigure_mode   1
%endif

%global _prefix            @prefix@
%global indimaildir        @indimaildir@
%global domaindir          @domaindir@
%global sysconfdir         @sysconfdir@
%global libexecdir         @libexecdir@
%global mandir             @mandir@
%global shareddir          @shareddir@
%global pkgconfigdir       @pkgconfigdir@
%global default_domain     @defaultdomain@
%global courier_version    4.17.0
%global bogofilter_version 1.2.4
%global pam_multi_version  1.1
%global ucspi_version      0.88
%global qmail_version      1.03
%global fetchmail_version  6.3.26
%global tcpserver_plugin   1
%global nosignatures       1
%global clamav_version     0.98
%global fortune_version    1.1
%global nssd_version       1.1
%global flash_version      0.9.4
%global eps_version        1.2
%global cdb_version        1.0
%global libdkim_version    1.4
%global libsrs2_version    1.0.18
%global mysql_version      6.0.9-alpha
%if 0%{?suse_version}
%global noperms            0
%else
%global noperms            1
%endif
%global see_base           For a description of IndiMail visit http://www.indimail.org
%global i_m_on_mac         0
%if %i_m_on_mac == 1
%global nonssd             1
%global reconfigure_mode   1
%global noclamav           1
%else
%global nonssd             0
%global noclamav           1
%endif
%global noproxy            0
%global nocourierimap      0
%global nolibdkim          0
%global nolibsrs2          0
%global nofetchmail        0
%global nobogofilter       0
%global nodksignatures     0

%global _verbose           0
%global qcount             5
%global qbase              %{indimaildir}/queue
%global mbase              @basepath@
%global logdir             @logdir@
%global plugindir          %{_prefix}/lib/indimail/plugins
%global moduledir          %{_prefix}/lib/indimail/modules
%global servicedir         @servicedir@
%global pam_confdir        /etc/pam.d
%global dkimkeyfn          default
%if %i_m_on_mac == 0
%global pam_module_dir     /%{_lib}/security
%else
%global pam_module_dir     /usr/%{_lib}/pam
%endif
%global _pkg_config_path   /usr/%{_lib}/pkgconfig
%global mysqlSocket        /var/run/mysqld/mysqld.sock

%if %build_on_obs == 1
# change mysqlPrefix to /usr for openSUSE buildservice
%global mysqlPrefix        /usr
%else
%global mysqlPrefix        @mysql_prefix@
%endif

%if %build_on_obs == 1
%global packager Manvendra Bhangui <manvendra@indimail.org>
%global dist redhat
%global disttag rh

%if %{is_suse} != 0
%global dist suse
%global disttag suse
%endif

%if %{is_fedora} != 0
%global dist fedora
%global disttag rhfc
%global fedora_version %(cat /etc/fedora-release | awk '{print $3}')
%endif
%endif

Summary: A Flexible Messaging Platform with Multi-Host/Multi-Protocol support
Name: indimail
Version: @version@
Provides: libindimail = @version@, indimail-mta = @version@, daemontools = @version@, ucspi-tcp = @version@
%if %build_on_obs == 1
Release: 1.<B_CNT>
%else
Release: 1.B_CCNT%{?dist}
%endif

## user/group management
# Note: it is not necessary to assign 555 for uid, gid. The package will use any id assigned to username, groupname
# at runtime
%global uid                555
%global gid                555
%global username           indimail
%global groupname          indimail
# Note: 999 indimail-mta does not require any specific values for uids/gids. 999 is just
# for rpmlint to shut up and stop complaining
Provides: user(%username)   = %uid
Provides: user(alias)       > 999
Provides: user(qmaild)      > 999
Provides: user(qmaill)      > 999
Provides: user(qmailp)      > 999
Provides: user(qmailq)      > 999
Provides: user(qmailr)      > 999
Provides: user(qmails)      > 999
Provides: group(%groupname) = %gid
Provides: group(nofiles)    > 999
Provides: group(qmail)      > 999
Provides: group(qscand)     > 999
Requires(pre): shadow-utils
Requires(postun): shadow-utils

%if %build_on_obs == 1
License: GPL-3.0+
%else
License: GPLv3
%endif

%if %{undefined suse_version} && %{undefined sles_version}
Group: System Environment/Base
%else
Group: Productivity/Networking/Email/Servers
%endif
Source0:  http://downloads.sourceforge.net/%{name}/%{name}-%{version}.tar.gz
Source1:  http://cr.yp.to/software/qmail-%{qmail_version}.tar.gz
Source2:  http://cr.yp.to/ucspi-tcp/ucspi-tcp-%{ucspi_version}.tar.gz
%if %nocourierimap == 0
Source3:  http://downloads.sourceforge.net/%{name}/courier-imap-%{courier_version}.tar.bz2
%endif
Source4:  http://downloads.sourceforge.net/%{name}/flash-0.9.4.tar.gz
Source5:  http://downloads.sourceforge.net/%{name}/altermime-0.3.10.tar.gz
Source6:  http://downloads.sourceforge.net/%{name}/ripmime-1.4.0.9.tar.gz
Source7:  http://downloads.sourceforge.net/%{name}/mpack-1.6.tar.gz
Source8:  http://downloads.sourceforge.net/%{name}/fortune-%{fortune_version}.tar.gz
%if %nonssd == 0
Source9:  http://downloads.sourceforge.net/%{name}/nssd-%{nssd_version}.tar.gz
%endif
%if %nobogofilter == 0
Source10: http://downloads.sourceforge.net/bogofilter/bogofilter-%{bogofilter_version}.tar.bz2
%endif
%if %nofetchmail == 0
Source11: http://downloads.sourceforge.net/fetchmail/fetchmail-%{fetchmail_version}.tar.xz 
%endif
%if %noclamav == 0
Source12: http://downloads.sourceforge.net/clamav/clamav-%{clamav_version}.tar.gz
%endif
Source13: http://downloads.sourceforge.net/%{name}/pam-multi-%{pam_multi_version}.tar.gz
Source14: http://downloads.sourceforge.net/%{name}/logalert-0.3.tar.gz
Source15: http://downloads.sourceforge.net/%{name}/%{name}-%{version}-rpmlintrc
%if %noperms == 0
%if 0%{?suse_version} >= 1120
Source16:%{name}-permissions.easy
Source17:%{name}-permissions.secure
Source18:%{name}-permissions.paranoid
%endif
%endif
%if %nolibdkim == 0
Source19:  http://downloads.sourceforge.net/%{name}/libdkim-%{libdkim_version}.tar.gz
%endif
%if %nolibsrs2 == 0
Source20:  http://downloads.sourceforge.net/%{name}/libsrs2-%{libsrs2_version}.tar.gz
%endif

Patch1:  http://downloads.sourceforge.net/%{name}/Patches/qmail-%{qmail_version}.patch.gz
Patch2:  http://downloads.sourceforge.net/%{name}/Patches/ucspi-tcp-%{ucspi_version}.patch.gz

%if %build_on_obs == 0
%if %nocourierimap == 0
%if %i_m_on_mac == 1
Patch3:  http://downloads.sourceforge.net/%{name}/Patches/courier-imap-%{courier_version}-1.2.patch.gz
%else
Patch3:  http://downloads.sourceforge.net/%{name}/Patches/courier-imap-%{courier_version}.patch.gz
%endif
%endif
%endif

# Comment out below for openSUSE buildservice
%if %build_on_obs == 0
%if %nobogofilter == 0
Patch10: http://downloads.sourceforge.net/%{name}/Patches/bogofilter-%{bogofilter_version}.patch.gz
%endif
%if %nofetchmail == 0
Patch11: http://downloads.sourceforge.net/%{name}/Patches/fetchmail-%{fetchmail_version}.patch.gz
%endif
%endif

%if %noclamav == 0
Patch12: http://downloads.sourceforge.net/%{name}/Patches/clamav-%{clamav_version}.patch.gz
%endif

%if %i_m_on_mac == 1
Patch13: http://downloads.sourceforge.net/%{name}/Patches/courier-imap-%{courier_version}-1.2.mac_supplement.patch.gz
%endif

%if 0 != 0
NoSource: 0
NoSource: 2
%if %nocourierimap == 0
NoSource: 3
%endif
NoSource: 4
NoSource: 5
NoSource: 6
NoSource: 7
NoSource: 8
%if %nonssd == 0
NoSource: 9
%endif
%if %nobogofilter == 0
NoSource: 10
%endif
%if %nofetchmail == 0
NoSource: 11
%endif
%if %noclamav == 0
NoSource: 12
%endif
NoSource: 13
NoSource: 14
NoSource: 19
NoSource: 20
%endif

URL: http://www.indimail.org
#AutoReqProv: No
Conflicts: %{name}-mini, %{name}-mta daemontools ucspi-tcp
BuildRequires: openssl-devel rpm gcc gcc-c++ make bison binutils coreutils grep
BuildRequires: glibc glibc-devel openssl procps readline-devel
BuildRequires: sed ncurses-devel gettext-devel
BuildRequires: python-devel flex findutils
BuildRequires: readline gzip autoconf automake libtool pkgconfig
BuildRequires: xz
BuildRequires: mysql-devel pam-devel

%if %nocourierimap == 0
BuildRequires: libidn-devel gdbm-devel
%endif

%if %{defined fedora_version}
BuildRequires: redhat-lsb-core
%endif

%if %{defined centos_version} || %{defined rhel_version}
BuildRequires: redhat-lsb
%endif

%if %{undefined centos_version} && %{undefined rhel_version}
BuildRequires: chrpath
%endif

%if 0%{?rhel_version} == 700
BuildRequires: groff-doc
%else
BuildRequires: groff
%endif

%if %{undefined rhel_version}
BuildRequires: sharutils
%endif

%if %{defined suse_version}
%if 0%{?suse_version} > 1110 || 0%{?suse_version} == 1310 || 0%{?suse_version} == 1230 || 0%{?suse_version} == 1220 || 0%{?suse_version} == 1210 || 0%{?suse_version} == 1140
BuildRequires: lsb-release
%endif
%endif

%if 0%{?suse_version} == 1220 || 0%{?suse_version} == 1210 || 0%{?suse_version} == 1140 || 0%{?suse_version} == 1100 || 0%{?suse_version} == 1030 || 0%{?suse_version} == 1020
BuildRequires: chrpath
%endif

%if 0%{?suse_version}
BuildRequires: openldap2-devel
%else
BuildRequires: openldap-devel
%endif

%if %noperms == 0
%if 0%{?suse_version} >= 1120
PreReq: permissions
%endif
%endif

%if 0%{?suse_version}
BuildRequires: db-devel
%else
%if 0%{?fedora_version} > 17 || 0%{?centos_version} > 600 || 0%{?rhel_version} > 600
BuildRequires: libdb-devel
%else
BuildRequires: db4-devel
%endif
%endif

################################# OBS ###############################
%if %build_on_obs == 1
%if 0%{?rhel_version} != 600 && 0%{?rhel_version} != 700
BuildRequires: sharutils
%endif

%if 0%{?suse_version}
BuildRequires: -post-build-checks  
#!BuildIgnore: post-build-checks  
#!BuildIgnore: brp-check-suse
%endif
%endif
################################# OBS ###############################

Requires: pam
Requires: coreutils grep /bin/sh glibc openssl

# rpm -qf /bin/ls
# rpm -qp --queryformat %%{arch} some-file.rpm
# rpm --showrc for all macros
# rpm -qlp some-file.rpm
%if %i_m_on_mac == 0
#Requires: /usr/sbin/useradd /usr/sbin/groupadd
Requires: /sbin/chkconfig /usr/sbin/userdel /usr/sbin/groupdel procps /usr/bin/awk
%endif

%if 0%{?suse_version}
Requires: mysql-community-server
%else
Requires: mysql-server
%endif

%if %{defined centos_version} || %{defined rhel_version}
Requires: policycoreutils-python
%endif

BuildRoot: %(mktemp -ud %{_tmppath}/%{name}-%{version}-%{release}-XXXXXXX)
#
# IndiMail is choosy and runs on reliable OS only
#
Excludeos: windows 

%description
IndiMail is a messaging platform built using following packages

qmail,
serialmail,
qmailanalog,
dotforward,
fastforward,
mess822,
daemontools,
ucspi-tcp,
Courier IMAP/POP3,
Bogofilter - A Bayesian Spam Filter,
Clam AntiVirus - GPL anti-virus toolkit for UNIX,
Fetchmail,
other useful utilities (mpack, unpack, altermime, ripmime, fortune, flash).

IndiMail also provides Management of Virtual domains. Lot of the
integration has been done by modifying some of the core components.
You can read the feature list to get an idea of the changes and new
features that have been added over the original packages.

The package combines qmail with other packages like courier-imap for
IMAP/POP3, bogofilter for SPAM control, fetchmail for hosts with 
intermittent connectivity. IndiMail provides ability for a single domain
to have users across multiple hosts (even across different geographical
locations) and tools to manage virtual domains ?

%{see_base}

%package devel
Summary: IndiMail - Development header files and libraries
Group: Development/Libraries/Other
Requires: libindimail

%description devel
This package contains the development header files and libraries
necessary to develop IndiMail client applications.

%{see_base}

%package -n libindimail
Summary: IndiMail - Shared libraries
Group: Development/Libraries/Other

%description -n libindimail
This package contains the shared libraries (*.so*) which certain
languages and applications need to dynamically load and use IndiMail.

%{see_base}

%package mini
Summary: IndiMail - Mini Client Installation
Group: Productivity/Networking/Email/Clients
Conflicts: %{name}

%description mini
This package contains sendmail, qmail-inject and qmail-qmqpc - Bare minimum
programs to have a mini-indimail installation.

A mini-indimail installation doesn't have a mail queue. It gives each
new message to a central server using QMQP.

%{see_base}

%prep
echo "---------------- INFORMATION ------------------------"
echo target        %_target
echo target_alias  %_target_alias
echo target_cpu    %_target_cpu
echo target_os     %_target_os
echo target_vendor %_target_vendor
echo Building %{name}-%{version}-%{release} Build %{_build} OS %{_os} Dist %dist disttag %disttag lib=%{_lib} libdir=%{_libdir}
echo "------------------------------------------------------"

for i in %{name}-%{version} altermime-0.3.10 ripmime-1.4.0.9 flash-0.9.4 \
mpack-1.6 fortune-%{fortune_version} pam-multi-%{pam_multi_version} \
qmail-%{qmail_version} ucspi-tcp-%{ucspi_version} nssd-%{nssd_version} \
bogofilter-%{bogofilter_version} fetchmail-%{fetchmail_version} \
courier-imap-%{courier_version} clamav-%{clamav_version} \
libdkim-%{libdkim_version} libsrs2-%{libsrs2_version} logalert-0.3
do
  (
  if [ -d $i ] ; then
    %{__rm} -rf $i
  fi
  if [ " $i" = " fetchmail-%{fetchmail_version}" -a %nofetchmail -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " bogofilter-%{bogofilter_version}" -a %nobogofilter -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " courier-imap-%{courier_version}" -a %nocourierimap -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " libdkim-%{libdkim_version}" -a %nolibdkim -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " libsrs2-%{libsrs2_version}" -a %nolibsrs2 -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " clamav-%{clamav_version}" -a %noclamav -ne 0 ] ; then
    continue
  fi
  if [ -f ../SOURCES/$i.tar.bz2 ] ; then
    %{__bzip2} -d -c ../SOURCES/$i.tar.bz2 | tar xf -
  elif [ -f ../SOURCES/$i.tar.xz ] ; then
    xz -d -c ../SOURCES/$i.tar.xz |tar xf -
  elif [ -f ../SOURCES/$i.tar.gz ] ; then
    gunzip -c ../SOURCES/$i.tar.gz | tar xf -
  else
    echo "No Source Archive for $i"
    exit 1
  fi
  if [ -d $i ] ; then
%if %build_on_obs == 1
    #
    # Apply IndiMail Patch
    #
    if [ " $i" = " %{name}-%{version}" ] ; then
      if [ -f ../SOURCES/%{name}-%{version}.patch ] ; then
        patch -p0 < ../SOURCES/%{name}-%{version}.patch
        continue
      elif [ -f ../SOURCES/%{name}-%{version}.patch.gz ] ; then
        gunzip -c ../SOURCES/%{name}-%{version}.patch.gz | patch -p0
        continue
      fi
    fi
    #
    # Apply patch picked up from indimail.sourceforge.net
    #
    if [ " $i" = " courier-imap-%{courier_version}" ] ; then
      continue
    fi
    if [ " $i" = " qmail-%{qmail_version}" ] ; then
      continue
    fi
    if [ " $i" = " ucspi-tcp-%{ucspi_version}" ] ; then
      continue
    fi
%endif
    if [ -f %{name}-%{version}/patches/$i.patch ] ; then
      # Copy for the SRPM
      %{__cp} %{name}-%{version}/patches/$i.patch ../SOURCES
    elif [ -f %{name}-%{version}/patches/$i.patch.gz ] ; then
      %{__cp} %{name}-%{version}/patches/$i.patch.gz ../SOURCES
    fi
  fi
  )
done

%patch1  -p0
%patch2  -p0

%if %build_on_obs == 0
%if %nocourierimap == 0
%patch3  -p0
%if %i_m_on_mac == 1
%patch13  -p0
%endif
%endif
%endif

# Comment out below for openSUSE buildservice
%if %build_on_obs == 0
%if %nobogofilter == 0
%patch10 -p0
%endif
%if %nofetchmail == 0
%patch11 -p0
%endif
%endif

%if %noclamav == 0
%patch12 -p0
%endif

%build
ID=$(id -u)
#### LIBDKIM ######################
if [ -d libdkim-%{libdkim_version} ] ; then
  cd libdkim-%{libdkim_version}
  if [ %{reconfigure_mode} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi
fi

%configure --prefix=%{_prefix} --libdir=%{_libdir} --mandir=%{mandir}
cd ..
#### LIBSRS2 ######################
if [ -d libsrs2-%{libsrs2_version} ] ; then
  cd libsrs2-%{libsrs2_version}
  if [ %{reconfigure_mode} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi
  %configure --prefix=%{_prefix} --libdir=%{_libdir} --mandir=%{mandir}
  cd ..
fi

#### IndiMail ######################
cd %{name}-%{version}

if [ %{reconfigure_mode} -eq 1 ] ; then
  echo "reconfiguring..."
  %{__mkdir_p} m4
  aclocal -I m4
  autoreconf -fiv
fi

%configure --prefix=%{_prefix} --sysconfdir=%{sysconfdir} \
  --with-pkgconfigdir=%{_pkg_config_path} --libdir=%{_libdir} --enable-domaindir=%{domaindir} \
  --enable-mysqlbindir=%{mysqlPrefix}/bin --enable-mysqlprefix=%{mysqlPrefix} \
  --libexecdir=%{libexecdir} --mandir=%{mandir} --enable-qmaildir=%{indimaildir} \
  --enable-shareddir=%{shareddir} --datarootdir=%{shareddir} \
  --enable-modbase=${_prefix}/lib/indimail \
  --enable-basepath=@basepath@ --enable-logdir=@logdir@ \
  --enable-tcprules-prog=%{_prefix}/bin/tcprules --enable-tcpserver-file=%{sysconfdir}/tcp.smtp \
  --enable-moduledir=%pam_module_dir `%{__cat} config/indimail.opts`
%if %{tcpserver_plugin} == 1
  echo "-DLOAD_SHARED_OBJECTS" > ../qmail-%{qmail_version}/conf-dlopen
%else
  %{__rm} -f ../qmail-%{qmail_version}/conf-dlopen
%endif
if [ -d ../qmail-%{qmail_version} ] ; then
  # create conf-users
  (
  echo "alias"
  echo "qmaild"
  echo "qmaill"
  echo "root"
  echo "qmailp"
  echo "qmailq"
  echo "qmailr"
  echo "qmails"
  echo %username
  echo "qscand"
  echo 
  echo "The qmail system is heavily partitioned for security; it does almost"
  echo "nothing as root."
  echo
  echo "The first nine lines of this file are the alias user, the daemon user,"
  echo "the log user, the owner of miscellaneous files such as binaries, the"
  echo "passwd user, the queue user, the remote user, the send user, the"
  echo "indimail user and the virus scan user."
  ) > /tmp/conf-users
  diff /tmp/conf-users ../qmail-%{qmail_version}/conf-users > /dev/null 2>&1
  if [ $? -ne 0 ] ; then
    %{__mv} /tmp/conf-users ../qmail-%{qmail_version}/conf-users
  else
    %{__rm} -f /tmp/conf-users
  fi
  # create conf-groups
  (
  echo "qmail"
  echo "nofiles"
  echo %groupname
  echo "qscand"
  echo
  echo "These are the qmail groups. The second group should not have access to"
  echo "any files, but it must be usable for processes; this requirement"
  echo "excludes the \`\`nogroup'' and \`\`nobody'' groups on many systems."
  ) > /tmp/conf-groups
  diff /tmp/conf-groups ../qmail-%{qmail_version}/conf-groups > /dev/null 2>&1
  if [ $? -ne 0 ] ; then
    %{__mv} /tmp/conf-groups ../qmail-%{qmail_version}/conf-groups
  else
    %{__rm} -f /tmp/conf-groups
  fi
fi

#### nssd ######################
%if %nonssd == 0
if [ -d ../nssd-%{nssd_version} ] ; then
  cd ../nssd-%{nssd_version}
  if [ %{reconfigure_mode} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi

  %configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
  --mandir=%{mandir} --libdir=/usr/%{_lib} \
  --enable-mysqlprefix=%{mysqlPrefix} \
  `%{__cat} ../%{name}-%{version}/config/nssd.opts`
fi
%endif

#### courier-imap ######################
%if %nocourierimap == 0
if [ -d ../courier-imap-%{courier_version} ] ; then
  cd ../courier-imap-%{courier_version}
  if [ %{reconfigure_mode} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
    %{__cp} libs/unicode/depcomp .
  fi
  %configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --bindir=%{_prefix}/bin \
  --mandir=%{mandir} --sysconfdir=%{sysconfdir} --libdir=%{_libdir} \
  --datarootdir=%{shareddir} \
  `%{__cat} ../%{name}-%{version}/config/courier-imap.opts`
fi
%endif

#### bogofilter ######################
%if %nobogofilter == 0
if [ -d ../bogofilter-%{bogofilter_version} ] ; then
  cd ../bogofilter-%{bogofilter_version}
  if [ %{reconfigure_mode} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi
  (
  HOME='.';export HOME
  ./configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
  --mandir=%{mandir} --libdir=%{_libdir} `%{__cat} ../%{name}-%{version}/config/bogofilter.opts`
  )
fi
%endif

#### clamav ######################
%if %noclamav == 0
if [ -d ../clamav-%{clamav_version} ] ; then
  cd ../clamav-%{clamav_version}
  if [ %{reconfigure_mode} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi
  if [ %{build_on_obs} -eq 0 ] ; then
  %configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
  --with-pkgconfigdir=%{_pkg_config_path} \
  --with-dbdir=%{indimaildir}/clamd --mandir=%{mandir} \
  --libdir=%{_libdir} \
  `%{__cat} ../%{name}-%{version}/config/clamav.opts`
  else
  # change to ./configure for openSUSE buildservice
  ./configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
  --with-dbdir=%{indimaildir}/clamd --mandir=%{mandir} \
  --libdir=%{_libdir} \
  `%{__cat} ../%{name}-%{version}/config/clamav.opts`
  fi
fi
%endif

#### fetchmail ######################
%if %nofetchmail == 0
if [ -d ../fetchmail-%{fetchmail_version} ] ; then
  cd ../fetchmail-%{fetchmail_version}
  if [ %{reconfigure_mode} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi
  if [ %{build_on_obs} -eq 0 ] ; then
  ./configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
    --enable-binprefix=%{_prefix} --mandir=%{mandir} --datarootdir=%{shareddir} \
    --libdir=%{_libdir} \
    `%{__cat} ../%{name}-%{version}/config/fetchmail.opts`
  else
  %configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
    --enable-binprefix=%{_prefix} --mandir=%{mandir} --datarootdir=%{shareddir} \
    --libdir=%{_libdir} \
    `%{__cat} ../%{name}-%{version}/config/fetchmail.opts`
  fi
fi
%endif
cd ..
#### ucspi-tcp ######################
if [ -d ucspi-tcp-%{ucspi_version} ] ; then
  %{__sed} 's{HOME{%{_prefix}{' ucspi-tcp-%{ucspi_version}/conf-home.in > ucspi-tcp-%{ucspi_version}/conf-home
  %{__sed} 's{SHAREDDIR{%{shareddir}{' ucspi-tcp-%{ucspi_version}/conf-shared.in > ucspi-tcp-%{ucspi_version}/conf-shared
%if %{tcpserver_plugin} == 1
  echo "-DLOAD_SHARED_OBJECTS" > ucspi-tcp-0.88/conf-dlopen
%else
  %{__rm} -f ucsp-tcp-0.88/conf-dlopen
%endif
fi
if [ $ID -eq 0 ] ; then
  if [ $nscd_up -ge 1 ] ; then
    if [ -x %{_sysconfdir}/init.d/nscd ] ; then
      %{_sysconfdir}/init.d/nscd start
    fi
  fi
fi

%install
ID=$(id -u)
%{__mkdir_p} $RPM_BUILD_ROOT%{_prefix}
for i in libdkim-%{libdkim_version} libsrs2-%{libsrs2_version} %{name}-%{version} \
ucspi-tcp-%{ucspi_version} nssd-%{nssd_version} bogofilter-%{bogofilter_version} \
fetchmail-%{fetchmail_version} courier-imap-%{courier_version} \
clamav-%{clamav_version}
do
  if [ " $i" = " fetchmail-%{fetchmail_version}" -a %nofetchmail -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " bogofilter-%{bogofilter_version}" -a %nobogofilter -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " courier-imap-%{courier_version}" -a %nocourierimap -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " libdkim-%{libdkim_version}" -a %nolibdkim -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " libsrs2-%{libsrs2_version}" -a %nolibsrs2 -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " clamav-%{clamav_version}" -a %noclamav -ne 0 ] ; then
    continue
  fi
  if [ -d $i ] ; then
    cd $i
    if [ %{_verbose} -eq 0 ] ; then
      %{__make} -s DESTDIR=%{buildroot}
      %{__make} -s DESTDIR=%{buildroot} install-strip
    else
      %{__make} DESTDIR=%{buildroot}
      %{__make} DESTDIR=%{buildroot} install-strip
    fi
%if %noperms == 0
    if [ " $i" = " %{name}-%{version}" ] ; then
      %{__cp} %{name}-permissions.easy   ../../SOURCES/%{name}-permissions.easy
      %{__cp} %{name}-permissions.secure ../../SOURCES/%{name}-permissions.secure
      %{__cp} %{name}-permissions.paranoid ../../SOURCES/%{name}-permissions.paranoid
    fi
%endif
    # courier-imap installations misses out on this
    if [ %nocourierimap -eq 0 -a " $i" = " courier-imap-%{courier_version}" ] ; then
      %{__mkdir_p} %{buildroot}%{mandir}/man1
      %{__cp} libs/tcpd/couriertls.1 %{buildroot}%{mandir}/man1/couriertls.1
    fi
    cd ..
  fi
done
for i in eps cdb flash indimail
do
  %{__rm} -f %{buildroot}%{_libdir}/lib"$i".la
done
%{__rm} -f %{buildroot}%{moduledir}/iauth.la

if [ %noclamav -eq 0 ] ; then
  for i in clamav clamunrar clamunrar_iface
  do
    %{__rm} -f %{buildroot}%{_libdir}/lib"$i".la
  done
fi
if [ %nonssd -eq 0 ] ; then
  %{__rm} -f %{buildroot}/usr/%{_lib}/libnss_nssd.la
fi
if [ %nocourierimap -eq 0 ] ; then
  %{__rm} -f %{buildroot}/%{_libdir}/libunicode.la
  if [ -x /usr/bin/chrpath ] ; then
     /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/imapd
     /usr/bin/chrpath -d %{buildroot}%{_prefix}/sbin/imaplogin
  fi
fi
if [ %nobogofilter -eq 0 ] ; then
  if [ -x /usr/bin/chrpath ] ; then
    for i in bogofilter bogoutil bogotune
    do
      chmod 755 %{buildroot}%{_prefix}/bin/$i
         /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/$i
    done
  fi
fi
if [ %nolibdkim -eq 0 ] ; then
  %{__rm} -f %{buildroot}%{_libdir}/libdkim.la
  if [ -x /usr/bin/chrpath ] ; then
      /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/dkim
  fi
fi
if [ %nolibsrs2 -eq 0 ] ; then
  %{__rm} -f %{buildroot}%{_libdir}/libsrs2.la
  if [ -x /usr/bin/chrpath ] ; then
      /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/srsfilter
      /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/srs
  fi
fi

%{__mkdir_p} %{buildroot}%{domaindir}/domains
%{__mkdir_p} %{buildroot}%{_prefix}/include/indimail
%{__cp} %{name}-%{version}/inc_deps %{buildroot}%{sysconfdir}
%{__cp} %{name}-%{version}/lib_deps %{buildroot}%{sysconfdir}

if [ %noclamav -eq 0 ] ; then
  if [ -f %{buildroot}%{sysconfdir}/clamd.conf ] ; then
    %{__rm} -f %{buildroot}%{sysconfdir}/clamd.conf
  fi
  if [ -f %{buildroot}%{sysconfdir}/freshclam ] ; then
    %{__rm} -f %{buildroot}%{sysconfdir}/freshclam.conf
  fi
  if [ -d %{buildroot}%{_prefix}/var ] ; then
    /bin/rmdir %{buildroot}%{_prefix}/var
  fi
fi

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%{__mkdir_p} %{buildroot}%{_sysconfdir}/permissions.d/
install -m 644 %{S:16} %{buildroot}%{_sysconfdir}/permissions.d/%{name}-permissions
install -m 644 %{S:17} %{buildroot}%{_sysconfdir}/permissions.d/%{name}-permissions.secure
%endif
%endif

if [ -x /usr/bin/chrpath ] ; then
  /usr/bin/chrpath -d %{buildroot}%{_libdir}/*.so
  for i in dbinfo flash hostcntrl indiversion printdir \
    proxyimap proxypop3 resetquota sigtool vacation vaddaliasdomain vadddomain vadduser \
    valias vatrn vbulletin vcalias vcfilter vdeldomain vdeluser vdominfo \
    vgroup vhostid vipmap vlimit vmoduser vmoveuser vpasswd vpriv sslerator \
    vproxy vrenamedomain vrenameuser vsetuserquota vsmtp vuserinfo tcpserver ismaildup
  do
    if [ -f %{buildroot}%{_prefix}/bin/$i ] ; then
      /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/$i
    fi
  done
  if [ %noclamav -eq 0 ] ; then
    for i in clambc clamconf clamscan freshclam
    do
      if [ -f %{buildroot}%{_prefix}/bin/$i ] ; then
        /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/$i
      fi
    done
  fi

  /usr/bin/chrpath -d %{buildroot}%{libexecdir}/authlib/authindi
  /usr/bin/chrpath -d %{buildroot}%{libexecdir}/authlib/authpgsql
  /usr/bin/chrpath -d %{buildroot}%{libexecdir}/sq_vacation
  /usr/bin/chrpath -d %{buildroot}%{libexecdir}/qmailmrtg7
  /usr/bin/chrpath -d %{buildroot}%{moduledir}/iauth.so
  /usr/bin/chrpath -d %{buildroot}%{moduledir}/background
  /usr/bin/chrpath -d %{buildroot}%{moduledir}/alarms
  /usr/bin/chrpath -d %{buildroot}%{moduledir}/countdown

  for i in adminclient chowkidar cindimail clearopensmtp copyemail execmysql \
  hostsync indisrvr inlookup inquerytest install_tables ipchange mail_report \
  mgmtpass postdel systpass testmra updatefile updaterules vchkpass vdelivermail \
  vdeloldusers vfilter vfstab vmoddomain vreorg vsetpass nssd vserverinfo check_getpw \
  vtable
  do
    if [ -f %{buildroot}%{_prefix}/sbin/$i ] ; then
      /usr/bin/chrpath -d %{buildroot}%{_prefix}/sbin/$i
    fi
    if [ -f %{buildroot}%{libexecdir}/$i ] ; then
      /usr/bin/chrpath -d %{buildroot}%{libexecdir}/$i
	fi
  done
  if [ %noclamav -eq 0 ] ; then
    /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/clamd
  fi
fi
# Compress the man pages
find %{buildroot}%{mandir} -type f -exec gzip -q {} \;
if [ -f %{buildroot}%{mandir}/man7/authlib.7.gz ] ; then
  for i in authshadow.7 authpwd.7 authpam.7 authcustom.7
  do
    %{__rm} -f %{buildroot}%{mandir}/man7/$i
    echo ".so man7/authlib.7" |gzip -c > %{buildroot}%{mandir}/man7/$i.gz
  done
fi
# pam-multi
%{__rm} -f %{buildroot}%{pam_module_dir}/pam-multi.la
%{__rm} -f %{buildroot}%{pam_module_dir}/pam-multi.a
if [ -x /usr/bin/chrpath ] ; then
  /usr/bin/chrpath -d %{buildroot}%{pam_module_dir}/pam-multi.so
  /usr/bin/chrpath -d %{buildroot}%{_prefix}/sbin/pam-checkpwd
fi


if [ -x /bin/touch ] ; then
  TOUCH=/bin/touch
elif [ -x /usr/bin/touch ] ; then
  TOUCH=/usr/bin/touch
else
  TOUCH=/bin/touch
fi
# Create these files so that %%ghost does not complain
for i in indimail.cnf tcp.imap tcp.imap.cdb tcp.pop3 tcp.pop3.cdb \
tcp.smtp tcp.smtp.cdb tcp.qmtp tcp.qmtp.cdb tcp.qmqp tcp.qmqp.cdb \
tcp.poppass tcp.poppass.cdb
do
  if [ ! -f %{buildroot}%{sysconfdir}/$i ] ; then
    $TOUCH %{buildroot}%{sysconfdir}/$i
  fi
done
%if %nonssd == 0
  $TOUCH %{buildroot}%{sysconfdir}/nssd.conf
%endif
(
for i in `%{__cat} %{buildroot}%{sysconfdir}/controlfiles`
do
  echo "%ghost %config(noreplace,missingok)               %{sysconfdir}/control/$i"
  $TOUCH %{buildroot}%{sysconfdir}/control/$i
done
) > config_files.list
if [ %nobogofilter -eq 0 ] ; then
  $TOUCH %{buildroot}%{sysconfdir}/bogofilter.cf
fi
if [ %nofetchmail -eq 0 ] ; then
  $TOUCH %{buildroot}%{sysconfdir}/fetchmailrc
fi
if [ %noclamav -eq 0 ] ; then # clamav >= 0.97.5, without clamav-db
  if [ ! -d %{buildroot}%{indimaildir}/clamd ] ; then
    %{__mkdir_p} %{buildroot}%{indimaildir}/clamd
  else # with built-in clamav signatures
    $TOUCH %{buildroot}%{indimaildir}/clamd/clamav
    $TOUCH %{buildroot}%{indimaildir}/clamd/mirrors.dat
  fi
fi

%files -f config_files.list
%defattr(-, root, root,-)
#
# Directories
#
%dir %attr(555,root,qmail)        %{indimaildir}
                                  %{indimaildir}/bin
                                  %{indimaildir}/sbin
                                  %{indimaildir}/users
                                  %{indimaildir}/control
%dir %attr(555,root,qmail)        %{shareddir}
%dir %attr(555,root,qmail)        %{shareddir}/boot
%dir %attr(555,root,qmail)        %{shareddir}/doc
%dir %attr(555,root,root)         %{_prefix}/lib/indimail
%dir %attr(2775,alias,qmail)      %{indimaildir}/alias
%dir %attr(750,qscand,qscand)     %{indimaildir}/qscanq
%dir %attr(750,qscand,qscand)     %{indimaildir}/qscanq/root
%dir %attr(750,qscand,qscand)     %{indimaildir}/qscanq/root/scanq
%dir %attr(555,root,root)         %{libexecdir}
%dir %attr(555,root,root)         %{libexecdir}/authlib
%dir %attr(755,root,root)         %{sysconfdir}
%dir %attr(775,root,qmail)        %{sysconfdir}/etc
%dir %attr(775,indimail,qmail)    %{sysconfdir}/users
%dir %attr(775,indimail,qmail)    %{sysconfdir}/control
%dir %attr(775,indimail,qmail)    %{sysconfdir}/control/inquery
%dir %attr(2775,qmailr,qmail)     %{sysconfdir}/control/ratelimit
%dir %attr(775,indimail,qmail)    %{sysconfdir}/control/domainkeys
%dir %attr(775,indimail,qmail)    %{sysconfdir}/control/defaultqueue
%dir %attr(2775,indimail,qmail)   %{indimaildir}/autoturn
%if "%{mandir}" != "/usr/share/man"
%dir %attr(755,root,root)         %{mandir}
%dir %attr(755,root,root)         %{mandir}/man1
%dir %attr(755,root,root)         %{mandir}/cat1
%dir %attr(755,root,root)         %{mandir}/man5
%dir %attr(755,root,root)         %{mandir}/cat5
%dir %attr(755,root,root)         %{mandir}/man7
%dir %attr(755,root,root)         %{mandir}/cat7
%dir %attr(755,root,root)         %{mandir}/man8
%dir %attr(755,root,root)         %{mandir}/cat8
%endif
%if "%{_prefix}" != "/usr"
%dir %attr(555,root,root)         %{_libdir}
%endif

%if %nofetchmail == 0
%if %i_m_on_mac == 0
%dir %attr(755,root,root)         %{shareddir}/locale
%endif
%dir %attr(755,root,root)         %{_prefix}/lib*/python*
%dir %attr(755,root,root)         %{_prefix}/lib*/python*/site-packages
%endif

%dir %attr(775,root,indimail)     %{domaindir}/domains

%if %noclamav == 0
%dir %attr(755,root,root)         %{_libdir}/pkgconfig
%dir %attr(775,qscand,qscand)     %{_prefix}/share/clamd
%endif

%dir %attr(755,root,root)         %{shareddir}/fortunes
%dir %attr(555,root,qmail)        %{plugindir}
#
# If the configuration file should not be replaced when the RPM is
# upgraded, mark it as follows:
# %%config(noreplace) filename
#
# Configuration files must be marked as such in packages.
# As a rule of thumb, use %%config(noreplace) instead of plain %%config unless your best,
# educated guess is that doing so will break things. In other words, think hard before
# overwriting local changes in configuration files on package upgrades.
# An example case when /not/ to use noreplace is when a package's configuration file
# changes so that the new package revision wouldn't work with the config file
# from the previous package revision. Whenever plain %%config is used,
# add a brief comment to the specfile explaining why.

%attr(444,root,root) %config(noreplace)           %{sysconfdir}/system.flashlogin
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/system.rc
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/system.menu
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/system.module
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/osh.table
# Allow new control files to get added with new packages
# unlikely for this file to have local changes
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/controlfiles
# For configuration files that may be found missing during uninstall have
# $config(missingok)
#
# For files that should be included in the list of files so that they
# are uninstalled when the package is removed but may not exist until
# they are created during post-install should be marked as follows:
# %%ghost filename
%if %nobogofilter == 0
%ghost %config(noreplace,missingok)               %{sysconfdir}/bogofilter.cf
%endif
%if %nofetchmail == 0
%ghost %config(noreplace,missingok)               %{sysconfdir}/fetchmailrc
%endif

%ghost %config(noreplace,missingok)               %{sysconfdir}/indimail.cnf
%if %nonssd == 0
%ghost %config(noreplace,missingok)               %{sysconfdir}/nssd.conf
%endif
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp.imap
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp.pop3
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp.smtp
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp.qmtp
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp.qmqp
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp.poppass
#
# These files will get removed during uninstallation
#
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp.smtp.cdb
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp.qmtp.cdb
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp.qmqp.cdb
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp.imap.cdb
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp.pop3.cdb
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp.poppass.cdb

%attr(444,root,root) %config(noreplace)           %{sysconfdir}/cronlist
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/indimail.mrtg.cfg
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/headerlist
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/indimail.settings
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/perm_list

%attr(444,root,root)  %config(noreplace)          %{sysconfdir}/indimail.te
%attr(444,root,root)  %config(noreplace)          %{sysconfdir}/indimail.fc
%attr(444,root,root)  %config(noreplace)          %{sysconfdir}/qmailprog.list
%attr(444,root,qmail) %config(noreplace)          %{sysconfdir}/etc/leapsecs.dat
%attr(444,root,qmail) %config(noreplace)          %{sysconfdir}/etc/leapsecs.txt
# logalert
%attr(444,root,qmail) %config(noreplace)          %{sysconfdir}/logalert_perm_list

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%attr(644,root,root)                              %{_sysconfdir}/permissions.d/%{name}-permissions
%attr(644,root,root)                              %{_sysconfdir}/permissions.d/%{name}-permissions.secure
%endif
%endif

%if %nobogofilter == 0
%attr(644,root,root)                              %{sysconfdir}/bogofilter.cf.example
%attr(0644,indimail,indimail) %config(noreplace)  %{sysconfdir}/wordlist.db
%endif

%if %nocourierimap == 0
%attr(600,root,root)                              %{sysconfdir}/pop3d-ssl.dist
%attr(600,root,root)                              %{sysconfdir}/imapd-ssl.dist
%attr(600,root,root)                              %{sysconfdir}/pop3d.cnf
%attr(600,root,root)                              %{sysconfdir}/imapd.cnf
%attr(600,root,root)                              %{sysconfdir}/pop3d.dist
%attr(600,root,root)                              %{sysconfdir}/imapd.dist
%attr(644,root,root)                              %{sysconfdir}/quotawarnmsg.example
%endif

#
# setuid Binaries
#
%attr(4555,root,root)                   %{_prefix}/bin/vrenameuser
%attr(4555,root,root)                   %{_prefix}/bin/vmoveuser
%attr(4555,root,root)                   %{_prefix}/bin/vuserinfo
%attr(4555,root,root)                   %{_prefix}/bin/vrenamedomain
%attr(4555,root,root)                   %{_prefix}/bin/vmoduser
%attr(4555,root,root)                   %{_prefix}/bin/vcfilter
%attr(4555,root,root)                   %{_prefix}/bin/vsetuserquota
%attr(4555,root,root)                   %{_prefix}/bin/vaddaliasdomain
%attr(4555,root,root)                   %{_prefix}/bin/vadduser
%attr(4555,root,root)                   %{_prefix}/bin/printdir
%attr(4555,root,root)                   %{_prefix}/bin/vdeluser
%attr(4555,root,root)                   %{_prefix}/bin/vbulletin
%attr(4555,root,root)                   %{_prefix}/bin/vdominfo
%attr(4555,root,root)                   %{_prefix}/bin/vadddomain
%attr(4555,root,root)                   %{_prefix}/bin/vdeldomain
%attr(4555,root,root)                   %{_prefix}/sbin/systpass
%attr(6551,qscand,qmail)                %{_prefix}/sbin/qhpsi
%attr(6551,qmailq,qmail)                %{_prefix}/sbin/qmail-queue
%attr(4551,qscand,qscand)               %{_prefix}/sbin/qscanq
%attr(2551,root,qscand)                 %{_prefix}/sbin/run-cleanq

# indimail binaries
%attr(755,root,qmail)                   %{_prefix}/bin/logmonitor
%attr(755,root,qmail)                   %{_prefix}/bin/hostcntrl
%attr(755,root,qmail)                   %{_prefix}/bin/bogofilter-qfe
%attr(755,root,qmail)                   %{_prefix}/bin/vpasswd
%attr(755,root,qmail)                   %{_prefix}/bin/resetquota
%attr(755,root,qmail)                   %{_prefix}/bin/vcalias
%attr(755,root,qmail)                   %{_prefix}/bin/vhostid
%attr(755,root,qmail)                   %{_prefix}/bin/vatrn
%attr(755,root,qmail)                   %{_prefix}/bin/indiversion
%attr(755,root,qmail)                   %{_prefix}/bin/vlimit
%attr(755,root,qmail)                   %{_prefix}/bin/crypt
%attr(755,root,qmail)                   %{_prefix}/bin/vpriv
%attr(755,root,qmail)                   %{_prefix}/bin/vipmap
%attr(755,root,qmail)                   %{_prefix}/bin/vsmtp
%attr(755,root,qmail)                   %{_prefix}/bin/vgroup
%attr(755,root,qmail)                   %{_prefix}/bin/vcaliasrev
%attr(755,root,qmail)                   %{_prefix}/bin/vacation
%attr(755,root,qmail)                   %{_prefix}/bin/proxyimap
%attr(755,root,qmail)                   %{_prefix}/bin/proxypop3
%attr(755,root,qmail)                   %{_prefix}/bin/crc
%attr(755,root,qmail)                   %{_prefix}/bin/iecho
%attr(755,root,qmail)                   %{_prefix}/bin/versioninfo
%attr(755,root,qmail)                   %{_prefix}/sbin/vserverinfo
%attr(755,root,qmail)                   %{_prefix}/sbin/adminclient
%attr(755,root,qmail)                   %{_prefix}/sbin/chowkidar
%attr(755,root,qmail)                   %{_prefix}/sbin/clearopensmtp
%attr(755,root,qmail)                   %{_prefix}/sbin/copyemail
%attr(755,root,qmail)                   %{_prefix}/sbin/hostsync
%attr(755,root,qmail)                   %{_prefix}/sbin/indisrvr
%attr(755,root,qmail)                   %{_prefix}/sbin/initsvc
%attr(755,root,qmail)                   %{_prefix}/sbin/inlookup
%attr(755,root,qmail)                   %{_prefix}/sbin/inquerytest
%attr(755,root,qmail)                   %{_prefix}/sbin/install_tables
%attr(755,root,qmail)                   %{_prefix}/sbin/vtable
%attr(755,root,qmail)                   %{_prefix}/sbin/ipchange
%attr(755,root,qmail)                   %{_prefix}/sbin/mail_report
%attr(755,root,qmail)                   %{_prefix}/sbin/mgmtpass
%attr(755,root,qmail)                   %{_prefix}/sbin/svctool
%attr(755,root,qmail)                   %{_prefix}/sbin/testmra
%attr(755,root,qmail)                   %{_prefix}/sbin/updaterules
%attr(755,root,qmail)                   %{_prefix}/sbin/vchkpass
%attr(755,root,qmail)                   %{_prefix}/sbin/vsetpass
%attr(755,root,qmail)                   %{_prefix}/sbin/vdelivermail
%attr(755,root,qmail)                   %{_prefix}/sbin/vdeloldusers
%attr(755,root,qmail)                   %{_prefix}/sbin/vfilter
%attr(755,root,qmail)                   %{_prefix}/sbin/vfstab
%attr(755,root,qmail)                   %{_prefix}/sbin/vmoddomain
%attr(755,root,qmail)                   %{_prefix}/sbin/vreorg
%attr(755,root,qmail)                   %{_prefix}/sbin/osh
%attr(755,root,qmail)                   %{_prefix}/sbin/postdel

%attr(755,root,qmail)                   %{libexecdir}/get-cert
%attr(755,root,qmail)                   %{libexecdir}/tls-cert-check
%attr(755,root,qmail)                   %{libexecdir}/controlsync
%attr(755,root,qmail)                   %{libexecdir}/mailzipper
%attr(755,root,qmail)                   %{libexecdir}/updatefile
%attr(755,root,qmail)                   %{libexecdir}/config_settings
%attr(755,root,qmail)                   %{libexecdir}/displaytop
%attr(755,root,qmail)                   %{libexecdir}/hashtable
%attr(755,root,qmail)                   %{libexecdir}/cindimail
%attr(755,root,qmail)                   %{libexecdir}/cputime
%attr(755,root,qmail)                   %{libexecdir}/execmysql
%attr(755,root,qmail)                   %{libexecdir}/myslave

# qmail binaries
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-popbull
%attr(755,root,qmail)                   %{_prefix}/bin/ofmipd
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-lagcheck
%attr(755,root,qmail)                   %{_prefix}/bin/maildirwatch
%attr(755,root,qmail)                   %{_prefix}/bin/bouncesaying
%attr(755,root,qmail)                   %{_prefix}/bin/checkaddr
%attr(755,root,qmail)                   %{_prefix}/bin/autoresponder
%attr(755,root,qmail)                   %{_prefix}/bin/svstat
%attr(755,root,qmail)                   %{_prefix}/bin/qfilelog
%attr(755,root,qmail)                   %{_prefix}/bin/checkdomain
%attr(755,root,qmail)                   %{_prefix}/bin/svok
%attr(755,root,qmail)                   %{_prefix}/bin/maildirqmtp
%attr(755,root,qmail)                   %{_prefix}/bin/qmailctl
%attr(755,root,qmail)                   %{_prefix}/bin/printmaillist
%attr(755,root,qmail)                   %{_prefix}/bin/tai64nunix
%attr(755,root,qmail)                   %{_prefix}/bin/tai2tai64n
%attr(755,root,qmail)                   %{_prefix}/bin/tai64n2tai
%attr(755,root,qmail)                   %{_prefix}/bin/newinclude
%attr(755,root,qmail)                   %{_prefix}/bin/recordio
%attr(755,root,qmail)                   %{_prefix}/bin/logselect
%attr(755,root,qmail)                   %{_prefix}/bin/qlogselect
%attr(755,root,qmail)                   %{_prefix}/bin/teepipe
%attr(755,root,qmail)                   %{_prefix}/bin/uacl
%attr(755,root,qmail)                   %{_prefix}/bin/envdir
%attr(755,root,qmail)                   %{_prefix}/bin/cdbmake
%attr(755,root,qmail)                   %{_prefix}/bin/mlmatchup
%attr(755,root,qmail)                   %{_prefix}/bin/sendmail
%attr(755,root,qmail)                   %{_prefix}/bin/irmail
%attr(755,root,qmail)                   %{_prefix}/bin/dbinfo
%attr(755,root,qmail)                   %{_prefix}/bin/sslerator
%attr(755,root,qmail)                   %{_prefix}/bin/ifaddr
%attr(755,root,qmail)                   %{_prefix}/bin/matchup
%attr(755,root,qmail)                   %{_prefix}/bin/softlimit
%attr(755,root,qmail)                   %{_prefix}/bin/setforward
%attr(755,root,qmail)                   %{_prefix}/bin/cdbdump
%attr(755,root,qmail)                   %{_prefix}/bin/iftocc
%attr(755,root,qmail)                   %{_prefix}/bin/serialqmtp
%attr(755,root,qmail)                   %{_prefix}/bin/altermime
%attr(755,root,qmail)                   %{_prefix}/bin/fghack
%attr(755,root,qmail)                   %{_prefix}/bin/spipe
%attr(755,root,qmail)                   %{_prefix}/bin/delcr
%attr(755,root,qmail)                   %{_prefix}/bin/svc
%attr(755,root,qmail)                   %{_prefix}/bin/setmaillist
%attr(755,root,qmail)                   %{_prefix}/bin/maildirdeliver
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-showctl
%attr(755,root,qmail)                   %{_prefix}/bin/mbox2maildir
%attr(755,root,qmail)                   %{_prefix}/bin/printforward
%attr(755,root,qmail)                   %{_prefix}/bin/supervise
%attr(755,root,qmail)                   %{_prefix}/bin/preline
%attr(755,root,qmail)                   %{_prefix}/bin/cdbget
%attr(755,root,qmail)                   %{_prefix}/bin/cdbgetm
%attr(755,root,qmail)                   %{_prefix}/bin/cdbstats
%attr(755,root,qmail)                   %{_prefix}/bin/maildirserial
%attr(755,root,qmail)                   %{_prefix}/bin/ofmipname
%attr(755,root,qmail)                   %{_prefix}/bin/serialsmtp
%attr(755,root,qmail)                   %{_prefix}/bin/predate
%attr(755,root,qmail)                   %{_prefix}/bin/condredirect
%attr(755,root,qmail)                   %{_prefix}/bin/fastforward
%attr(755,root,qmail)                   %{_prefix}/bin/inewaliases
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-rm
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-pop3d
%attr(755,root,qmail)                   %{_prefix}/bin/randstr
%attr(755,root,qmail)                   %{_prefix}/bin/xqp
%attr(755,root,qmail)                   %{_prefix}/bin/dot-forward
%attr(755,root,qmail)                   %{_prefix}/bin/datemail
%attr(755,root,qmail)                   %{_prefix}/bin/qbase64
%attr(755,root,qmail)                   %{_prefix}/bin/swaks
%attr(755,root,qmail)                   %{_prefix}/bin/replier
%attr(755,root,qmail)                   %{_prefix}/bin/cdbtest
%attr(755,root,qmail)                   %{_prefix}/bin/tai64n
%attr(755,root,qmail)                   %{_prefix}/bin/qmaildirmake
%attr(755,root,qmail)                   %{_prefix}/bin/maildir2mbox
%attr(755,root,qmail)                   %{_prefix}/bin/columnt
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-smtpd
%attr(755,root,qmail)                   %{_prefix}/bin/qarf
%attr(755,root,qmail)                   %{_prefix}/bin/qaes
%attr(755,root,qmail)                   %{_prefix}/bin/qnotify
%attr(755,root,qmail)                   %{_prefix}/bin/rrt
%attr(755,root,qmail)                   %{_prefix}/bin/greydaemon
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-greyd
%attr(755,root,qmail)                   %{_prefix}/bin/drate
%attr(755,root,qmail)                   %{_prefix}/bin/cidr
%attr(755,root,qmail)                   %{_prefix}/bin/spawn-filter
%attr(755,root,qmail)                   %{_prefix}/bin/tcp-env
%attr(755,root,qmail)                   %{_prefix}/bin/rrforward
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-dk
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-dkim
%attr(755,root,qmail)                   %{_prefix}/bin/dktest
%attr(755,root,qmail)                   %{_prefix}/bin/dk-filter
%attr(755,root,qmail)                   %{_prefix}/bin/dknewkey
%attr(755,root,qmail)                   %{_prefix}/bin/mailsubj
%attr(755,root,qmail)                   %{_prefix}/bin/condtomaildir
%attr(755,root,qmail)                   %{_prefix}/bin/crcdiff
%attr(755,root,qmail)                   %{_prefix}/bin/multirotate
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-cat
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-poppass
%attr(755,root,qmail)                   %{_prefix}/bin/replier-config
%attr(755,root,qmail)                   %{_prefix}/bin/forward
%attr(755,root,qmail)                   %{_prefix}/bin/new-inject
%attr(755,root,qmail)                   %{_prefix}/bin/filterto
%attr(755,root,qmail)                   %{_prefix}/bin/ripmime
%attr(755,root,qmail)                   %{_prefix}/bin/fixcrio
%attr(755,root,qmail)                   %{_prefix}/bin/queue-fix
%attr(755,root,qmail)                   %{_prefix}/bin/iftoccfrom
%attr(755,root,qmail)                   %{_prefix}/bin/setlock
%attr(755,root,qmail)                   %{_prefix}/bin/qreceipt
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-qmqpd
%attr(755,root,qmail)                   %{_prefix}/bin/multitail
%attr(755,root,qmail)                   %{_prefix}/bin/except
%attr(755,root,qmail)                   %{_prefix}/bin/maildirsmtp
%attr(755,root,qmail)                   %{_prefix}/bin/pgrphack
%attr(755,root,qmail)                   %{_prefix}/bin/argv0
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-qmtpd
%attr(755,root,qmail)                   %{_prefix}/bin/addcr
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-inject
%attr(755,root,qmail)                   %{_prefix}/bin/serialcmd
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-qread
%attr(755,root,qmail)                   %{_prefix}/bin/multipipe
%attr(755,root,qmail)                   %{_prefix}/bin/multilog
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-qfilter
%attr(755,root,qmail)                   %{_prefix}/bin/srsfilter
%attr(755,root,qmail)                   %{_prefix}/bin/surblfilter
%attr(755,root,qmail)                   %{_prefix}/bin/surblqueue
%attr(755,root,qmail)                   %{_prefix}/bin/setuidgid
%attr(755,root,qmail)                   %{_prefix}/bin/spfquery
%attr(755,root,qmail)                   %{_prefix}/bin/tai64nlocal
%attr(755,root,qmail)                   %{_prefix}/bin/envuidgid
%attr(755,root,qmail)                   %{_prefix}/bin/maildircmd

%attr(755,root,qmail)                   %{_prefix}/bin/822headerfilter
%attr(755,root,qmail)                   %{_prefix}/bin/822print
%attr(755,root,qmail)                   %{_prefix}/bin/822date
%attr(755,root,qmail)                   %{_prefix}/bin/822headerok
%attr(755,root,qmail)                   %{_prefix}/bin/822addr
%attr(755,root,qmail)                   %{_prefix}/bin/822fields
%attr(755,root,qmail)                   %{_prefix}/bin/822bodyfilter
%attr(755,root,qmail)                   %{_prefix}/bin/822header
%attr(755,root,qmail)                   %{_prefix}/bin/822field
%attr(755,root,qmail)                   %{_prefix}/bin/822body
%attr(755,root,qmail)                   %{_prefix}/bin/822received
%attr(755,root,qmail)                   %{_prefix}/bin/leapsecs
%attr(755,root,qmail)                   %{_prefix}/bin/yearcal
%attr(755,root,qmail)                   %{_prefix}/bin/nowutc
%attr(755,root,qmail)                   %{_prefix}/bin/udplogger
%attr(755,root,qmail)                   %{_prefix}/bin/udpclient

%attr(755,root,qmail)                   %{_prefix}/sbin/batv
%attr(755,root,qmail)                   %{_prefix}/sbin/plugtest
%attr(755,root,qmail)                   %{_prefix}/sbin/sys-checkpwd
%attr(755,root,qmail)                   %{_prefix}/sbin/ldap-checkpwd
%attr(755,root,qmail)                   %{_prefix}/sbin/qscanq-stdin
%attr(755,root,qmail)                   %{_prefix}/sbin/cleanq
%attr(755,root,qmail)                   %{_prefix}/sbin/svscan
%attr(755,root,qmail)                   %{_prefix}/sbin/svscanboot
%attr(755,root,qmail)                   %{_prefix}/sbin/readproctitle
%attr(755,root,qmail)                   %{_prefix}/sbin/qmail-nullqueue
%attr(755,root,qmail)                   %{_prefix}/sbin/qmail-multi
%attr(755,root,qmail)                   %{_prefix}/sbin/qmail-qmqpc
%attr(755,root,qmail)                   %{_prefix}/sbin/qmail-tcpok
%attr(755,root,qmail)                   %{_prefix}/sbin/qmail-tcpto

%attr(751,root,qmail)                   %{_prefix}/bin/qmail-newu
%attr(751,root,qmail)                   %{_prefix}/bin/qmail-newmrh
%attr(751,root,qmail)                   %{_prefix}/bin/qmail-cdb
%attr(751,root,qmail)                   %{_prefix}/bin/qmail-sql
%attr(751,root,qmail)                   %{_prefix}/bin/recipient-cdb
%attr(751,root,qmail)                   %{_prefix}/sbin/qmail-daemon
%attr(751,root,qmail)                   %{_prefix}/sbin/qmail-start
%attr(751,root,qmail)                   %{_prefix}/sbin/qmail-lspawn
%attr(751,root,qmail)                   %{_prefix}/sbin/qmail-send
%attr(751,root,qmail)                   %{_prefix}/sbin/qmail-todo
%attr(751,root,qmail)                   %{_prefix}/sbin/qmail-clean
%attr(751,root,qmail)                   %{_prefix}/sbin/qmail-rspawn

%attr(755,root,qmail)                   %{_prefix}/bin/qmail-pw2u
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-local
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-remote
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-getpw
%attr(755,root,qmail)                   %{_prefix}/bin/qmail-popup
%attr(755,root,qmail)                   %{_prefix}/sbin/relaytest
%attr(755,root,qmail)                   %{_prefix}/sbin/splogger

%attr(755,root,qmail)                   %{libexecdir}/atrn
%attr(755,root,qmail)                   %{libexecdir}/etrn
%attr(755,root,qmail)                   %{libexecdir}/cdbmake-12
%attr(755,root,qmail)                   %{libexecdir}/cdbmake-sv
%attr(755,root,qmail)                   %{libexecdir}/config-fast
%attr(755,root,qmail)                   %{libexecdir}/idedit
%attr(755,root,qmail)                   %{libexecdir}/hostname
%attr(755,root,qmail)                   %{libexecdir}/qmailconfig
%attr(755,root,qmail)                   %{libexecdir}/dnstxt
%attr(755,root,qmail)                   %{libexecdir}/dnsmxip
%attr(755,root,qmail)                   %{libexecdir}/dnsfq
%attr(755,root,qmail)                   %{libexecdir}/dnsptr
%attr(755,root,qmail)                   %{libexecdir}/dnsip
%attr(755,root,qmail)                   %{libexecdir}/dnscname
%attr(755,root,qmail)                   %{libexecdir}/envmigrate
%attr(755,root,qmail)                   %{libexecdir}/qsmhook
%attr(755,root,qmail)                   %{libexecdir}/update_tmprsadh
%attr(751,root,qmail)                   %{libexecdir}/instcheck
%attr(751,root,qmail)                   %{libexecdir}/whois
%attr(755,root,qmail)                   %{libexecdir}/testzero
%attr(755,root,qmail)                   %{libexecdir}/qmail-lint
%attr(755,root,qmail)                   %{libexecdir}/ipmeprint
%attr(755,root,qmail)                   %{libexecdir}/rpmattr
%attr(755,root,qmail)                   %{libexecdir}/elq
%attr(755,root,qmail)                   %{libexecdir}/pinq
%attr(755,root,qmail)                   %{libexecdir}/qail
%attr(755,root,qmail)                   %{libexecdir}/qpq

%attr(755,root,qmail)                   %{libexecdir}/zsuccesses
%attr(755,root,qmail)                   %{libexecdir}/deferrals
%attr(755,root,qmail)                   %{libexecdir}/rsmtprecipients
%attr(755,root,qmail)                   %{libexecdir}/smtp-matchup
%attr(755,root,qmail)                   %{libexecdir}/zrecipients
%attr(755,root,qmail)                   %{libexecdir}/xsender
%attr(755,root,qmail)                   %{libexecdir}/rxdelay
%attr(755,root,qmail)                   %{libexecdir}/zspam
%attr(755,root,qmail)                   %{libexecdir}/recipients
%attr(755,root,qmail)                   %{libexecdir}/rsmtprdomains
%attr(755,root,qmail)                   %{libexecdir}/rsmtpfailures
%attr(755,root,qmail)                   %{libexecdir}/successes
%attr(755,root,qmail)                   %{libexecdir}/zrxdelay
%attr(755,root,qmail)                   %{libexecdir}/rspamrdomain
%attr(755,root,qmail)                   %{libexecdir}/rspamsdomain
%attr(755,root,qmail)                   %{libexecdir}/multilog-matchup
%attr(755,root,qmail)                   %{libexecdir}/zddist
%attr(755,root,qmail)                   %{libexecdir}/zsenders
%attr(755,root,qmail)                   %{libexecdir}/senders
%attr(755,root,qmail)                   %{libexecdir}/suids
%attr(755,root,qmail)                   %{libexecdir}/zsmtp
%attr(755,root,qmail)                   %{libexecdir}/zoverall
%attr(755,root,qmail)                   %{libexecdir}/rhosts
%attr(755,root,qmail)                   %{libexecdir}/zrhosts
%attr(755,root,qmail)                   %{libexecdir}/failures
%attr(755,root,qmail)                   %{libexecdir}/rsmtp
%attr(755,root,qmail)                   %{libexecdir}/rsmtpsenders
%attr(755,root,qmail)                   %{libexecdir}/zdeferrals
%attr(755,root,qmail)                   %{libexecdir}/rspamstat
%attr(755,root,qmail)                   %{libexecdir}/zsuids
%attr(755,root,qmail)                   %{libexecdir}/xrecipient
%attr(755,root,qmail)                   %{libexecdir}/rspamhist
%attr(755,root,qmail)                   %{libexecdir}/rsmtpsdomains
%attr(755,root,qmail)                   %{libexecdir}/zfailures
%attr(755,root,qmail)                   %{libexecdir}/zsendmail
%attr(755,root,qmail)                   %{libexecdir}/ddist

%if %nonssd == 0
%attr(755,root,qmail)                   %{_prefix}/sbin/nssd
%attr(755,root,qmail)                   %{_prefix}/sbin/check_getpw
%endif

%attr(755,root,qmail)                   %{_prefix}/bin/mpack
%attr(755,root,qmail)                   %{_prefix}/bin/munpack
%attr(755,root,qmail)                   %{_prefix}/bin/fortune
%attr(755,root,qmail)                   %{_prefix}/sbin/rot
%attr(755,root,qmail)                   %{_prefix}/sbin/strfile
%attr(755,root,qmail)                   %{_prefix}/sbin/unstr

%attr(755,root,qmail)                   %{_prefix}/bin/ismaildup
%attr(755,root,qmail)                   %{_prefix}/bin/flash
%attr(755,root,qmail)                   %{_prefix}/bin/ripole
%attr(755,root,qmail)                   %{_prefix}/bin/valias
%attr(755,root,qmail)                   %{_prefix}/bin/vproxy
%attr(755,root,qmail)                   %{libexecdir}/vadddomain
%attr(755,root,qmail)                   %{libexecdir}/vaddaliasdomain
%attr(755,root,qmail)                   %{libexecdir}/vrenamedomain
%attr(755,root,qmail)                   %{libexecdir}/vdeldomain
%attr(755,root,qmail)                   %{libexecdir}/vadduser
%attr(755,root,qmail)                   %{libexecdir}/overquota.sh
%attr(755,root,qmail)                   %{libexecdir}/qmailmrtg7
%attr(4755,root,qmail)                  %{libexecdir}/sq_vacation

%if %nocourierimap == 0
# courier imap
%attr(755,root,root)                    %{_prefix}/bin/maildirmake
%attr(755,root,root)                    %{_prefix}/bin/maildirkw
%attr(755,root,root)                    %{_prefix}/bin/deliverquota
%attr(755,root,root)                    %{_prefix}/bin/couriertls
%attr(755,root,root)                    %{_prefix}/bin/maildiracl
%attr(755,root,root)                    %{_prefix}/bin/imapd
%attr(755,root,root)                    %{_prefix}/bin/pop3d
%attr(755,root,root)                    %{_prefix}/sbin/imaplogin
%attr(755,root,root)                    %{_prefix}/sbin/pop3login
%attr(755,root,root)                    %{_prefix}/sbin/sharedindexinstall
%attr(755,root,root)                    %{_prefix}/sbin/sharedindexsplit
#
%if %i_m_on_mac == 0
%attr(4755,root,root)                   %{libexecdir}/authlib/authshadow
%endif
%endif

# ucspi-tcp
%attr(755,root,root)                    %{_prefix}/bin/mconnect-io
%attr(755,root,root)                    %{_prefix}/bin/rblsmtpd
%attr(755,root,root)                    %{_prefix}/bin/tcprulescheck
%attr(755,root,root)                    %{_prefix}/bin/tcpcat
%attr(755,root,root)                    %{_prefix}/bin/date@
%attr(755,root,root)                    %{_prefix}/bin/who@
%attr(755,root,root)                    %{_prefix}/bin/tcpclient
%attr(755,root,root)                    %{_prefix}/bin/tcpserver
%attr(755,root,root)                    %{_prefix}/bin/mconnect
%attr(755,root,root)                    %{_prefix}/bin/finger@
%attr(755,root,root)                    %{_prefix}/bin/http@
%attr(755,root,root)                    %{_prefix}/bin/tcprules
# bogofilter
%if %nobogofilter == 0
%attr(6551,root,indimail)               %{_prefix}/bin/bogofilter
%attr(755,root,root)                    %{_prefix}/bin/bogolexer
%attr(755,root,root)                    %{_prefix}/bin/bogotune
%attr(755,root,root)                    %{_prefix}/bin/bogoutil
%attr(755,root,root)                    %{_prefix}/bin/bogoupgrade
%attr(755,root,root)                    %{_prefix}/sbin/bf_compact
%attr(755,root,root)                    %{_prefix}/sbin/bf_copy
%attr(755,root,root)                    %{_prefix}/sbin/bf_tar
%endif

%if %nolibdkim == 0
%attr(755,root,root)                    %{_prefix}/bin/dkim
%endif

%if %nolibsrs2 == 0
%attr(755,root,root)                    %{_prefix}/bin/srs
%endif

# clamav
%if %noclamav == 0
%attr(755,root,root)                    %{_prefix}/bin/sigtool
%attr(755,root,root)                    %{_prefix}/bin/clamav-config
%attr(755,root,root)                    %{_prefix}/bin/clamscan
%attr(755,root,root)                    %{_prefix}/bin/clamdscan
%attr(755,root,root)                    %{_prefix}/bin/clambc
%attr(755,root,root)                    %{_prefix}/bin/clamdtop
%attr(755,root,root)                    %{_prefix}/bin/freshclam
%attr(755,root,root)                    %{_prefix}/bin/clamconf
%attr(755,root,root)                    %{_prefix}/sbin/clamd
%endif
# logalert
%attr(0755,root,root)                    %{_prefix}/bin/logalert
%attr(0755,root,root)                   %{_prefix}/bin/logclient
%attr(0755,root,root)                   %{_prefix}/bin/incrmesg
%attr(0755,root,root)                   %{_prefix}/bin/showbytes
%attr(0755,root,root)                   %{_prefix}/sbin/rpclog
%attr(0755,root,root)                   %{_prefix}/sbin/logsrv

# fetchmail
%if %nofetchmail == 0
%attr(755,root,root)                    %{_prefix}/bin/fetchmailconf
%attr(755,root,root)                    %{_prefix}/bin/fetchmail
%endif

# pam-multi
%attr(755,root,root)                    %{_prefix}/sbin/pam-checkpwd
%attr(644,root,root) %config(noreplace) %{pam_confdir}/pam-multi
%attr(644,root,root) %config(noreplace) %{pam_confdir}/pop3
%attr(644,root,root) %config(noreplace) %{pam_confdir}/imap

%attr(755,root,qmail)                   %{shareddir}/boot/binm2
%attr(755,root,qmail)                   %{shareddir}/boot/proc+df
%attr(755,root,qmail)                   %{shareddir}/boot/binm1+df
%attr(755,root,qmail)                   %{shareddir}/boot/binm3+df
%attr(755,root,qmail)                   %{shareddir}/boot/home+df
%attr(755,root,qmail)                   %{shareddir}/boot/binm3
%attr(755,root,qmail)                   %{shareddir}/boot/binm1
%attr(755,root,qmail)                   %{shareddir}/boot/proc
%attr(755,root,qmail)                   %{shareddir}/boot/home
%attr(755,root,qmail)                   %{shareddir}/boot/binm2+df
%attr(444,root,qmail)                   %{shareddir}/boot/upstart
%attr(444,root,qmail)                   %{shareddir}/boot/systemd
%if %i_m_on_mac == 1
%attr(444,root,qmail)                   %{shareddir}/boot/StartupParameters.plist
%attr(444,root,qmail)                   %{shareddir}/boot/indimail.plist
%endif

%if %nocourierimap == 0
%attr(755,root,root)                    %{libexecdir}/pop3d-ssl.rc
%attr(755,root,root)                    %{libexecdir}/makedatprog
%attr(755,root,root)                    %{libexecdir}/imapd-ssl.rc
%attr(755,root,root)                    %{libexecdir}/couriertcpd
%attr(755,root,root)                    %{libexecdir}/imapd.rc
%attr(755,root,root)                    %{libexecdir}/pop3d.rc
%attr(755,root,root)                    %{libexecdir}/mkimapdcert
%attr(755,root,root)                    %{libexecdir}/mkpop3dcert
%attr(755,root,root)                    %{libexecdir}/mkdhparams
%endif
%attr(755,root,root)                    %{libexecdir}/authlib/authindi
%attr(755,root,root)                    %{libexecdir}/authlib/authpgsql
%attr(755,root,root)                    %{libexecdir}/authlib/authgeneric

%attr(755,root,qmail)                   %{plugindir}/generic.so
%attr(755,root,qmail)                   %{plugindir}/smtpd-plugin.so
%attr(755,root,qmail)                   %{plugindir}/smtpd-plugin0.so
%if %tcpserver_plugin != 0
%attr(755,root,qmail)                   %{plugindir}/qmail_smtpd.so
%attr(755,root,qmail)                   %{plugindir}/rblsmtpd.so
%endif

%attr(755,root,root)                    %{moduledir}/background
%attr(755,root,root)                    %{moduledir}/alarms
%attr(755,root,root)                    %{moduledir}/countdown
%attr(755,root,root)                    %{moduledir}/iauth.so

%attr(644,root,root)                    %{shareddir}/fortunes/definitions
%attr(644,root,root)                    %{shareddir}/fortunes/linux.dat
%attr(644,root,root)                    %{shareddir}/fortunes/food
%attr(644,root,root)                    %{shareddir}/fortunes/medicine
%attr(644,root,root)                    %{shareddir}/fortunes/magic
%attr(644,root,root)                    %{shareddir}/fortunes/ethnic
%attr(644,root,root)                    %{shareddir}/fortunes/art.dat
%attr(644,root,root)                    %{shareddir}/fortunes/computers.dat
%attr(644,root,root)                    %{shareddir}/fortunes/songs-poems.dat
%attr(644,root,root)                    %{shareddir}/fortunes/kids
%attr(644,root,root)                    %{shareddir}/fortunes/goedel
%attr(644,root,root)                    %{shareddir}/fortunes/paradoxum
%attr(644,root,root)                    %{shareddir}/fortunes/computers
%attr(644,root,root)                    %{shareddir}/fortunes/goedel.dat
%attr(644,root,root)                    %{shareddir}/fortunes/news
%attr(644,root,root)                    %{shareddir}/fortunes/pets
%attr(644,root,root)                    %{shareddir}/fortunes/law.dat
%attr(644,root,root)                    %{shareddir}/fortunes/zippy
%attr(644,root,root)                    %{shareddir}/fortunes/miscellaneous
%attr(644,root,root)                    %{shareddir}/fortunes/ascii-art.dat
%attr(644,root,root)                    %{shareddir}/fortunes/perl
%attr(644,root,root)                    %{shareddir}/fortunes/kids.dat
%attr(644,root,root)                    %{shareddir}/fortunes/love.dat
%attr(644,root,root)                    %{shareddir}/fortunes/work.dat
%attr(644,root,root)                    %{shareddir}/fortunes/humorists
%attr(644,root,root)                    %{shareddir}/fortunes/definitions.dat
%attr(644,root,root)                    %{shareddir}/fortunes/drugs
%attr(644,root,root)                    %{shareddir}/fortunes/education.dat
%attr(644,root,root)                    %{shareddir}/fortunes/politics.dat
%attr(644,root,root)                    %{shareddir}/fortunes/science.dat
%attr(644,root,root)                    %{shareddir}/fortunes/love
%attr(644,root,root)                    %{shareddir}/fortunes/men-women
%attr(644,root,root)                    %{shareddir}/fortunes/ascii-art
%attr(644,root,root)                    %{shareddir}/fortunes/humorists.dat
%attr(644,root,root)                    %{shareddir}/fortunes/platitudes.dat
%attr(644,root,root)                    %{shareddir}/fortunes/debian
%attr(644,root,root)                    %{shareddir}/fortunes/sports.dat
%attr(644,root,root)                    %{shareddir}/fortunes/riddles
%attr(644,root,root)                    %{shareddir}/fortunes/law
%attr(644,root,root)                    %{shareddir}/fortunes/knghtbrd.dat
%attr(644,root,root)                    %{shareddir}/fortunes/sports
%attr(644,root,root)                    %{shareddir}/fortunes/perl.dat
%attr(644,root,root)                    %{shareddir}/fortunes/tao.dat
%attr(644,root,root)                    %{shareddir}/fortunes/linuxcookie
%attr(644,root,root)                    %{shareddir}/fortunes/linuxcookie.dat
%attr(644,root,root)                    %{shareddir}/fortunes/riddles.dat
%attr(644,root,root)                    %{shareddir}/fortunes/medicine.dat
%attr(644,root,root)                    %{shareddir}/fortunes/fortunes
%attr(644,root,root)                    %{shareddir}/fortunes/cookie
%attr(644,root,root)                    %{shareddir}/fortunes/cookie.dat
%attr(644,root,root)                    %{shareddir}/fortunes/art
%attr(644,root,root)                    %{shareddir}/fortunes/politics
%attr(644,root,root)                    %{shareddir}/fortunes/songs-poems
%attr(644,root,root)                    %{shareddir}/fortunes/startrek.dat
%attr(644,root,root)                    %{shareddir}/fortunes/men-women.dat
%attr(644,root,root)                    %{shareddir}/fortunes/kernelnewbies
%attr(644,root,root)                    %{shareddir}/fortunes/fortunes.dat
%attr(644,root,root)                    %{shareddir}/fortunes/magic.dat
%attr(644,root,root)                    %{shareddir}/fortunes/science
%attr(644,root,root)                    %{shareddir}/fortunes/platitudes
%attr(644,root,root)                    %{shareddir}/fortunes/kernelnewbies.dat
%attr(644,root,root)                    %{shareddir}/fortunes/literature.dat
%attr(644,root,root)                    %{shareddir}/fortunes/translate-me
%attr(644,root,root)                    %{shareddir}/fortunes/startrek
%attr(644,root,root)                    %{shareddir}/fortunes/drugs.dat
%attr(644,root,root)                    %{shareddir}/fortunes/zippy.dat
%attr(644,root,root)                    %{shareddir}/fortunes/linux
%attr(644,root,root)                    %{shareddir}/fortunes/work
%attr(644,root,root)                    %{shareddir}/fortunes/literature
%attr(644,root,root)                    %{shareddir}/fortunes/knghtbrd
%attr(644,root,root)                    %{shareddir}/fortunes/news.dat
%attr(644,root,root)                    %{shareddir}/fortunes/paradoxum.dat
%attr(644,root,root)                    %{shareddir}/fortunes/bofh-excuses.dat
%attr(644,root,root)                    %{shareddir}/fortunes/translate-me.dat
%attr(644,root,root)                    %{shareddir}/fortunes/miscellaneous.dat
%attr(644,root,root)                    %{shareddir}/fortunes/rj.dat
%attr(644,root,root)                    %{shareddir}/fortunes/debian.dat
%attr(644,root,root)                    %{shareddir}/fortunes/tao
%attr(644,root,root)                    %{shareddir}/fortunes/food.dat
%attr(644,root,root)                    %{shareddir}/fortunes/ethnic.dat
%attr(644,root,root)                    %{shareddir}/fortunes/people.dat
%attr(644,root,root)                    %{shareddir}/fortunes/people
%attr(644,root,root)                    %{shareddir}/fortunes/wisdom.dat
%attr(644,root,root)                    %{shareddir}/fortunes/rj
%attr(644,root,root)                    %{shareddir}/fortunes/wisdom
%attr(644,root,root)                    %{shareddir}/fortunes/pets.dat
%attr(644,root,root)                    %{shareddir}/fortunes/bofh-excuses
%attr(644,root,root)                    %{shareddir}/fortunes/education
%attr(644,root,root)                    %{shareddir}/fortunes/age
%attr(644,root,root)                    %{shareddir}/fortunes/age.dat
%attr(644,root,root)                    %{shareddir}/fortunes/chanakya
%attr(644,root,root)                    %{shareddir}/fortunes/chanakya.dat
%attr(644,root,root)                    %{shareddir}/fortunes/joel-on-software
%attr(644,root,root)                    %{shareddir}/fortunes/joel-on-software.dat
%attr(644,root,root)                    %{shareddir}/fortunes/osp
%attr(644,root,root)                    %{shareddir}/fortunes/osp.dat
%attr(644,root,root)                    %{shareddir}/fortunes/paul-graham
%attr(644,root,root)                    %{shareddir}/fortunes/paul-graham.dat
%attr(644,root,root)                    %{shareddir}/fortunes/thirukkural
%attr(644,root,root)                    %{shareddir}/fortunes/thirukkural.dat
%attr(644,root,root)                    %{shareddir}/fortunes/vedas-1
%attr(644,root,root)                    %{shareddir}/fortunes/vedas-1.dat
%attr(644,root,root)                    %{shareddir}/fortunes/vedas-2
%attr(644,root,root)                    %{shareddir}/fortunes/vedas-2.dat

%if %noclamav == 0
%if %nosignatures == 0
%ghost                   %config(noreplace) %{shareddir}/clamd/clamav*
%ghost                   %config(noreplace) %{shareddir}/clamd/mirrors.dat
%attr(664,qscand,qscand) %config(noreplace) %{shareddir}/clamd/main.cvd
%attr(664,qscand,qscand) %config(noreplace) %{shareddir}/clamd/daily.cvd
%endif
%attr(644,root,root)                        %{sysconfdir}/clamd.conf.sample
%attr(644,root,root)                        %{sysconfdir}/freshclam.conf.sample
%endif

%if %nofetchmail == 0
%if %i_m_on_mac == 0
%attr(644,root,root)                    %{shareddir}/locale/*/LC_MESSAGES/*.mo
%endif
%attr(644,root,root)                    %{_prefix}/lib/python*/site-packages/fetchmailconf.pyo
%attr(755,root,root)                    %{_prefix}/lib/python*/site-packages/fetchmailconf.py
%attr(644,root,root)                    %{_prefix}/lib/python*/site-packages/fetchmailconf.pyc
%endif

%docdir %{shareddir}/doc
%docdir %{mandir}
%attr(644,root,root)                    %{mandir}/man[1,5,7,8]/*
%attr(644,root,root)                    %{mandir}/cat[1,5,7,8]/*

%attr(444,root,qmail)                   %{shareddir}/doc/COPYING
%attr(444,root,qmail)                   %{shareddir}/doc/README.licenses
%attr(444,root,qmail)                   %{shareddir}/doc/CREDITS
%attr(444,root,qmail)                   %{shareddir}/doc/RELEASE-Notes
%attr(444,root,qmail)                   %{shareddir}/doc/AUTOTURN
%attr(444,root,qmail)                   %{shareddir}/doc/INTERNALS
%attr(444,root,qmail)                   %{shareddir}/doc/EXTTODO
%attr(444,root,qmail)                   %{shareddir}/doc/FROMISP
%attr(444,root,qmail)                   %{shareddir}/doc/TOISP
%attr(444,root,qmail)                   %{shareddir}/doc/README.clamav
%attr(444,root,qmail)                   %{shareddir}/doc/README.filters
%attr(444,root,qmail)                   %{shareddir}/doc/README.greylist
%attr(444,root,qmail)                   %{shareddir}/doc/README.logselect
%attr(444,root,qmail)                   %{shareddir}/doc/README.cdb
%attr(444,root,qmail)                   %{shareddir}/doc/README.moreipme
%attr(444,root,qmail)                   %{shareddir}/doc/README.qmail
%attr(444,root,qmail)                   %{shareddir}/doc/README.recipients
%attr(444,root,qmail)                   %{shareddir}/doc/README.srs
%attr(444,root,qmail)                   %{shareddir}/doc/README.surbl
%attr(444,root,qmail)                   %{shareddir}/doc/README.vlimits
%attr(444,root,qmail)                   %{shareddir}/doc/README.mpack
%attr(444,root,qmail)                   %{shareddir}/doc/README-CLUSTER
%attr(444,root,qmail)                   %{shareddir}/doc/HOWTO.sharedmaildir
%attr(444,root,qmail)                   %{shareddir}/doc/INSTALL.indimail
%attr(444,root,qmail)                   %{shareddir}/doc/INSTALL-RPM
%attr(444,root,qmail)                   %{shareddir}/doc/INSTALL-MINI
%attr(444,root,qmail)                   %{shareddir}/doc/INSTALL-MYSQL
%attr(444,root,qmail)                   %{shareddir}/doc/Quick-INSTALL
%attr(444,root,qmail)                   %{shareddir}/doc/ChangeLog
%attr(444,root,qmail)                   %{shareddir}/doc/percenthack.shtml
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.local2alias
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.local2local
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.nullclient
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.rem2local
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.relaybad
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.local2ext
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.local2virt
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.relaygood
%attr(444,root,qmail)                   %{shareddir}/doc/PIC.local2rem
%attr(444,root,qmail)                   %{shareddir}/doc/HOWTO.bogofilter
%attr(444,root,qmail)                   %{shareddir}/doc/37rules.pdf
%attr(444,root,qmail)                   %{shareddir}/doc/indimail_arch.png
%attr(444,root,qmail)                   %{shareddir}/doc/indimail_queue.png
%attr(444,root,qmail)                   %{shareddir}/doc/FAQ.pdf
%attr(444,root,qmail)                   %{shareddir}/doc/README

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vdeluser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vadduser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vaddaliasdomain
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vrenamedomain
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vsetuserquota
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vmoveuser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vuserinfo
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vdeldomain
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vadddomain
%if %nobogofilter == 0
%verify (not user group mode) %attr(6551, root, indimail)  %{_prefix}/bin/bogofilter
%endif
%verify (not user group mode) %attr(4551, root, root)      %{_prefix}/bin/vdominfo
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vrenameuser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/printdir
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vmoduser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vcfilter
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vbulletin
%verify (not user group mode) %attr(6551, qscand, qmail)   %{_prefix}/sbin/qhpsi
%verify (not user group mode) %attr(2551, root, qscand)    %{_prefix}/sbin/run-cleanq
%verify (not user group mode) %attr(6551, qmailq, qmail)   %{_prefix}/sbin/qmail-queue
%verify (not user group mode) %attr(4755, qscand, qscand)  %{_prefix}/sbin/qscanq
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/sbin/systpass
%verify (not user group mode) %attr(2755, alias, qmail)    %{indimaildir}/alias
%verify (not user group mode) %attr(2755, indimail, qmail) %{indimaildir}/autoturn
%verify (not user group mode) %attr(4755, root, qmail)     %{libexedir}/sq_vacation
%verify (not user group mode) %attr(4755, root, root)      %{libexedir}/authlib/authshadow
%endif
%endif

# Shared libraries (omit for architectures that don't support them)

# pam-multi
%attr(755,root,root)                    /%{pam_module_dir}/pam-multi.so

%if %nolibdkim == 0
%if %i_m_on_mac == 1
%{_libdir}/libdkim-%{libdkim_version}.0.dylib
%else
%{_libdir}/libdkim-%{libdkim_version}.so.0
%{_libdir}/libdkim-%{libdkim_version}.so.0.0.0
%endif
%endif

%if %nolibsrs2 == 0
%if %i_m_on_mac == 1
%{_libdir}/libsrs2-%{libsrs2_version}.0.dylib
%else
%{_libdir}/libsrs2-%{libsrs2_version}.so.0
%{_libdir}/libsrs2-%{libsrs2_version}.so.0.0.0
%endif
%endif

%if %nocourierimap == 0
%if %i_m_on_mac == 1
%{_libdir}/libunicode.0.dylib
%else
%{_libdir}/libunicode.so.1
%{_libdir}/libunicode.so.1.1.0
%endif
%endif

%if %i_m_on_mac == 1
%{_libdir}/libeps-%{eps_version}.0.dylib
%{_libdir}/libcdb-%{cdb_version}.0.dylib
%{_libdir}/libflash-%{flash_version}.0.dylib
%{_libdir}/libindimail-%{version}.0.dylib
%else
%{_libdir}/libeps-%{eps_version}.so.0
%{_libdir}/libeps-%{eps_version}.so.0.0.0
%{_libdir}/libcdb-%{cdb_version}.so.0
%{_libdir}/libcdb-%{cdb_version}.so.0.0.0
%{_libdir}/libflash-%{flash_version}.so.0
%{_libdir}/libflash-%{flash_version}.so.0.0.0
%{_libdir}/libindimail-%{version}.so.0
%{_libdir}/libindimail-%{version}.so.0.0.0
%endif

%if %nonssd == 0
                                        /usr/%{_lib}/libnss_nssd.so.2
%attr(755,root,root)                    /usr/%{_lib}/libnss_nssd.so.2.0.0
%endif

%files devel
%defattr(-, root, root, 0755)
%dir %attr(555,root,root)              %{_prefix}/include/indimail
%if "%{_prefix}" != "/usr"
%dir %attr(555,root,root)              %{_libdir}
%dir %attr(555,root,qmail)             %{mandir}/man3
%endif
%doc %attr(644,root,root)              %{mandir}/man3/*

%attr(644,root,qmail)                   %{sysconfdir}/inc_deps
%attr(644,root,qmail)                   %{sysconfdir}/lib_deps

%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_unroll.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_buffer.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_email.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/rfc2822.h
%attr(444,root,qmail)                   %{_prefix}/include/indimail/indimail.h
%attr(444,root,qmail)                   %{_prefix}/include/indimail/typesx.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_mime.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_boundary.h
%attr(444,root,qmail)                   %{_prefix}/include/indimail/indimail_config.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_roll.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_line.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_int_buffer.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_base64.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_misc.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_address.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_interface.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_int_stream.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_header.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_content.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/cdb.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/cdbmake.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/uint32.h

%if %noclamav == 0
%attr(644,root,qmail)                   %{_prefix}/include/clamav.h
%endif

%if %nolibdkim == 0
%attr(644,root,qmail)                   %{_prefix}/include/indimail/dkim.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/macros.h
%attr(644,root,qmail)                   %{_libdir}/libdkim.a
%endif

%if %nocourierimap == 0
%attr(644,root,qmail)                   %{_prefix}/include/unicode.h
%attr(644,root,qmail)                   %{_libdir}/libunicode.a
%endif

%if %nolibsrs2 == 0
%attr(644,root,qmail)                   %{_prefix}/include/indimail/srs2.h
%attr(644,root,qmail)                   %{_libdir}/libsrs2.a
%endif

%{_libdir}/libeps.a
%{_libdir}/libcdb.a
%{_libdir}/libflash.a
%{_libdir}/libindimail.a

%if %noclamav == 0
%if %i_m_on_mac == 1
%{_libdir}/libclam*.dylib
%else
%{_libdir}/libclam*.so
%endif
%attr(644,root,root)                        %{_pkg_config_path}/libclamav.pc
%endif

%if %nolibdkim == 0
%if %i_m_on_mac == 1
%{_libdir}/libdkim.dylib
%else
%{_libdir}/libdkim.so
%endif
%endif

%if %nolibsrs2 == 0
%if %i_m_on_mac == 1
%{_libdir}/libsrs2.dylib
%else
%{_libdir}/libsrs2.so
%endif
%endif

%if %nocourierimap == 0
%if %i_m_on_mac == 1
%{_libdir}/libunicode.dylib
%else
%{_libdir}/libunicode.so
%endif
%endif

%if %i_m_on_mac == 1
%{_libdir}/libcdb.dylib
%{_libdir}/libflash.dylib
%{_libdir}/libindimail.dylib
%else
%{_libdir}/libeps.so
%{_libdir}/libcdb.so
%{_libdir}/libflash.so
%{_libdir}/libindimail.so
%endif

%if %nonssd == 0
                                        /usr/%{_lib}/libnss_nssd.so
%endif

%{_pkg_config_path}/libindimail.pc

%files -n libindimail
%defattr(-, root, root, 0755)
# Shared libraries (omit for architectures that don't support them)
%if %noclamav == 0
%if %i_m_on_mac == 1
%{_libdir}/libclam*.dylib
%else
%{_libdir}/libclam*.so.*
%endif
%endif

%if %nolibdkim == 0
%if %i_m_on_mac == 1
%{_libdir}/libdkim-%{libdkim_version}.0.dylib
%else
%{_libdir}/libdkim-%{libdkim_version}.so.0
%{_libdir}/libdkim-%{libdkim_version}.so.0.0.0
%endif
%endif

%if %nolibsrs2 == 0
%if %i_m_on_mac == 1
%{_libdir}/libsrs2-%{libsrs2_version}.0.dylib
%else
%{_libdir}/libsrs2-%{libsrs2_version}.so.0
%{_libdir}/libsrs2-%{libsrs2_version}.so.0.0.0
%endif
%endif

%if %nocourierimap == 0
%if %i_m_on_mac == 1
%{_libdir}/libunicode.0.dylib
%else
%{_libdir}/libunicode.so.1
%{_libdir}/libunicode.so.1.1.0
%endif
%endif

%if %i_m_on_mac == 0
%{_libdir}/libeps-%{eps_version}.so.0
%{_libdir}/libeps-%{eps_version}.so.0.0.0
%{_libdir}/libcdb-%{cdb_version}.so.0
%{_libdir}/libcdb-%{cdb_version}.so.0.0.0
%{_libdir}/libflash-%{flash_version}.so.0
%{_libdir}/libflash-%{flash_version}.so.0.0.0
%{_libdir}/libindimail-%{version}.so.0
%{_libdir}/libindimail-%{version}.so.0.0.0
%else
%{_libdir}/libeps-%{eps_version}.0.dylib
%{_libdir}/libcdb-%{cdb_version}.0.dylib
%{_libdir}/libflash-%{flash_version}.0.dylib
%{_libdir}/libindimail-%{version}.0.dylib
%endif
%{_pkg_config_path}/libindimail.pc

%files mini
%defattr(-, root, root, 0555)
#
# Directories
#
%dir %attr(555,root,qmail)        %{indimaildir}
                                  %{indimaildir}/bin
                                  %{indimaildir}/sbin
                                  %{indimaildir}/users
                                  %{indimaildir}/control
%dir %attr(755,indimail,indimail) %{sysconfdir}/control
%dir %attr(755,root,root)         %{mandir}
%dir %attr(755,root,root)         %{mandir}/man1
%dir %attr(755,root,root)         %{mandir}/cat1
%dir %attr(755,root,root)         %{mandir}/man8
%dir %attr(755,root,root)         %{mandir}/cat8
#
%attr(755,root,qmail)             %{_prefix}/bin/sendmail
%attr(755,root,qmail)             %{_prefix}/bin/qmail-inject
%attr(755,root,qmail)             %{_prefix}/bin/forward
%attr(755,root,qmail)             %{_prefix}/bin/predate
%attr(755,root,qmail)             %{_prefix}/bin/datemail
%attr(755,root,qmail)             %{_prefix}/bin/mailsubj
%attr(755,root,qmail)             %{_prefix}/bin/qmail-showctl
%attr(755,root,qmail)             %{_prefix}/bin/qmaildirmake
%attr(755,root,qmail)             %{_prefix}/bin/maildir2mbox
%attr(755,root,qmail)             %{_prefix}/bin/maildirwatch
%attr(755,root,qmail)             %{_prefix}/sbin/qmail-qmqpc
#
%attr(444,root,qmail)             %{mandir}/man1/forward.1.gz
%attr(444,root,qmail)             %{mandir}/man1/predate.1.gz
%attr(444,root,qmail)             %{mandir}/man1/datemail.1.gz
%attr(444,root,qmail)             %{mandir}/man1/mailsubj.1.gz
%attr(444,root,qmail)             %{mandir}/man1/qmaildirmake.1.gz
%attr(444,root,qmail)             %{mandir}/man1/maildir2mbox.1.gz
%attr(444,root,qmail)             %{mandir}/man1/maildirwatch.1.gz
%attr(444,root,qmail)             %{mandir}/cat1/forward.0.gz
%attr(444,root,qmail)             %{mandir}/cat1/mailsubj.0.gz
%attr(444,root,qmail)             %{mandir}/cat1/qmaildirmake.0.gz
%attr(444,root,qmail)             %{mandir}/cat1/maildir2mbox.0.gz
%attr(444,root,qmail)             %{mandir}/cat1/maildirwatch.0.gz
#
%attr(444,root,qmail)             %{mandir}/man8/qmail-showctl.8.gz
%attr(444,root,qmail)             %{mandir}/man8/qmail-inject.8.gz
%attr(444,root,qmail)             %{mandir}/man8/isendmail.8.gz
%attr(444,root,qmail)             %{mandir}/man8/qmail-qmqpc.8.gz
%attr(444,root,qmail)             %{mandir}/cat8/qmail-showctl.0.gz
%attr(444,root,qmail)             %{mandir}/cat8/qmail-inject.0.gz
%attr(444,root,qmail)             %{mandir}/cat8/qmail-qmqpc.0.gz

# a copy of /var/qmail/control/me, /var/qmail/control/defaultdomain,
# and /var/qmail/control/plusdomain from your central server, so that
# qmail-inject uses appropriate host names in outgoing mail; and
# this host's name in /var/qmail/control/idhost, so that
# qmail-inject generates Message-ID without any risk of collision

%clean
[ "%{buildroot}" != "/" ] && %{__rm} -fr %{buildroot}

#            install   erase   upgrade  reinstall
# pretrans      0        -         0
# pre           1        -         2         2
# post          1        -         2         2
# preun         -        0         1         -
# postun        -        0         1         -
# posttrans     0        -         0
# The scriptlets in %%pre and %%post are respectively run before and after a package is installed.
# The scriptlets %%preun and %%postun are run before and after a package is uninstalled.
# The scriptlets %%pretrans and %%posttrans are run at start and end of a transaction.
# On upgrade, the scripts are run in the following order:
#
#   1. pretrans of new package
#   2. pre of new package
#   3. (package install)
#   4. post of new package
#   5. preun of old package
#   6. (removal of old package)
#   7. postun of old package
#   8. posttrans of new package 

### SCRIPTLET ###############################################################################
%verifyscript
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
%{_prefix}/sbin/svctool --check-install --servicedir=%{servicedir} \
  --qbase=%{qbase} --qcount=%{qcount} --qstart=1

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%verify_permissions -e %{_prefix}/bin/vdeluser
%verify_permissions -e %{_prefix}/bin/vadduser
%verify_permissions -e %{_prefix}/bin/vaddaliasdomain
%verify_permissions -e %{_prefix}/bin/vrenamedomain
%verify_permissions -e %{_prefix}/bin/vsetuserquota
%verify_permissions -e %{_prefix}/bin/vmoveuser
%verify_permissions -e %{_prefix}/bin/vuserinfo
%verify_permissions -e %{_prefix}/bin/vdeldomain
%verify_permissions -e %{_prefix}/bin/vadddomain
%if %nobogofilter == 0
%verify_permissions -e %{_prefix}/bin/bogofilter
%endif
%verify_permissions -e %{_prefix}/bin/vdominfo
%verify_permissions -e %{_prefix}/bin/vrenameuser
%verify_permissions -e %{_prefix}/bin/printdir
%verify_permissions -e %{_prefix}/bin/vmoduser
%verify_permissions -e %{_prefix}/bin/vcfilter
%verify_permissions -e %{_prefix}/bin/vbulletin
%verify_permissions -e %{_prefix}/sbin/qhpsi
%verify_permissions -e %{_prefix}/sbin/run-cleanq
%verify_permissions -e %{_prefix}/sbin/qmail-queue
%verify_permissions -e %{_prefix}/sbin/qscanq
%verify_permissions -e %{_prefix}/sbin/systpass
%verify_permissions -e %{libexecdir}/sq_vacation
%verify_permissions -e %{libexecdir}/authlib/authshadow
%verify_permissions -e %{indimaildir}/alias
%verify_permissions -e %{indimaildir}/autoturn
%endif
%endif

### SCRIPTLET ###############################################################################
%pretrans
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -d %{_prefix} -a -d /service ] ; then
  if [ -f %{_prefix}/sbin/initsvc ] ; then
    %{_prefix}/sbin/initsvc -status
  fi

  if test -f %{_sysconfdir}/init/svscan.conf
  then
    echo "Giving IndiMail exactly 5 seconds to exit nicely"
    /sbin/initctl emit qmailstop > /dev/null 2>&1
  elif test -f %{_sysconfdir}/event.d/svscan
  then
    echo "Giving IndiMail exactly 5 seconds to exit nicely"
    /sbin/initctl emit qmailstop > /dev/null 2>&1
  elif test -f %{_sysconfdir}/systemd/system/multi-user.target.wants/indimail.service
  then
    echo "Giving IndiMail exactly 5 seconds to exit nicely"
    /bin/systemctl stop indimail.service > /dev/null 2>&1
  elif test -x %{_prefix}/sbin/initsvc
  then
    echo "Giving IndiMail exactly 5 seconds to exit nicely"
    %{_prefix}/sbin/initsvc -off
  fi
  sleep 5
fi

### SCRIPTLET ###############################################################################
%pre 
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
# we are doing upgrade
if [ $argv1 -eq 2 ] ; then
  exit 0
fi
(
echo "Checking for mandatory user/group mysql.."
case "%host" in
  *-*-darwin*)
  /usr/bin/dscl . -list /Groups/mysql > /dev/null || (echo "group mysql does not exist. Aborting..." && false)
  if [ $? -ne 0 ] ; then
    exit 1
  fi
  /usr/bin/dscl . -list /Users/mysql > /dev/null || (echo "user mysql does not exist. Aborting..." && false)
  if [ $? -ne 0 ] ; then
    exit 1
  fi
  ;;
  *)
  /usr/bin/getent group  mysql > /dev/null || (echo "group mysql does not exist. Aborting..." && false)
  if [ $? -ne 0 ] ; then
    exit 1
  fi
  /usr/bin/getent passwd mysql > /dev/null || (echo "user  mysql does not exist. Aborting..." && false)
  if [ $? -ne 0 ] ; then
    exit 1
  fi
esac
%if %i_m_on_mac == 1
echo "Adding IndiMail users/groups"
/usr/bin/dscl . -create /Groups/indimail PrimaryGroupID 555
/usr/bin/dscl . -create /Groups/nofiles PrimaryGroupID 556
/usr/bin/dscl . -create /Groups/qmail   PrimaryGroupID 557
/usr/bin/dscl . -create /Groups/qscand  PrimaryGroupID 558

/usr/bin/dscl . -create /Users/indimail UniqueID 555
/usr/bin/dscl . -create /Users/indimail home @indimaildir@
/usr/bin/dscl . -create /Users/indimail PrimaryGroupID 555
/usr/bin/dscl . -create /Users/indimail UserShell /bin/bash
/usr/bin/dscl . -create /Users/indimail RealName indimail

/usr/bin/dscl . -create /Users/alias    UniqueID 556
/usr/bin/dscl . -create /Users/alias    home @indimaildir@/alias
/usr/bin/dscl . -create /Users/alias    PrimaryGroupID 556
/usr/bin/dscl . -create /Users/alias    UserShell /bin/bash
/usr/bin/dscl . -create /Users/alias    RealName alias
id=557
for i in qmaild qmaill qmailp
do
  /usr/bin/dscl . -create /Users/$i   UniqueID $id
  /usr/bin/dscl . -create /Users/$i   home @indimaildir@
  /usr/bin/dscl . -create /Users/$i   PrimaryGroupID 556
  /usr/bin/dscl . -create /Users/$i   UserShell /bin/bash
  /usr/bin/dscl . -create /Users/$i   RealName qmaild
  id=`expr $id + 1`
done
id=560
for i in qmailq qmailr qmails
do
  /usr/bin/dscl . -create /Users/$i   UniqueID $id
  /usr/bin/dscl . -create /Users/$i   home @indimaildir@
  /usr/bin/dscl . -create /Users/$i   PrimaryGroupID 557
  /usr/bin/dscl . -create /Users/$i   UserShell /bin/bash
  /usr/bin/dscl . -create /Users/$i   RealName qmailq
  id=`expr $id + 1`
done
/usr/bin/dscl . -create /Users/qscand UniqueID 563
/usr/bin/dscl . -create /Users/qscand home @indimaildir@/qscanq
/usr/bin/dscl . -create /Users/qscand PrimaryGroupID 558
/usr/bin/dscl . -create /Users/qscand UserShell /bin/false
/usr/bin/dscl . -create /Users/qscand RealName qscand
/usr/bin/dscl . -append /Groups/qmail GroupMembership qscand
%else
#
# Create a users and groups. Do not report any problems if they already
# exists.
#
nscd_up=`ps -ef |grep nscd |grep -v grep|wc -l`
if [ $nscd_up -ge 1 ] ; then
  if [ -x %{_sysconfdir}/init.d/nscd ] ; then
    %{_sysconfdir}/init.d/nscd stop
  fi
fi
echo "Adding IndiMail users/groups"
/usr/bin/getent group %groupname  > /dev/null || /usr/sbin/groupadd -r -g %gid %groupname || true
if [ $? = 4 ] ; then
  /usr/sbin/groupadd %groupname
fi
/usr/bin/getent group nofiles   > /dev/null || /usr/sbin/groupadd nofiles  || true
/usr/bin/getent group qmail     > /dev/null || /usr/sbin/groupadd qmail    || true
/usr/bin/getent group qscand    > /dev/null || /usr/sbin/groupadd qscand   || true

/usr/bin/getent passwd %username > /dev/null || /usr/sbin/useradd -r -g %groupname -u %uid -d %{indimaildir} %username || true
if [ $? = 4 ] ; then
  /usr/sbin/useradd -r -g %groupname -d %{indimaildir} %username
fi
/usr/bin/getent passwd alias    > /dev/null || /usr/sbin/useradd -M -g nofiles  -d %{indimaildir}/alias  -s /sbin/nologin alias  || true
/usr/bin/getent passwd qmaild   > /dev/null || /usr/sbin/useradd -M -g nofiles  -d %{indimaildir}        -s /sbin/nologin qmaild || true
/usr/bin/getent passwd qmaill   > /dev/null || /usr/sbin/useradd -M -g nofiles  -d %{indimaildir}        -s /sbin/nologin qmaill || true
/usr/bin/getent passwd qmailp   > /dev/null || /usr/sbin/useradd -M -g nofiles  -d %{indimaildir}        -s /sbin/nologin qmailp || true
/usr/bin/getent passwd qmailq   > /dev/null || /usr/sbin/useradd -M -g qmail    -d %{indimaildir}        -s /sbin/nologin qmailq || true
/usr/bin/getent passwd qmailr   > /dev/null || /usr/sbin/useradd -M -g qmail    -d %{indimaildir}        -s /sbin/nologin qmailr || true
/usr/bin/getent passwd qmails   > /dev/null || /usr/sbin/useradd -M -g qmail    -d %{indimaildir}        -s /sbin/nologin qmails || true
/usr/bin/getent passwd qscand   > /dev/null || /usr/sbin/useradd -M -g qscand   -d %{indimaildir}/qscanq -G qmail,qscand -s /sbin/nologin qscand || true

for i in %username alias qmaild qmaill qmailp qmailq qmailr qmails qscand
do
  %{__rm} -f /var/spool/mail/$i
done
if [ $nscd_up -ge 1 ] ; then
  if [ -x %{_sysconfdir}/init.d/nscd ] ; then
    %{_sysconfdir}/init.d/nscd start
  fi
fi
%endif
) > /tmp/indimail-install.log 2>&1

### SCRIPTLET ###############################################################################
%post
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -x /bin/touch ] ; then
  TOUCH=/bin/touch
elif [ -x /usr/bin/touch ] ; then
  TOUCH=/usr/bin/touch
else
  TOUCH=/bin/touch
fi

if [ $argv1 -eq 2 ] ; then # upgrade
  if [ -f %{shareddir}/boot/rpm.init ] ; then
%if %i_m_on_mac == 0
    /sbin/ldconfig
%endif
    echo "Running Custom Upgrade Script for post"
    /bin/sh %{shareddir}/boot/rpm.init upgrade
  fi
  echo "doing post upgrade activities"
  (
  # selinux
  %{_prefix}/sbin/svctool --config=selinux
  ) >> /tmp/indimail-install.log 2>&1
  exit 0
fi

%if %i_m_on_mac == 0
# Recreate ld.so links and cache
if [ -d %{_sysconfdir}/ld.so.conf.d ] ; then
  (
    echo %{_libdir}
    if [ -f %{mysqlPrefix}/%{_lib}/mysql/libmysqlclient.so ] ; then
      echo %{mysqlPrefix}/%{_lib}/mysql 
    elif [ -f %{mysqlPrefix}/%{_lib}/libmysqlclient.so ] ; then
      echo %{mysqlPrefix}/%{_lib}
    fi
  ) > %{_sysconfdir}/ld.so.conf.d/indimail-%{_arch}.conf
fi
/sbin/ldconfig
%endif

echo "Doing post installation activities for the following"
echo ""
echo " 1. Configure %{logdir} for multilog"
echo " 2. Configure %{servicedir}. Move existing services to %{servicedir}.org"
echo " 3. Configure svscanlog service"
echo " 4. Configure standard catch-all accounts, default qmail configuration"
echo " 5. Configure %{sysconfdir}/indimail.cnf for MySQL service"
echo " 6. Configure MySQL DB in %{indimaildir}/mysqldb/data"
echo " 7. Configure DKIM, Domainkeys signature"
echo " 8. Configure QHPSI for inline virus scanning"
echo " 9. Configure SMTP services on port in 465 25 587"
echo "10. Configure default queue configuration for sendmail, qmail-inject"
echo "11. Configure ODMR service"
echo "12. Configure greylisting service"
echo "13. Configure QMTP service"
echo "14. Configure QMQP service"
echo "15. Configure udplogger service"
echo "16. Configure fetchmail service"
echo "17. Configure IMAP/POP3/poppass services"
echo "18. Configure indisrvr service"
echo "19. Configure nssd service"
echo "20. Configure inlookup service"
echo "21. Configure qscanq/clamd/freshclam service"
echo "22. Configure %{sysconfdir}/control/signatures"
echo "23. Configure SPAM filter configuration"
echo "24. Configure tcprules database for SMTP, IMAP, POP3, popass"
echo "25. Configure selinux configuration"
echo "26. Configure indimail startup"
echo "27. Configure default cron entries"
echo ""

(
echo "Creating %{logdir}"
if [ ! -d %{logdir} ] ; then
  %{__mkdir_p} %{logdir}
fi
%{__chown} -R qmaill:nofiles %{logdir}

if [ -d /service ] ; then
  echo "UFO found in /service. Moving it to /service.org" 1>&2
  %{__mv} -f %{servicedir} %{servicedir}.org
fi

# svscanlog service
%{_prefix}/sbin/svctool --svscanlog --servicedir=%{servicedir}

echo "Creating default qmail configuraton and catch-all alias (${indimaildir}/alias/Maildir) for all system users"
%{_prefix}/sbin/svctool --config=qmail --postmaster=%{indimaildir}/alias/Maildir/ \
  --default-domain=%{default_domain} --mysqlhost=localhost --mysqluser=indimail \
  --mysqlpass=ssh-1.5- --mysqlsocket=%{mysqlSocket}

# MySQL
if [ -x %{mysqlPrefix}/libexec/mysqld -o -x %{mysqlPrefix}/sbin/mysqld ] ; then
  echo "Creating Database/Service for MySQL"
  # MySQL Config Creation
  %{_prefix}/sbin/svctool --config=mysql   --mysqlPrefix=%{mysqlPrefix} --mysqlsocket=%{mysqlSocket}
  # MySQL Database Creation
  %{_prefix}/sbin/svctool --config=mysqldb --mysqlPrefix=%{mysqlPrefix} \
      --databasedir=%{indimaildir}/mysqldb --base_path=%{mbase} --mysqlsocket=%{mysqlSocket}
  # MySQL Supervise creation
  %{_prefix}/sbin/svctool --mysql=3306 --servicedir=%{servicedir} --mysqlPrefix=%{mysqlPrefix} \
    --databasedir=%{indimaildir}/mysqldb --config=%{sysconfdir}/indimail.cnf --default-domain=%{default_domain}
  count=`ps -e|grep mysqld|wc -l`
  if [ $count -gt 0 ] ; then
    echo "Disabling mysqld service"
    $TOUCH %{servicedir}/mysql.3306/down
  fi
else
  echo "WARNING!!! Did not find mysqld in %{mysqlPrefix}/{libexec,sbin}. Skipping MySQL configuration" 1>&2
fi

if [ %nodksignatures -eq 0 ] ; then
  if [ -x %{_prefix}/bin/dknewkey ] ; then
    ver_opt="both"
    sign_opt="both"
    key_bit=$KEYBIT
    if [ " $key_bit" = " " ] ; then
      key_bit=1024
    fi
    %{_prefix}/bin/dknewkey %{sysconfdir}/control/domainkeys/default $key_bit
  else
    ver_opt="none"
    sign_opt="none"
  fi
else
  ver_opt="none"
  sign_opt="none"
fi

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%if 0%{?set_permissions:1} > 0
  if [ ! -f /tmp/no_permissions ] ; then
      %set_permissions %{name}
  fi
%else
  if [ ! -f /tmp/no_permissions ] ; then
      %run_permissions
  fi
%endif
%endif
%endif

# SMTP
%ifarch x86_64
%global fetchmail_mem 144857600
%global smtp_soft_mem 104857600
%global qmtp_soft_mem 104857600
%global qmqp_soft_mem 104857600
%global imap_pop3_mem 524288000
%global imapspop3_mem 524288000
%global poppass_mem   104857600
%else
%global fetchmail_mem 72428800
%global smtp_soft_mem 52428800
%global qmtp_soft_mem 52428800
%global qmqp_soft_mem 52428800
%global imap_pop3_mem 52428800
%global imapspop3_mem 52428800
%global poppass_mem   52428800
%endif

if [ %noclamav -eq 0 ] ; then
  echo "Checking if clamav is installed"
  clamav_os=0
  clamdPrefix=%{_prefix}
  qhpsi="%{_prefix}/bin/clamdscan %s --fdpass --quiet --no-summary"
  mysysconfdir=%{sysconfdir}
else
  if [ -f /usr/sbin/clamd -a -f /usr/bin/clamdscan ] ; then
    clamav_os=1
    clamdPrefix="/usr"
    qhpsi="/usr/bin/clamdscan %s --fdpass --quiet --no-summary"
    if [ -d /etc/clamav ] ; then
      mysysconfdir=/etc/clamav
    else
      mysysconfdir=%{_sysconfdir}
    fi
  else
    clamav_os=0
  fi
fi
for port in 465 25 587
do
  if [ $port -eq 465 ] ; then
    if [ %nobogofilter -eq 1 ] ; then
      spamfilter=0
    else
      spamfilter=1
    fi
    extra_opt="--skipsend --ssl"
    extra_opt="$extra_opt --rbl=-rzen.spamhaus.org --rbl=-rdnsbl-1.uceprotect.net"
  elif [ $port -eq 587 ] ; then
    # local authenticated users
    # why bother with spamfilter
    # if you do, then you have a serious
    # problem with your organization, not 
    # with IndiMail
    spamfilter=0
    extra_opt="--skipsend --authsmtp --antispoof"
  else
    if [ %nobogofilter -eq 1 ] ; then
      spamfilter=0
    else
      spamfilter=1
    fi
    extra_opt="--remote-authsmtp=plain --localfilter --remotefilter"
    extra_opt="$extra_opt --deliverylimit-count=-1 --deliverylimit-size=-1"
    extra_opt="$extra_opt --rbl=-rzen.spamhaus.org --rbl=-rdnsbl-1.uceprotect.net"
  fi
%if %{tcpserver_plugin} == 1
    extra_opt="$extra_opt --shared-objects=1"
%endif
  if [ $spamfilter -eq 1 ] ; then
    if [ %noclamav -eq 0 -o $clamav_os -eq 1 ] ; then
      %{_prefix}/sbin/svctool --smtp=$port --servicedir=%{servicedir} \
        --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
        --query-cache --dnscheck --password-cache \
        --cntrldir=control --localip=0 --maxdaemons=75 --maxperip=25 --persistdb \
        --starttls --fsync --syncdir --memory=%{smtp_soft_mem} --chkrecipient --chkrelay --masquerade \
        --min-free=52428800 --content-filter \
        --spamfilter="%{_prefix}/bin/bogofilter -p -d %{sysconfdir}" \
        --logfilter=/tmp/spamfifo --rejectspam=0 --spamexitcode=0 \
        --qhpsi="$qhpsi" \
        --dmasquerade \
        --dkverify=$ver_opt \
        --dksign=$sign_opt --private_key=%{sysconfdir}/control/domainkeys/%/%{dkimkeyfn} \
        $extra_opt
    else
      %{_prefix}/sbin/svctool --smtp=$port --servicedir=%{servicedir} \
        --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
        --query-cache --dnscheck --password-cache \
        --cntrldir=control --localip=0 --maxdaemons=75 --maxperip=25 --persistdb \
        --starttls --fsync --syncdir --memory=%{smtp_soft_mem} --chkrecipient --chkrelay --masquerade \
        --min-free=52428800 --content-filter --virus-filter \
        --spamfilter="%{_prefix}/bin/bogofilter -p -d %{sysconfdir}" \
        --logfilter=/tmp/spamfifo --rejectspam=0 --spamexitcode=0 \
        --dmasquerade \
        --dkverify=both \
        --dksign=both --private_key=%{sysconfdir}/control/domainkeys/%/%{dkimkeyfn} \
        $extra_opt
    fi
  else
    if [ %noclamav -eq 0 -o $clamav_os -eq 1 ] ; then
      %{_prefix}/sbin/svctool --smtp=$port --servicedir=%{servicedir} \
        --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
        --query-cache --dnscheck --password-cache \
        --cntrldir=control --localip=0 --maxdaemons=75 --maxperip=25 --persistdb \
        --starttls --fsync --syncdir --memory=%{smtp_soft_mem} --chkrecipient --chkrelay --masquerade \
        --min-free=52428800 --content-filter \
        --qhpsi="$qhpsi" \
        --dmasquerade \
        --dkverify=both \
        --dksign=both --private_key=%{sysconfdir}/control/domainkeys/%/%{dkimkeyfn} \
        $extra_opt
    else
      %{_prefix}/sbin/svctool --smtp=$port --servicedir=%{servicedir} \
        --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
        --query-cache --dnscheck --password-cache \
        --cntrldir=control --localip=0 --maxdaemons=75 --maxperip=25 --persistdb \
        --starttls --fsync --syncdir --memory=%{smtp_soft_mem} --chkrecipient --chkrelay --masquerade \
        --min-free=52428800 --content-filter --virus-filter \
        --dmasquerade \
        --dkverify=both \
        --dksign=both --private_key=%{sysconfdir}/control/domainkeys/%/%{dkimkeyfn} \
        $extra_opt
    fi
  fi
  echo "1" > %{servicedir}/qmail-smtpd.$port/variables/DISABLE_PLUGIN
done
#
# qmail-inject, sendmail default configuration
#
if [ %noclamav -eq 0 -o $clamav_os -eq 1 ] ; then
  %{_prefix}/sbin/svctool --queueParam=defaultqueue \
    --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
    --min-free=52428800 --fsync --syncdir \
    --qhpsi="$qhpsi" \
    --dkverify="none" --dksign="none" \
    $extra_opt
else
  %{_prefix}/sbin/svctool --queueParam=defaultqueue \
    --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
    --min-free=52428800 --fsync --syncdir --virus-filter \
    --dkverify="none" --dksign="none" \
    $extra_opt
fi
#
# ODMR Service
#
%{_prefix}/sbin/svctool --smtp=366 --odmr --servicedir=%{servicedir} \
  --query-cache --password-cache --memory=%{smtp_soft_mem}
echo "1" > %{servicedir}/qmail-smtpd.366/variables/DISABLE_PLUGIN
# Greylist daemon
%{_prefix}/sbin/svctool --greylist=1999 --servicedir=%{servicedir} --min-resend-min=2 \
    --resend-win-hr=24 --timeout-days=30 --context-file=greylist.context \
    --hash-size=65536 --save-interval=5 --whitelist=greylist.white
# qmail-qmtpd service
%{_prefix}/sbin/svctool --qmtp=209 --servicedir=%{servicedir} --qbase=%{qbase} \
  --qcount=%{qcount} --qstart=1 --cntrldir=control --localip=0 --maxdaemons=75 --maxperip=25 \
  --fsync --syncdir --memory=%{qmtp_soft_mem} --min-free=52428800
# qmail-qmqpd service
%{_prefix}/sbin/svctool --qmqp=628 --servicedir=%{servicedir} --qbase=%{qbase} \
  --qcount=%{qcount} --qstart=1 --cntrldir=control --localip=0 --maxdaemons=75 --maxperip=25 \
  --fsync --syncdir --memory=%{qmqp_soft_mem} --min-free=52428800
$TOUCH %{servicedir}/qmail-qmqpd.628/down

if [ %nofetchmail -eq 0 ] ; then
# fetchmail
  if [ %nobogofilter -eq 0 ] ; then
    if [ %noclamav -eq 0 -o $clamav_os -eq 1 ] ; then
      %{_prefix}/sbin/svctool --fetchmail --servicedir=%{servicedir} \
        --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
        --cntrldir=control --default-domain=%{default_domain} \
        --qhpsi="$qhpsi" \
        --spamfilter="%{_prefix}/bin/bogofilter -p -d %{sysconfdir}" \
        --logfilter=/tmp/spamfifo --rejectspam=0 --spamexitcode=0 \
        --memory=%{fetchmail_mem} --fsync --syncdir \
        --dkverify=$ver_opt
    else
      %{_prefix}/sbin/svctool --fetchmail --servicedir=%{servicedir} \
        --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
        --cntrldir=control --default-domain=%{default_domain} \
        --spamfilter="%{_prefix}/bin/bogofilter -p -d %{sysconfdir}" \
        --logfilter=/tmp/spamfifo --rejectspam=0 --spamexitcode=0 \
        --memory=%{fetchmail_mem} --fsync --syncdir \
        --dkverify=$ver_opt
    fi
  else
    if [ %noclamav -eq 0 -o $clamav_os -eq 1 ] ; then
      %{_prefix}/sbin/svctool --fetchmail --servicedir=%{servicedir} \
        --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
        --cntrldir=control --default-domain=%{default_domain} \
        --qhpsi="$qhpsi" \
        --memory=%{fetchmail_mem} --fsync --syncdir \
        --dkverify=$ver_opt
    else
      %{_prefix}/sbin/svctool --fetchmail --servicedir=%{servicedir} \
        --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
        --cntrldir=control --default-domain=%{default_domain} \
        --memory=%{fetchmail_mem} --fsync --syncdir \
        --dkverify=$ver_opt
    fi
  fi
  #
  # user has to create fetchmailrc before which fetchmail cannot be started
  #
  $TOUCH %{servicedir}/fetchmail/down
fi

if [ %nocourierimap -eq 0 ] ; then
# IMAP/POP3
%{_prefix}/sbin/svctool --imap=143 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=%{default_domain} --memory=%{imap_pop3_mem} \
  --starttls
%{_prefix}/sbin/svctool --imap=993 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=%{default_domain} --memory=%{imapspop3_mem} \
  --ssl
%{_prefix}/sbin/svctool --pop3=110 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=%{default_domain} --memory=%{imap_pop3_mem} \
  --starttls
%{_prefix}/sbin/svctool --pop3=995 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=%{default_domain} --memory=%{imapspop3_mem} \
  --ssl
fi
if [ %noproxy -eq 0 ] ; then
%{_prefix}/sbin/svctool --imap=4143 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=%{default_domain} --memory=%{imap_pop3_mem} \
  --proxy=143 --starttls --tlsprog=%{_prefix}/bin/sslerator
%{_prefix}/sbin/svctool --imap=9143 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=%{default_domain} --memory=%{imapspop3_mem} \
  --proxy=143 --ssl
%{_prefix}/sbin/svctool --pop3=4110 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=%{default_domain} --memory=%{imap_pop3_mem} \
  --proxy=110 --starttls --tlsprog=%{_prefix}/bin/sslerator
%{_prefix}/sbin/svctool --pop3=9110 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=%{default_domain} --memory=%{imapspop3_mem} \
  --proxy=110 --ssl
fi

# IndiMail Daemons
%{_prefix}/sbin/svctool --indisrvr=4000 --servicedir=%{servicedir} \
  --localip=0 --maxdaemons=40 --maxperip=25 --avguserquota=2097152 \
    --certfile=%{sysconfdir}/control/servercert.pem --ssl \
  --hardquota=52428800 --base_path=%{mbase}
%{_prefix}/sbin/svctool --inlookup=infifo --servicedir=%{servicedir} --cntrldir=control \
  --threads=5 --query-cache --password-cache
if [ %nonssd -eq 0 ] ; then
  %{_prefix}/sbin/svctool --pwdlookup=/tmp/nssd.sock --threads=5 --timeout=-1 \
    --mysqlhost=localhost --mysqluser=indimail \
    --mysqlpass=ssh-1.5- --mysqlsocket=%{mysqlSocket} --servicedir=%{servicedir}
fi
%{_prefix}/sbin/svctool --poppass=106 --localip=0 --maxdaemons=40 --maxperip=25 \
  --memory=%{poppass_mem} \
    --certfile=%{sysconfdir}/control/servercert.pem --ssl \
  --setpassword=%{_prefix}/sbin/vsetpass --servicedir=%{servicedir}

# virus/spam filtering
%{_prefix}/sbin/svctool --qscanq --servicedir=%{servicedir} --scanint=200
if [ %noclamav -eq 0 -o $clamav_os -eq 1 ] ; then
  %{_prefix}/sbin/svctool --config=clamd
  # create clamd, freshclam service
  %{_prefix}/sbin/svctool --clamd --servicedir=%{servicedir} --clamdPrefix=$clamdPrefix \
    --sysconfdir=$mysysconfdir
  if [ $clamav_os -eq 1 ] ; then
    echo "Checking if clamd/freshclam is running"
    count=`ps -e|grep clamd|wc -l`
    if [ $count -gt 0 ] ; then
      echo "Disabling clamd service"
      $TOUCH %{servicedir}/clamd/down
    fi
    count=`ps -e|grep freshclam|wc -l`
    if [ $count -gt 0 ] ; then
      echo "Disabling freshclam service"
      $TOUCH %{servicedir}/freshclam/down
    fi
  fi
fi

# udplogger service
%{_prefix}/sbin/svctool --udplogger=3000 --localip=0 --timeout=10 --servicedir=%{servicedir}

%{__cat} <<EOF > %{sysconfdir}/control/signatures
# Windows executables seen in active virii
TVqQAAMAA:
TVpQAAIAA
# Additional windows executable signatures not yet seen in virii
TVpAALQAc
TVpyAXkAX
TVrmAU4AA
TVrhARwAk
TVoFAQUAA
TVoAAAQAA
TVoIARMAA
TVouARsAA
TVrQAT8AA
# .ZIPfile signature seen in SoBig.E and mydoom:
#UEsDBBQAA:SoBig.e Virus
#UEsDBAoAAA:mydoom Virus
# .GIF file found in a previous Microsoft virus making the rounds.
R0lGODlhaAA7APcAAP///+rp6puSp6GZrDUjUUc6Zn53mFJMdbGvvVtXh2xre8bF1x8cU4yLprOy:Virus in .gif files
# http://www.gossamer-threads.com/lists/qmail/users/114447
UEsDBAoAAQAAAEBHYzCf4kJRDDAAAAAwAAAKAAAAc3ZtaXhlLmV4ZcuI1rOkjfn48VwCkMYHRTfM
EOF
%{__chown} qscand:qscand %{sysconfdir}/control/signatures

#
# bogofilter configuration
#
if [ %nobogofilter -eq 0 ] ; then
  %{_prefix}/sbin/svctool --config=bogofilter
fi

# rebuild cdb
for i in smtp qmtp qmqp imap pop3 poppass
do
  for j in `/bin/ls %{sysconfdir}/tcp*.$i 2>/dev/null`
  do
    echo "Creating CDB $j.cdb"
       %{_prefix}/bin/tcprules $j.cdb $j.tmp < $j && /bin/chmod 664 $j.cdb \
      && chown indimail:indimail $j.cdb
  done
done

# selinux
%{_prefix}/sbin/svctool --config=selinux

#
# Install IndiMail to be started on system boot
# The add-boot command installs svscan to be started by init, systemd, upstart or launchctl
#
echo "adding indimail startup"
%{_prefix}/sbin/svctool --config=add-boot

if [ -f ${sysconfdir}/cronlist ] ; then
  echo "adding cron entries"
  /usr/bin/crontab -u root ${sysconfdir}/cronlist
fi
) >> /tmp/indimail-install.log 2>&1

if [ -f %{shareddir}/boot/rpm.init ] ; then
  echo "Running Custom Installation Script for post"
  /bin/sh %{shareddir}/boot/rpm.init post
fi

if [ -x /bin/systemctl ] ; then
  /bin/systemctl enable indimail.service
fi
if [ -f %{_sysconfdir}/init/svscan.conf -o -f %{_sysconfdir}/event.d/svscan ] ; then
  echo "1. Issue /sbin/initctl emit qmailstart to start services"
  count=1
elif [ -f %{_sysconfdir}/systemd/system/multi-user.target.wants/indimail.service ] ; then
  echo "1. Issue /bin/systemctl start indimail.service to start services"
  count=1
else
%if %i_m_on_mac == 0
  echo "1. Issue %{_prefix}/sbin/initsvc -on"
  echo "2. Issue /sbin/init q to start services"
  count=2
%else
  echo "1. Issue /bin/launchctl load /System/Library/LaunchDaemons/indimail.plist"
  count=1
%endif
fi
count=`expr $count + 1`
echo "$count. Change your default domain in %{sysconfdir}/control/defaultdomain"
count=`expr $count + 1`
echo "$count. You can optionally run the following command to verify installation"
echo "   sudo rpm -V indimail"
%if %noclamav == 0
count=`expr $count + 1`
echo "$count. You need to ensure that clamav signatures download have completed so that"
echo "   you can start sending emails. Look at %{logdir}/freshclam/current"
%endif
if [ ! -f %{sysconfdir}/control/servercert.pem ] ; then
count=`expr $count + 1`
%if %nocourierimap == 0
echo "$count. You need to create CERTS for STARTTLS / SSL enabled IMAP/POP3."
%else
echo "$count. You need to create CERTS for STARTTLS."
%endif
echo "   Run the following command to create the Certificate"
echo "   %{_prefix}/sbin/svctool --postmaster=postmaster@indimail.org --config=cert"
fi

echo
echo "Look at /tmp/indimail-install.log for the installation log"

### SCRIPTLET ###############################################################################
%preun
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi

(
if test -f %{_sysconfdir}/init/svscan.conf
then
  /sbin/initctl emit qmailstop > /dev/null 2>&1
  echo "Giving IndiMail exactly 5 seconds to exit nicely"
  sleep 5
  if [ $argv1 -ne 1 ] ; then # not an upgrade
    %{__rm} -f %{_sysconfdir}/init/svscan.conf
  fi
elif test -f %{_sysconfdir}/event.d/svscan
then
  /sbin/initctl emit qmailstop > /dev/null 2>&1
  echo "Giving IndiMail exactly 5 seconds to exit nicely"
  sleep 5
  if [ $argv1 -ne 1 ] ; then # not an upgrade
    %{__rm} -f %{_sysconfdir}/event.d/svscan
  fi
elif test -f %{_sysconfdir}/systemd/system/multi-user.target.wants/indimail.service
then
  /bin/systemctl stop indimail.service > /dev/null 2>&1
  echo "Giving IndiMail exactly 5 seconds to exit nicely"
  sleep 5
elif test -x %{_prefix}/sbin/initsvc
then
  %{_prefix}/sbin/initsvc -off
  echo "Giving IndiMail exactly 5 seconds to exit nicely"
  sleep 5
fi

if [ -f %{shareddir}/boot/rpm.init ] ; then
  echo "Running Custom Un-Installation Script for preun"
  /bin/sh %{shareddir}/boot/rpm.init preun "$argv1"
fi

# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  exit 0
fi

# Remove IndiMail being started on system boot
echo "removing indimail startup"
%{_prefix}/sbin/svctool --config=rm-boot
) > /tmp/indimail-uninstall.log 2>&1

### SCRIPTLET ###############################################################################
%postun
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
%if %i_m_on_mac == 0
  echo "recreating ld.so cache"
  /sbin/ldconfig
%endif
  exit 0
fi

(
# remove users / groups
nscd_up=`ps -ef |grep nscd |grep -v grep|wc -l`
if [ $nscd_up -ge 1 ] ; then
  if [ -x %{_sysconfdir}/init.d/nscd ] ; then
    %{_sysconfdir}/init.d/nscd stop
  fi
fi
%if %i_m_on_mac == 0
for i in alias qmaild qmaill qmailp qmailq qmailr qmails qscand indimail
do
  echo "removing user $i"
  /usr/bin/getent passwd $i > /dev/null && /usr/sbin/userdel $i >/dev/null || true
done
for i in nofiles qmail qscand indimail
do
  echo "removing group $i"
  /usr/bin/getent group $i > /dev/null && /usr/sbin/groupdel $i  >/dev/null || true
done
if [ $nscd_up -ge 1 ] ; then
  if [ -x %{_sysconfdir}/init.d/nscd ] ; then
    %{_sysconfdir}/init.d/nscd start
  fi
fi
%else
  for i in indimail qmail nofiles qscand; do
    echo "removing group $i"
    dscl . -delete /Groups/$i
  done
  for i in indimail alias qmaild qmaill qmailp qmailq qmailr qmails qscand; do
    echo "removing user $i"
    dscl . -delete /Users/$i
  done
%endif

echo "removing binaries, libraries, libexec, shared dir, modules, queues, man pages"
if [ %{_prefix} = "/var/indimail" -o %{_prefix} = "/var/qmail" ] ; then
  for i in %{_prefix}/bin %{_prefix}/sbin %{_prefix}/lib %{indimaildir}/queue \
    %{mandir}/man1 %{mandir}/cat1 %{mandir}/man5 %{mandir}/cat5 \
    %{mandir}/man7 %{mandir}/cat7 %{mandir}/man8 %{mandir}/cat8
  do
    %{__rm} -rf $i || true
  done
  for i in `/bin/ls %{shareddir} 2>/dev/null`
  do
    %{__rm} -rf %{shareddir}/$i || true
  done
else
  for i in bin sbin control users
  do
    echo "removing link $i"
    %{__rm} -f %{indimaildir}/$i || true
  done
  # queue
  %{__rm} -rf %{indimaildir}/queue || true
  # modules
  %{__rm} -rf %{_prefix}/lib/indimail || true
  # shareddir
  if [ ! " %{shareddir}" = " /usr/share" ] ; then
    for i in `/bin/ls %{shareddir} 2>/dev/null`
    do
      %{__rm} -rf %{shareddir}/$i || true
    done
  fi
  # libexecdir
  if [ ! " %{libexecdir}" = " /usr/libexec" ] ; then
    %{__rm} -rf %{libexecdir} || true
  fi
fi
if [ -d %{mandir} ] ; then
echo "removing man pages"
/bin/rmdir --ignore-fail-on-non-empty %{mandir} 2>/dev/null
fi
if [ -d %{shareddir} ] ; then
echo "removing architecture-independent shared directory"
/bin/rmdir --ignore-fail-on-non-empty %{shareddir} 2>/dev/null
fi

echo "removing configuration"
for i in indimail.cnf backup.conf cronlist indimail.te headerlist \
    imapd.cnf imapd.dist imapd-ssl.dist inc_deps indimail.mrtg.cfg \
    indimail.settings lib_deps osh.table perm_list pop3d.cnf \
    pop3d.dist pop3d-ssl.dist qmailprog.list quotawarnmsg.example \
    system.flashlogin system.menu system.module system.rc
do
  %{__rm} -f %{sysconfdir}/$i
done
for i in /etc /etc/my.cnf.d /etc/mysql
do
  %{__rm} -f $i/indimail.cnf 
done

if [ %nofetchmail -eq 0 ] ; then
  %{__rm} -f %{sysconfdir}/fetchmailrc
fi
if [ %nobogofilter -eq 0 ] ; then
  %{__rm} -f %{sysconfdir}/bogofilter.cf %{sysconfdir}/bogofilter.cf.example
fi
%if %nonssd == 0
  %{__rm} -f %{sysconfdir}/nssd.conf
%endif

for i in smtp qmtp qmqp imap pop3 poppass
do
  for j in `/bin/ls %{sysconfdir}/tcp*.$i 2>/dev/null`
  do
      %{__rm} -f $j.cdb
  done
done
if [ -d %{sysconfdir} ] ; then
/bin/rmdir --ignore-fail-on-non-empty %{sysconfdir} 2>/dev/null
fi
for i in assign cdb
do
    %{__rm} -f %{sysconfdir}/users/$i
done
if [ -d %{sysconfdir}/users ] ; then
/bin/rmdir --ignore-fail-on-non-empty %{sysconfdir}/users 2>/dev/null
fi

if [ -f %{sysconfdir}/controlfiles ] ; then
  for i in `%{__cat} %{sysconfdir}/controlfiles`
  do
    %{__rm} -f %{sysconfdir}/control/$i
  done
else
  for i in databytes defaultdelivery defaultdomain localiphost locals \
    me nodnscheck plusdomain queue_base smtpgreeting signatures \
    chkrcptdomains defaulthost envnoathost filterargs greylist.white \
    hostip timeoutremote timeoutsmtpd tlsserverciphers dnsbllist
  do
    %{__rm} -f %{sysconfdir}/control/$i
  done
fi
%{__rm} -f %{sysconfdir}/controlfiles
%{__rm} -f %{sysconfdir}/control/domainkeys/%{dkimkeyfn}.pub %{sysconfdir}/control/domainkeys/%dkimkeyfn
if [ -d %{sysconfdir}/control/domainkeys ] ; then
/bin/rmdir --ignore-fail-on-non-empty %{sysconfdir}/control/domainkeys 2>/dev/null
fi
if [ -d %{sysconfdir}/control ] ; then
/bin/rmdir --ignore-fail-on-non-empty %{sysconfdir}/control 2>/dev/null
fi
if [ -d %{sysconfdir}/control/defaultqueue ] ; then
%{__rm} -rf %{sysconfdir}/control/defaultqueue
fi

for i in postmaster mailer-daemon root ham spam register-ham register-spam
do
  %{__rm} -f %{indimaildir}/alias/.qmail-"$i"
done
if [ -d %{indimaildir}/domains ] ; then
/bin/rmdir --ignore-fail-on-non-empty %{indimaildir}/domains 2>/dev/null
fi
if [ -d %{indimaildir}/alias ] ; then
/bin/rmdir --ignore-fail-on-non-empty %{indimaildir}/alias 2>/dev/null
fi
if [ -d %{indimaildir} ] ; then
/bin/rmdir --ignore-fail-on-non-empty %{indimaildir} 2>/dev/null
fi
%{__rm} -f %{sysconfdir}/imapd.pem %{sysconfdir}/pop3d.pem
%{__rm} -f %{sysconfdir}/pop3d.cnf.* %{sysconfdir}/imapd.cnf.*

echo "removing startup services"
if [ %{noclamav} -eq 0 ] ; then
  clamav_os=0
else
  if [ -f /usr/sbin/clamd -a -f /usr/bin/clamdscan ] ; then
    clamav_os=1
  else
    clamav_os=0
  fi
fi
if [ %{noclamav} -eq 0 -o $clamav_os -eq 1 ] ; then
for i in clamd freshclam
do
  if [ -d %{servicedir}/$i ] ; then
    %{__rm} -rf %{servicedir}/$i || true
  fi
  %{__rm} -f %{sysconfdir}/$i.conf %{sysconfdir}/$i.conf.disabled
done
fi
for i in fetchmail indisrvr.4000 inlookup.infifo mysql.3306 \
pwdlookup qmail-imapd.143 qmail-imapd-ssl.993 qmail-pop3d.110 qmail-pop3d-ssl.995 \
qmail-send.25 qmail-smtpd.25 qmail-smtpd.366 qmail-spamlog qscanq qmail-imapd.4143 \
qmail-pop3d.4110 qmail-smtpd.465 qmail-smtpd.587 qmail-qmtpd.209 qmail-qmqpd.628 \
qmail-poppass.106 greylist.1999 udplogger.3000 .svscan
do
  if [ -d %{servicedir}/$i ] ; then
    %{__rm} -rf %{servicedir}/$i || true
  fi
done
if [ %noproxy -eq 0 ] ; then
for i in proxy-imapd.4143 proxy-imapd-ssl.9143 proxy-pop3d.4110 proxy-pop3d-ssl.9110
do
  if [ -d %{servicedir}/$i ] ; then
    %{__rm} -rf %{servicedir}/$i || true
  fi
done
fi

#selinux
%{__rm} -f %{sysconfdir}/indimail.te %{sysconfdir}/indimail.mod %{sysconfdir}/indimail.pp %{sysconfdir}/indimail.fc

echo "removing logs"
%{__rm} -f %{indimaildir}/mysqldb/logs/logisam.log
%{__rm} -f %{indimaildir}/mysqldb/logs/logquery
%{__rm} -f %{indimaildir}/mysqldb/logs/logslow
count=`/bin/ls %{servicedir} 2>/dev/null| /usr/bin/wc -l`
if [ $count -eq 0 ] ; then # ignore disabled services
  %{__rm} -rf %{servicedir} || true
fi
if [ -h %{logdir} ] ; then
  log_dir=`/bin/ls -ld %{logdir} | /usr/bin/awk '{print $10}'`
else
  log_dir=%{logdir}
fi
[ "$log_dir" != "/" ] && %{__rm} -fr $log_dir
%if %i_m_on_mac == 0
echo "recreating ld.so cache"
/sbin/ldconfig
%endif

if [ -f %{shareddir}/boot/rpm.init ] ; then
  echo "Running Custom Un-Installation Script for postun"
  /bin/sh %{shareddir}/boot/rpm.init postun
fi
) >> /tmp/indimail-uninstall.log 2>&1

### SCRIPTLET ###############################################################################
%posttrans
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -f %{shareddir}/boot/rpm.init ] ; then
  echo "Running Custom Installation Script for posttrans"
  /bin/sh %{shareddir}/boot/rpm.init posttrans
fi
echo ""

### SCRIPTLET ###############################################################################
%pre -n libindimail

### SCRIPTLET ###############################################################################
%post -n libindimail
%if %i_m_on_mac == 0
/sbin/ldconfig
%endif

### SCRIPTLET ###############################################################################
%postun -n libindimail
argv1=$1
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  exit 0
fi
# Shared libraries (omit for architectures that don't support them)
echo "removing shared libraries"
%if %noclamav == 0
%{__rm} -f %{_libdir}/libclam*.so*
%endif

%if %nolibdkim == 0
%if %i_m_on_mac == 1
%{__rm} -f %{_libdir}/libdkim*.dylib
%{__rm} -f %{_libdir}/libdkim-%{libdkim_version}.0.dylib
%else
%{__rm} -f %{_libdir}/libdkim.so
%{__rm} -f %{_libdir}/libdkim-%{libdkim_version}.so.0
%{__rm} -f %{_libdir}/libdkim-%{libdkim_version}.so.0.0.0
%endif
%endif

%if %nolibsrs2 == 0
%if %i_m_on_mac == 1
%{__rm} -f %{_libdir}/libsrs2*.dylib
%{__rm} -f %{_libdir}/libsrs2-%{libsrs2_version}.0.dylib
%else
%{__rm} -f %{_libdir}/libsrs2.so
%{__rm} -f %{_libdir}/libsrs2-%{libsrs2_version}.so.0
%{__rm} -f %{_libdir}/libsrs2-%{libsrs2_version}.so.0.0.0
%endif
%endif

%if %i_m_on_mac == 1
%{__rm} -f %{_libdir}/libeps.dylib
%{__rm} -f %{_libdir}/libeps-%{eps_version}.0.dylib
%{__rm} -f %{_libdir}/libcdb.dylib
%{__rm} -f %{_libdir}/libcdb-%{cdb_version}.0.dylib
%{__rm} -f %{_libdir}/libflash.dylib
%{__rm} -f %{_libdir}/libflash-%{flash_version}.0.dylib
%{__rm} -f %{_libdir}/libindimail.dylib
%{__rm} -f %{_libdir}/libindimail-%{version}.0.dylib
%else
%{__rm} -f %{_libdir}/libeps.so
%{__rm} -f %{_libdir}/libeps-%{eps_version}.so.0
%{__rm} -f %{_libdir}/libeps-%{eps_version}.so.0.0.0
%{__rm} -f %{_libdir}/libcdb.so
%{__rm} -f %{_libdir}/libcdb-%{cdb_version}.so.0
%{__rm} -f %{_libdir}/libcdb-%{cdb_version}.so.0.0.0
%{__rm} -f %{_libdir}/libflash.so
%{__rm} -f %{_libdir}/libflash-%{flash_version}.so.0
%{__rm} -f %{_libdir}/libflash-%{flash_version}.so.0.0.0
%{__rm} -f %{_libdir}/libindimail.so
%{__rm} -f %{_libdir}/libindimail-%{version}.so.0
%{__rm} -f %{_libdir}/libindimail-%{version}.so.0.0.0
/sbin/ldconfig
%endif

%postun devel
argv1=$1
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  exit 0
fi
if [ %{_prefix} = "/var/indimail" -o %{_prefix} = "/var/qmail" ] ; then
echo "removing man pages, include files"
for i in %{_prefix}/include %{mandir}/man3
do
  %{__rm} -rf $i || true
done
/bin/rmdir --ignore-fail-on-non-empty %{mandir} 2>/dev/null
fi
echo "removing static libraries"
%{__rm} -f %{_libdir}/libeps.a
%{__rm} -f %{_libdir}/libcdb.a
%{__rm} -f %{_libdir}/libflash.a
%{__rm} -f %{_libdir}/libindimail.a
%if %nolibdkim == 0
%{__rm} -f %{_libdir}/libdkim.a
%endif
%if %nolibsrs2 == 0
%{__rm} -f %{_libdir}/libsrs2.a
%endif

%post mini
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
# we are doing upgrade
if [ $argv1 -eq 2 ] ; then
  exit 0
fi
%if %i_m_on_mac == 1
echo "Adding IndiMail users/groups"
/usr/bin/dscl . -create /Groups/indimail PrimaryGroupID 555
/usr/bin/dscl . -create /Groups/nofiles PrimaryGroupID 556
/usr/bin/dscl . -create /Groups/qmail   PrimaryGroupID 557

/usr/bin/dscl . -create /Users/indimail UniqueID 555
/usr/bin/dscl . -create /Users/indimail home @indimaildir@
/usr/bin/dscl . -create /Users/indimail PrimaryGroupID 555
/usr/bin/dscl . -create /Users/indimail UserShell /bin/bash
/usr/bin/dscl . -create /Users/indimail RealName indimail
%else
#
# Create user/groups indimail. Do not report any problems if it already
# exists.
#
nscd_up=`ps -ef |grep nscd |grep -v grep|wc -l`
if [ $nscd_up -ge 1 ] ; then
  if [ -x %{_sysconfdir}/init.d/nscd ] ; then
    %{_sysconfdir}/init.d/nscd stop
  fi
fi
echo "Adding IndiMail users/groups"
/usr/bin/getent group indimail  > /dev/null || /usr/sbin/groupadd -r -g 555 indimail || true
if [ $? = 4 ] ; then
  /usr/sbin/groupadd indimail
fi
/usr/bin/getent group nofiles   > /dev/null || /usr/sbin/groupadd nofiles  || true
/usr/bin/getent group qmail     > /dev/null || /usr/sbin/groupadd qmail    || true

%{__rm} -f /var/spool/mail/indimail

/usr/bin/getent passwd indimail > /dev/null || /usr/sbin/useradd -r -g indimail -u 555 -d %{indimaildir} indimail || true
if [ $? = 4 ] ; then
  /usr/sbin/useradd -r -g indimail -d %{indimaildir} indimail
fi
if [ $nscd_up -ge 1 ] ; then
  if [ -x %{_sysconfdir}/init.d/nscd ] ; then
    %{_sysconfdir}/init.d/nscd start
  fi
fi
%endif

if [ -f %{_prefix}/sbin/qmail-qmqpc ] ; then
  %{__rm} -f %{_prefix}/sbin/qmail-queue
fi
cd %{_prefix}/sbin
/bin/ln -sf qmail-qmqpc qmail-queue
if [ -f %{_sysconfdir}/init.d/sendmail ] ; then
  %{_sysconfdir}/init.d/sendmail stop
  if [ -f /sbin/chkconfig ] ; then
    /sbin/chkconfig --del sendmail
  fi
fi
if [ -x /usr/sbin/alternatives ] ; then
  alternatives_cmd=/usr/sbin/alternatives
elif [ -x /usr/sbin/update-alternatives ] ; then
  alternatives_cmd=/usr/sbin/update-alternatives
else
  alternatives_cmd=""
fi
if [ -n $alternatives_cmd ] ; then
  for i in /usr/lib/sendmail /usr/sbin/sendmail; do
    if [ -f $i -a ! -L $i ]; then
      echo "! $i is a file, should be a link" 1>&2
      %{__mv} $i $i.old
    fi
  done
  for i in mailq newaliases; do
    if [ -f /usr/share/man/man1/$i.1.gz -a ! -L /usr/share/man/man1/$i.1.gz ] ; then
      echo "! /usr/share/man/man1/$i.1.gz is a file, should be a link" 1>&2
      %{__mv} /usr/share/man/man1/$i.1.gz /usr/share/man/man1/$i.old.1.gz
    fi
  done
  if [ -f /etc/pam.d/smtp -a ! -L /etc/pam.d/smtp ] ; then
    echo "! /etc/pam.d/smtp is a file, should be a link" 1>&2
    %{__mv} /etc/pam.d/smtp /etc/pam.d/smtp.old
  fi
  $alternatives_cmd --install \
    /usr/sbin/sendmail mta %{_prefix}/bin/sendmail 120 \
    --slave /usr/share/man/man8/sendmail.8.gz mta-sendmailman \
      %{mandir}/man8/isendmail.8.gz \
    --slave /usr/lib/sendmail mta-sendmail %{_prefix}/bin/sendmail \
    --slave /usr/bin/rmail mta-rmail %{_prefix}/bin/irmail
  $alternatives_cmd --set mta %{_prefix}/bin/sendmail
else
  for i in /usr/lib/sendmail /usr/sbin/sendmail; do
    if [ -f $i -a ! -L $i ]; then
      echo "! $i is a file, should be a link" 1>&2
      %{__mv} $i $i.old
      /bin/ln -s %{_prefix}/bin/sendmail $i
    elif [ -L $i ];then
      %{__mv} $i $i.old
      /bin/ln -s %{_prefix}/bin/sendmail $i
    elif [ ! -f $i ];then
      echo "! $i is missing"
      /bin/ln -s %{_prefix}/bin/sendmail $i
    fi
  done
  if [ -f /etc/pam.d/smtp -a ! -L /etc/pam.d/smtp ] ; then
    echo "! /etc/pam.d/smtp is a file, should be a link" 1>&2
    %{__mv} /etc/pam.d/smtp /etc/pam.d/smtp.old
    /bin/ln -s /etc/pam.d/pam.multi /etc/pam.d/smtp
  fi
  for i in mailq newaliases; do
    if [ -f /usr/share/man/man1/$i.1.gz -a ! -L /usr/share/man/man1/$i.1.gz ] ; then
      echo "! /usr/share/man/man1/$i.1.gz is a file, should be a link" 1>&2
      %{__mv} /usr/share/man/man1/$i.1.gz /usr/share/man/man1/$i.old.1.gz
    fi
  done
fi
if [ ! -f %{sysconfdir}/control/idhost ] ; then
  uname -n > %{sysconfdir}/control/idhost
fi

%postun mini
argv1=$1
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  exit 0
fi
if [ -x /usr/sbin/alternatives ] ; then
  alternatives_cmd=/usr/sbin/alternatives
elif [ -x /usr/sbin/update-alternatives ] ; then
  alternatives_cmd=/usr/sbin/update-alternatives
else
  alternatives_cmd=""
fi
if [ -n $alternatives_cmd ] ; then
  $alternatives_cmd --remove mta %{_prefix}/bin/sendmail
  $alternatives_cmd --auto mta
  for i in /usr/lib/sendmail /usr/sbin/sendmail /etc/pam.d/smtp; do
    if [ -f $i.old -o -L $i.old ]; then
      echo "restoring $i"
      %{__rm} -f $i
      %{__mv} $i.old $i
    fi
  done
else
  if [ -f %{_sysconfdir}/init.d/sendmail ] ; then
    if [ -f /sbin/chkconfig ] ; then
      /sbin/chkconfig --add sendmail
      echo "to start sendmail, issue"
      echo "%{_sysconfdir}/init.d/sendmail start"
    fi
  fi
fi
for i in /usr/lib/sendmail /usr/sbin/sendmail /etc/pam.d/smtp; do
  if [ -f $i.old -o -L $i.old ]; then
    echo "restoring $i"
    %{__rm} -f $i
    %{__mv} $i.old $i
  fi
done
for i in mailq newaliases; do
  if [ -f /usr/share/man/man1/$i.old.1.gz ] ; then
    echo "restoring /usr/share/man/man1/$i.1.gz"
    %{__mv} /usr/share/man/man1/$i.old.1.gz /usr/share/man/man1/$i.1.gz
  fi
done

# fix changelog for openSUSE buildservice
%changelog
