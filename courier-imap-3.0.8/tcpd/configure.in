dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.26 2004/04/24 04:15:24 mrsam Exp $
dnl
dnl Copyright 1998 - 2003 Double Precision, Inc.  See COPYING for
dnl distribution information.

AC_INIT(tcpd.c)
LPATH="$PATH:/usr/local/bin"
AM_INIT_AUTOMAKE(couriertcpd, 0.11, 1)
AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB

SPATH="$LPATH:/usr/kerberos/bin"

AC_PATH_PROG(SED, sed, sed, $SPATH)
if test "$SED" = "sed"
then
	AC_MSG_ERROR(sed not found.)
fi
AC_SUBST(SED)

AC_PATH_PROG(SETENV, env, env, $SPATH)
if test "$SETENV" = "env"
then
	AC_MSG_ERROR(env not found.)
fi
AC_SUBST(SETENV)

if test x$GCC = xyes
then
	CFLAGS="-Wall $CFLAGS"
fi
if test x$GXX = xyes
then
	CXXFLAGS="-Wall $CXXFLAGS"
fi

CFLAGS="-I$srcdir/.. -I.. $CFLAGS"
CXXFLAGS="-I$srcdir/.. -I.. $CXXFLAGS"

AC_PATH_PROG(KRB5CONFIG, krb5-config, krb5-config, $SPATH)

dnl Check whether we should use gdbm, or db.
#
#
# We may need libdl for later, not just shared check.
#

saveLIBS="$LIBS"
AC_CHECK_LIB(dl, dlopen, [ LIBDL="-ldl" ])
LIBS="$saveLIBS"

dnl Determine whether transport libraries are created static or shared

AC_SUBST(LIBDL)

AC_ARG_WITH(db, [], db="$withval", db="")

if test -f ../dbobj.config
then
	. ../dbobj.config
else
	db=""
fi

COURIERTCPD=couriertcpd$EXEEXT

case "$db" in
gdbm)
	USE_GDBM=1
	USE_DB=0
	LIBDB=""
	dblibrary=../gdbmobj/libgdbmobj.a
	;;
db)
	USE_DB=1
	USE_GDBM=0
	LIBGDBM=""
	dblibrary=../bdbobj/libbdbobj.a
	;;
*)
	COURIERTCPD=""
esac

AC_SUBST(COURIERTCPD)

LIBS="$saveLIBS"

USENSL=no
saveLIBS="$LIBS"
AC_CHECK_LIB(socket,socket,result=yes,result=no)
if test $result = yes; then
        NETLIBS="-lsocket"
else
        AC_CHECK_LIB(socket,socket,result=yes,result=no,-lnsl)
        if test $result = yes; then
                NETLIBS = "-lsocket -lnsl"
                USENSL=yes
        else
                AC_CHECK_LIB(socket,connect,result=yes,result=no)
                if test $result = yes; then
                        NETLIBS="-lsocket"
                else
                        AC_CHECK_LIB(socket,connect,result=yes,result=no,-lnsl)
                        if test $result = yes; then
                                NETLIBS="-lsocket -lnsl"
                                USENSL=yes
                        fi
                fi
        fi
fi

if test $USENSL != yes; then
	LIBS="$LIBS $NETLIBS"
	AC_TRY_LINK_FUNC(inet_addr, [ : ],
	[
	        AC_CHECK_LIB(nsl,inet_addr,result=yes,result=no)
	        if test $result = yes; then
	                NETLIBS="$NETLIBS -lnsl"
	        fi
	])
fi

AC_SUBST(USE_GDBM)
AC_SUBST(USE_DB)

AC_SUBST(dblibrary)
AC_SUBST(LIBGDBM)
AC_SUBST(LIBDB)

AM_CONDITIONAL(USE_GDBM, test "$USE_GDBM" = 1)
AM_CONDITIONAL(USE_DB, test "$USE_DB" = 1)
AC_SUBST(dblibrary)
AC_SUBST(NETLIBS)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_CHECK_HEADERS(sys/types.h sys/time.h sys/stat.h sys/wait.h sys/select.h unistd.h fcntl.h sys/ioctl.h)
AC_HEADER_TIME

dnl Checks for typedefs, structures, and compiler characteristics.

AC_PID_T
AC_TYPE_UID_T
AC_TYPE_SIGNAL

dnl Checks for library functions.

AC_CHECK_FUNCS(setpgrp setpgid)
AC_CHECK_FUNC(setpgrp,
	[
	AC_FUNC_SETPGRP
	]
)

AC_ARG_WITH(tcpddns, [  --without-tcpddns       Use resolver instead of DNS lookups in couriertcpd ], tcpddns="$withval", tcpddns="Y")

case "$tcpddns" in
n*|N*|0*)
	;;
*)
	AC_DEFINE_UNQUOTED(TCPDUSERFC1035,1,
	[ Whether to use librfc1035.a to resolve via DNS ])
	;;
esac

saveLIBS="$LIBS"
LIBS="$LIBS $NETLIBS"
AC_CHECK_FUNC(socketpair, have_socketpair=yes, have_socketpair=no)

AC_ARG_WITH(spipe,
[  --with-spipe=socketpair Create stream pipes as BSD socketpairs
  --with-spipe=streams    Create stream pipes as SVR3 streams
  --with-spipe=pipe       Create stream pipes as SVR4 streams],
spipe="$withval", spipe="")

AC_CACHE_CHECK([for SVR3 stream pipes],tcpd_cv_svr3,
AC_TRY_COMPILE( [
#include <sys/types.h>
#include <sys/stream.h>
#include <stropts.h>
#include <fcntl.h>
],[ {
        struct strfdinsert      ins;
        queue_t                 *pointer;
	int i=I_FDINSERT;
}
], tcpd_cv_svr3=yes, tcpd_cv_svr3=no))

AC_CACHE_CHECK( [for SVR4 stream pipes],tcpd_cv_svr4,

AC_TRY_RUN(
[

changequote(<<,>>)

#include	<stdio.h>
#include	<unistd.h>

int main(int argc, char **argv)
{
int	pipefd[2];
char	c;

	c=0;
	if (pipe(pipefd) == 0 && write(pipefd[0], &c, 1) == 1 &&
		read(pipefd[1], &c, 1) == 1 &&
		write(pipefd[1], &c, 1) == 1 &&
		read(pipefd[0], &c, 1) == 1)
	{
		exit (0);
	}
	exit (1);
	return (1);
}
changequote([,])
]
,
tcpd_cv_svr4=yes,
tcpd_cv_svr4=no,
tcpd_cv_svr4="n/a")

)

LIBS="$saveLIBS"

if test "$spipe" = ""
then
	if test "$have_socketpair" = "yes"
	then
		spipe="socketpair"
	fi
fi

if test "$spipe" = ""
then
	if test "$tcpd_cv_svr3" = "yes"
	then
		spipe="streams"
	fi
fi

if test "$spipe" = ""
then
	if test "$tcpd_cv_svr4" = "yes"
	then
		spipe="pipe"
	fi
fi

case "$spipe" in
socketpair)
		AC_DEFINE_UNQUOTED(HAVE_SPIPE_SOCKETPAIR, 1,
		[ Whether to use socketpair() to create a bidirectional pipe ])
		;;
streams)
		AC_DEFINE_UNQUOTED(HAVE_SPIPE_SVR3, 1,
		[ Whether to use streams to create a vidirectional pipe ])
		;;
pipe)
		AC_DEFINE_UNQUOTED(HAVE_SPIPE_SVR4, 1,
		[ Whether pipe() is SvR4-style that's a bidirectional pipe ])
		;;
*)
	AC_MSG_ERROR(Cannot determine stream pipe support.  If cross-compiling use --with-spipe=pipe to get SVR4 stream pipes.)
		;;
esac


AC_MSG_CHECKING([for stream pipes])
AC_MSG_RESULT($spipe)

AC_CHECK_LIB(ssl, SSL_load_error_strings, have_ssl=yes, have_ssl=no,
	-lcrypto)

KRBFLAGS=""
if test "$have_ssl" = "yes"
then
	STARTTLS=couriertls$EXEEXT
	LIBCOURIERTLS=libcouriertls.a

	if test "$KRB5CONFIG" != "krb5-config"
	then
		AC_MSG_CHECKING(whether OpenSSL requires Kerberos)
		AC_TRY_COMPILE( [
#include <openssl/ssl.h>
], [ int x=1; ], :,
		 [
			KRBFLAGS=`$KRB5CONFIG --cflags`
			CFLAGS="$CFLAGS $KRBFLAGS"


			AC_TRY_COMPILE( [
#include <openssl/ssl.h>
], [ int x=1; ], [ KRBLIBS="`$KRB5CONFIG --libs`" ],
   AC_MSG_ERROR(OpenSSL test build failed) )
			]
)

		if test "$KRBLIBS" = ""
		then
			AC_MSG_RESULT(no)
		else
			AC_MSG_RESULT(yes)
		fi
	fi
fi
AC_SUBST(STARTTLS)
AC_SUBST(LIBCOURIERTLS)

save_LIBS="$LIBS"
LIBS="-lcrypto $KRBLIBS $LIBS"

if test "$have_ssl" = "yes"
then
	AC_MSG_CHECKING(for OpenSSL 0.9.7)
	AC_TRY_LINK( [
#include <openssl/evp.h>
#include <openssl/rand.h>
],
[
EVP_CIPHER_CTX ctx;
char dummy[1];
unsigned char a[1], b[1];

EVP_CIPHER_CTX_init(&ctx);
EVP_EncryptInit_ex(&ctx, EVP_des_cbc(), NULL, a, b);
RAND_pseudo_bytes(dummy, 1);

], [
   AC_MSG_RESULT(yes)
   AC_DEFINE_UNQUOTED(HAVE_OPENSSL097, 1,
				       [ Whether OpenSSL 0.9.7 is installed ])
], [
   AC_MSG_RESULT(no)
]
);
fi
LIBS="$save_LIBS"

echo "couriertls=$STARTTLS" >couriertls.config
echo "cppflags='$KRBFLAGS'" >>couriertls.config

echo "-lssl -lcrypto $KRBLIBS $NETLIBS" >libcouriertls.dep

AM_CONDITIONAL(HAVE_SGML, test -d ${srcdir}/../docbook)
AC_OUTPUT(Makefile)
