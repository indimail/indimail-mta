#!/bin/sh
# postinst script for indimail
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

prefix=@prefix@
indimaildir=@indimaildir@
mandir=@mandir@
shareddir=@shareddir@
qcount=5
qbase=${indimaildir}/queue
mbase=@basepath@
logdir=@logdir@
mysqlPrefix=@mysql_prefix@
servicedir=/service
sysconfdir=@sysconfdir@
cp=/bin/cp
rm=/bin/rm
mv=/bin/mv
####################################
noproxy=0
nonssd=0
nocourierimap=0
noclamav=1
nofetchmail=0
nobogofilter=0
nodksignature=0
tcpserver_plugin=1
dkimkeyfn=default
mysqlSocket=/var/run/mysqld/mysqld.sock

setperm()
{
	local user="$1"; shift
	local group="$1"; shift
	local mode="$1"; shift
	local file="$1"; shift
	/usr/sbin/dpkg-statoverride --list "$file" >/dev/null && return 0
	/usr/sbin/dpkg-statoverride --update --add "$user" "$group" "$mode" "$file"
}

fixperms()
{
#%attr(0555,root,qmail) @prefix@/bin/rsmtp
	if [ $# -eq 3 ] ; then # directory
		lin=$2
		file=$3
		if [ ! -d $file ] ; then
			return 0
		fi
	elif [ $# = 2 ] ; then # file
		lin=$1
		file=$2
		if [ ! -f $file ] ; then
			return 0
		fi
	fi
	perm=`echo $lin|cut -d\( -f2 | cut -d, -f1`
	perm_f1=`echo $perm | cut -c1`
	own=`echo $lin|cut -d\( -f2 | cut -d, -f2`
	grp=`echo $lin|cut -d\( -f2 | cut -d, -f3|cut -d\) -f1`
	if [ -f $file ] ; then
		if [ $perm_f1 -eq 0 ] ; then # perm_f1 is 4755, 0644
			/bin/chown $own:$grp $file
			/bin/chmod $perm $file
		else
			echo $file
			if [ -f /usr/sbin/dpkg-statoverride ] ; then
				setperm $own $grp $perm $file
			else
				/bin/chown $own:$grp $file
				/bin/chmod $perm $file
			fi
		fi
	elif [ -d $file ] ; then
		/bin/chown $own:$grp $file
		/bin/chmod $perm $file
	fi
}

ID=`id -u`
if [ $ID -ne 0 ] ; then
	echo "You are not root" >&2
	exit 1
fi

case "$1" in
    configure)
		if [ " $2" = " " ] ; then
		echo "installing indimail @version@"
		else
		echo "upgrading to indimail $2"
		fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
	exit 0
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

#
# We need to do this for debian. SIGH!!
#
if [ -f ${sysconfdir}/perm_list.i ] ; then
	echo "Fixing Permissions (debian stupidity)"
(
/bin/grep -v "^#" ${sysconfdir}/perm_list.i | while read line
do
	if [ " $line" = " " ] ; then
		continue
	fi
	fixperms $line
done
) > ${sysconfdir}/stat.override
fi

# indimail.upgrade/indimail.install are created
# by the preinst script
if [ -f /tmp/indimail.upgrade ] ; then # upgrade
  (
  if [ -f ${libexecdir}/iupgrade.sh ] ; then
    echo "Running Custom Upgrade Script for post upgrade"
    /bin/sh ${libexecdir}/iupgrade.sh post upgrade @version@ $* || true
  fi
  if [ -f /etc/init.d/indimail ] ; then
    cmp -s ${prefix}/bin/qmailctl /etc/init.d/indimail >/dev/null 2>&1 || true
    if [ $? -ne 0 ] ; then
      ${cp} ${prefix}/bin/qmailctl /etc/init.d/indimail
    fi
  fi
  svc_list=""
  for i in mrtg mysql.3306 fetchmail qmail-imapd.143 qmail-imapd-ssl.993 \
    qmail-pop3d.110 qmail-pop3d-ssl.995 proxy-imapd.4143 proxy-imapd-ssl.9143 \
    proxy-pop3d.4110 proxy-pop3d-ssl.9110 indisrvr.4000 inlookup.infifo \
    pwdlookup qmail-poppass.106 
  do
    svc_list="$svc_list ${servicedir}/$i"
  done
  ${prefix}/sbin/svctool --servicedir=${servicedir} --refreshsvc="$svc_list"
  #update VIRTUAL_PKG_LIB for smtp service
  indlib=`ls -d /usr/lib*/libindimail.so.*.*.* 2>/dev/null`
  for port in 25 465 587
  do
	if [ -n "$indlib" -a -f "$indlib" ] ; then
      echo $indlib > ${servicedir}/qmail-smtpd.$port/variables/VIRTUAL_PKG_LIB
	fi
  done
  if [ -n "$indlib" -a -f "$indlib" ] ; then
    echo $indlib > ${servicedir}/qmail-send.25/variables/VIRTUAL_PKG_LIB
  fi
  ) >> /tmp/indimail-setup.log
  ${rm} -f /tmp/indimail.upgrade
  exit 0
fi
${rm} -f /tmp/indimail.install /tmp/indimail.upgrade
# Recreate ld.so links and cache
if [ ! "${prefix}" = "/usr" ] ; then
echo "recreating ld.so cache"
if [ -d /etc/ld.so.conf.d ] ; then
	(
		if [ -d ${prefix}/lib64 ] ; then
			echo ${prefix}/lib64
		else
			echo ${prefix}/lib
		fi
	) > /etc/ld.so.conf.d/indimail-`uname -m`.conf
fi
/sbin/ldconfig
fi

if [ -f /usr/sbin/clamd -a -f /usr/bin/clamdscan ] ; then
	clamav_os=1
else
	clamav_os=0
fi
echo "Doing post installation activities for the following"
echo ""
echo " 1. Configure ${logdir} for multilog"
echo " 2. Configure ${servicedir}"
echo " 3. Configure default indimail configuration"
echo " 4. Configure ${sysconfdir}/indimail.cnf for MySQL service"
echo " 5. Configure MySQL DB in ${indimaildir}/mysqldb/data"
echo " 6. Configure fetchmail service"
echo " 7. Configure IMAP/POP3/poppass services"
echo " 8. Configure indisrvr service"
echo " 9. Configure nssd service"
echo "10. Configure inlookup service"
echo "11. Configure SPAM filter configuration"
echo "12. Configure tcprules database for IMAP, POP3, popass"
echo "13. Configure default cron entries"
if [ -x /etc/init.d/apparmor ] ; then
if [ $noclamav -eq 0 -o $clamav_os -eq 1 ] ; then
echo "14. Creating apparmor profile"
fi
fi
echo ""

if [ -x /bin/touch ] ; then
	TOUCH=/bin/touch
elif [ -x /usr/bin/touch ] ; then
	TOUCH=/usr/bin/touch
else
	TOUCH=/bin/touch
fi
(
echo "Creating ${logdir}"
if [ ! -d ${logdir} ] ; then
	/bin/mkdir ${logdir}
fi
/bin/chown -R qmaill:nofiles ${logdir}

# mrtg service
${prefix}/sbin/svctool --mrtg=/var/www/html/mailmrtg --servicedir=${servicedir}

if [ -x /usr/bin/uname -o -x /bin/uname ] ; then
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || `uname -n`)
else
  defaultDomain=@defaultdomain@
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || echo ${defaultDomain})
fi
echo "Creating default indimail tcp access control files"
${prefix}/sbin/svctool --config=indimail --mysqlhost=localhost --mysqluser=indimail \
	--mysqlpass=ssh-1.5- --mysqlsocket=${mysqlSocket}

echo "Creating Database/Service for MySQL"
# MySQL Config Creation
if [ -x ${mysqlPrefix}/libexec/mysqld -o -x ${mysqlPrefix}/sbin/mysqld ] ; then
	error=`ps -e|grep mysqld|grep -v grep|wc -l`
	${prefix}/sbin/svctool --config=mysql --mysqlPrefix=${mysqlPrefix} --mysqlsocket=${mysqlSocket} \
		--databasedir=${indimaildir}/mysqldb
	# MySQL Database Creation
	${prefix}/sbin/svctool --config=mysqldb --mysqlPrefix=${mysqlPrefix} \
    	--databasedir=${indimaildir}/mysqldb --base_path=${mbase} --mysqlsocket="${mysqlSocket}".tmp
	# MySQL Supervise creation
	${prefix}/sbin/svctool --mysql=3306 --servicedir=${servicedir} --mysqlPrefix=${mysqlPrefix} \
		--databasedir=${indimaildir}/mysqldb --config=${sysconfdir}/indimail.cnf --default-domain=${default_domain}
	if [ ! -f ${indimaildir}/mysqldb/data/indimail/indimail.frm ] ; then
		error=1
	fi
	if [ $error -gt 0 ] ; then
		echo "Disabling mysqld service"
		$TOUCH ${servicedir}/mysql.3306/down
	fi
else
	echo "WARNING!!! Did not find mysqld in ${mysqlPrefix}/{libexec,sbin}. Skipping MySQL configuration" 1>&2
fi

# MySQL apparmor
if [ -x /etc/init.d/apparmor ] ; then
	if [ -f ${sysconfdir}/apparmor.d/local/usr.sbin.mysqld -a -d /etc/apparmor.d/local ] ; then
		cp ${sysconfdir}/apparmor.d/local/usr.sbin.mysqld /etc/apparmor.d/local
	fi
	if [ -f /etc/apparmor.d/local/usr.sbin.mysqld ] ; then
		echo "Reloading apparmor profiles..."
		/usr/sbin/service apparmor reload || true
	else
		echo "Shutting down apparmor..."
		/usr/sbin/service apparmor stop || true
		/usr/sbin/service apparmor teardown || true
	fi
fi

a_arch=`uname -m`
if [ " $a_arch" = " x86_64" ] ; then
	fetchmail_mem=144857600
	imap_pop3_mem=524288000
	imapspop3_mem=524288000
	poppass_mem=104857600
else
	fetchmail_mem=72428800
	imap_pop3_mem=52428800
	imapspop3_mem=52428800
	poppass_mem=52428800
fi
echo "Checking if clamav is installed"
if [ $noclamav -eq 0 ] ; then
	clamav_os=0
	clamdPrefix=${prefix}
	qhpsi="${prefix}/bin/clamdscan %s --fdpass --quiet --no-summary"
	mysysconfdir=${sysconfdir}
else
	if [ -f /usr/sbin/clamd -a -f /usr/bin/clamdscan ] ; then
		clamav_os=1
		clamdPrefix="/usr"
		qhpsi="/usr/bin/clamdscan %s --fdpass --quiet --no-summary"
		if [ -d /etc/clamav ] ; then
			mysysconfdir=/etc/clamav
		else
			mysysconfdir=${sysconfdir}
		fi
	else
		clamav_os=0
	fi
fi
# SMTP
for port in 465 25
do
	if [ ${nobogofilter} -eq 0 ] ; then
		echo "${prefix}/bin/bogofilter -p -d ${sysconfdir}" > ${servicedir}/qmail-smtpd.$port/variables/SPAMFILTER
		echo 0 > ${servicedir}/qmail-smtpd.$port/variables/SPAMEXITCODE
		echo 0 > ${servicedir}/qmail-smtpd.$port/variables/REJECTSPAM
		echo 1 > ${servicedir}/qmail-smtpd.$port/variables/MAKE_SEEKABLE
		echo /tmp/logfifo > ${servicedir}/qmail-smtpd.$port/variables/LOGFILTER
		# update SPAMFILTER and also change .options, so that refreshsvc doesn't lose the settings
		options="`cat ${servicedir}/qmail-smtpd.$port/variables/.options` --spamfilter=\"${prefix}/bin/bogofilter -p -d ${sysconfdir}\" --logfilter=\"/tmp/logfifo\" --rejectspam=\"0\" --spamexitcode=\"0\""
		echo $options > ${servicedir}/qmail-smtpd.$port/variables/.options
	fi
done

if [ $nofetchmail -eq 0 ] ; then
	# fetchmail
	if [ $nodksignature -eq 0 ] ; then
		if [ -x ${prefix}/bin/dknewkey ] ; then
			ver_opt="both"
			sign_opt="both"
			key_bit=$KEYBIT # set KEYBIT in environment variable
			if [ " $key_bit" = " " ] ; then
				key_bit=1024
			fi
			${prefix}/bin/dknewkey ${sysconfdir}/control/domainkeys/default $key_bit
		else
			ver_opt="none"
			sign_opt="none"
		fi
	else
		ver_opt="none"
		sign_opt="none"
	fi
	extra_opt=""
	if [ $nobogofilter -eq 0 ] ; then
		extra_opt="--spamfilter=\"${prefix}/bin/bogofilter -p -d ${sysconfdir}\""
		extra_opt="$extra_opt --logfilter=/tmp/logfifo --rejectspam=0 --spamexitcode=0"
	fi
	if [ $noclamav -eq 0 -o $clamav_os -eq 1 ] ; then
		extra_opt="$extra_opt --qhpsi=\"$qhpsi\""
	fi
	eval ${prefix}/sbin/svctool --fetchmail --servicedir=$servicedir \
		--qbase=${qbase} --qcount=${qcount} --qstart=1 \
		--cntrldir=control \
		--memory=$fetchmail_mem --fsync --syncdir \
		--dkverify=$ver_opt \
		$extra_opt
	echo "${prefix}/bin/bogofilter -p -d ${sysconfdir}" > ${servicedir}/fetchmail/variables/SPAMFILTER
	echo 0 > ${servicedir}/fetchmail/variables/SPAMEXITCODE
	echo 0 > ${servicedir}/fetchmail/variables/REJECTSPAM
	echo 1 > ${servicedir}/fetchmail/variables/MAKE_SEEKABLE
	echo /tmp/logfifo > ${servicedir}/fetchmail/variables/LOGFILTER
	options="`cat ${servicedir}/fetchmail/variables/.options` --spamfilter=\"${prefix}/bin/bogofilter -p -d ${sysconfdir}\" --logfilter=\"/tmp/logfifo\" --rejectspam=\"0\" --spamexitcode=\"0\""
	echo $options > ${servicedir}/fetchmail/variables/.options
	#
	# user has to create fetchmailrc before which fetchmail cannot be started
	#
	/bin/touch $servicedir/fetchmail/down
fi

if [ $nocourierimap -eq 0 ] ; then
# IMAP/POP3
${prefix}/sbin/svctool --imap=143 --servicedir=$servicedir --localip=0 \
	--maxdaemons=40 --maxperip=25 --infifo=infifo \
	--starttls --default-domain=${default_domain} --memory=$imap_pop3_mem
${prefix}/sbin/svctool --imap=993 --servicedir=$servicedir --localip=0 \
	--maxdaemons=40 --maxperip=25 --infifo=infifo \
	--default-domain=${default_domain} --memory=$imapspop3_mem --ssl
${prefix}/sbin/svctool --pop3=110 --servicedir=$servicedir --localip=0 \
	--maxdaemons=40 --maxperip=25 --infifo=infifo \
	--starttls --default-domain=${default_domain} --memory=$imap_pop3_mem
${prefix}/sbin/svctool --pop3=995 --servicedir=$servicedir --localip=0 \
	--maxdaemons=40 --maxperip=25 --infifo=infifo \
	--default-domain=${default_domain} --memory=$imapspop3_mem --ssl
fi
if [ $noproxy -eq 0 ] ; then
${prefix}/sbin/svctool --imap=4143 --servicedir=$servicedir --localip=0 \
	--maxdaemons=40 --maxperip=25 --infifo=infifo \
	--default-domain=${default_domain} --memory=$imap_pop3_mem --proxy=143 \
	--starttls
${prefix}/sbin/svctool --imap=9143 --servicedir=$servicedir --localip=0 \
	--maxdaemons=40 --maxperip=25 --infifo=infifo \
	--default-domain=${default_domain} --memory=$imapspop3_mem --proxy=143 --ssl
${prefix}/sbin/svctool --pop3=4110 --servicedir=$servicedir --localip=0 \
	--maxdaemons=40 --maxperip=25 --infifo=infifo \
	--default-domain=${default_domain} --memory=$imap_pop3_mem --proxy=110 \
	--starttls
${prefix}/sbin/svctool --pop3=9110 --servicedir=$servicedir --localip=0 \
	--maxdaemons=40 --maxperip=25 --infifo=infifo \
	--default-domain=${default_domain} --memory=$imapspop3_mem --proxy=110 --ssl
fi

# IndiMail Daemons
${prefix}/sbin/svctool --indisrvr=4000 --servicedir=$servicedir \
	--localip=0 --maxdaemons=40 --maxperip=25 --avguserquota=2097152 \
		--certfile=${sysconfdir}/certs/servercert.pem --ssl \
	--hardquota=52428800 --base_path=${mbase}
${prefix}/sbin/svctool --inlookup=infifo --servicedir=$servicedir \
	--cntrldir=control --threads=5 --activeDays=60 --password-cache --use-btree --max-btree-count=10000
if [ $nonssd -eq 0 ] ; then
${prefix}/sbin/svctool --pwdlookup=/tmp/nssd.sock --threads=5 --timeout=-1 \
	--mysqlhost=localhost --mysqluser=indimail \
	--mysqlpass=ssh-1.5- --mysqlsocket=${mysqlSocket} --servicedir=$servicedir
fi
${prefix}/sbin/svctool --poppass=106 --localip=0 --maxdaemons=40 --maxperip=25 \
	--memory=$poppass_mem \
		--certfile=${sysconfdir}/certs/servercert.pem --ssl \
	--setpassword=${prefix}/sbin/vsetpass --servicedir=$servicedir

#
# bogofilter configuration
#
if [ $nobogofilter -eq 0 ] ; then
	${prefix}/sbin/svctool --config=bogofilter
fi
# rebuild cdb
for i in imap pop3 poppass
do
	for j in `/bin/ls ${sysconfdir}/tcp/tcp.$i 2>/dev/null`
	do
		t1=`date +'%s' -r $j`
		if [ -f $j.cdb ] ; then
			t2=`date +'%s' -r $j.cdb`
		else
			t2=0
		fi
		if [ $t1 -gt $t2 ] ; then
			echo "Creating CDB $j.cdb"
			${prefix}/bin/tcprules $j.cdb $j.tmp < $j && /bin/chmod 664 $j.cdb \
				&& /bin/chown indimail:indimail $j.cdb
		fi
	done
done

if [ -f ${mandir}/man7/authlib.7 ] ; then
	gzip ${mandir}/man7/authlib.7
fi
if [ -f ${mandir}/man7/authlib.7.gz ] ; then
	for i in authshadow.7 authpwd.7 authpam.7 authcustom.7
	do
		${rm} -f ${mandir}/man7/$i
		ln -sf ${mandir}/man7/authlib.7.gz ${mandir}/man7/$i.gz
	done
fi
#update VIRTUAL_PKG_LIB for smtp service
indlib=`ls -d /usr/lib*/libindimail.so.*.*.* 2>/dev/null`
for port in 25 465 587
do
  if [ -n "$indlib" -a -f "$indlib" ] ; then
    echo $indlib > ${servicedir}/qmail-smtpd.$port/variables/VIRTUAL_PKG_LIB
  fi
done
if [ -n "$indlib" -a -f "$indlib" ] ; then
	echo $indlib > ${servicedir}/qmail-send.25/variables/VIRTUAL_PKG_LIB
fi

# turn off automatic refresh for services during first time installation
svc_list=""
for i in mrtg mysql.3306 fetchmail qmail-imapd.143 qmail-imapd-ssl.993 \
  qmail-pop3d.110 qmail-pop3d-ssl.995 proxy-imapd.4143 proxy-imapd-ssl.9143 \
  proxy-pop3d.4110 proxy-pop3d-ssl.9110 indisrvr.4000 inlookup.infifo \
  pwdlookup qmail-poppass.106 
do
  svc_list="$svc_list ${servicedir}/$i"
done
${prefix}/sbin/svctool --servicedir=${servicedir} --norefreshsvc="0 $svc_list"

#
# create /tmp/skip-install_tables so that svctool does not run sbin/install_tables
#
if [ -f ${libexecdir}/iupgrade.sh ] ; then
  echo "Running Custom Installation Script for post install"
  /bin/sh ${libexecdir}/iupgrade.sh post install @version@ $*
fi
) >> /tmp/indimail-setup.log 2>&1

if [ -f /etc/init/svscan.conf -o -f /etc/event.d/svscan ] ; then
	echo "1. Issue /sbin/initctl emit qmailstart to start services"
	count=1
elif [ -f /etc/systemd/system/multi-user.target.wants/svscan.service ] ; then
	echo "1. Issue /bin/systemctl start svscan to start services"
	count=1
else
	echo "1. Issue ${prefix}/sbin/initsvc -on"
	echo "2. Issue /sbin/init q to start services"
	count=2
fi
echo "   You can also use the 'service' command to start indimail"
echo "   sudo service indimail start"
count=`expr $count + 1`
echo "$count. If you want to use IndiMail to manage MySQL startup, remove"
echo "   ${servicedir}/mysql.3306/down"
count=`expr $count + 1`
echo "$count. Change your default domain in ${sysconfdir}/control/defaultdomain"
count=`expr $count + 1`
echo "$count. You can optionally run the following command to verify installation"
echo "   sudo ${prefix}/sbin/svctool --check-install --servicedir=${servicedir} \\"
echo "       --qbase=${qbase} --qcount=${qcount} --qstart=1"
if [ $noclamav -eq 0 ] ; then
count=`expr $count + 1`
echo "$count. You need to ensure that clamav signatures download have completed so that"
echo "   you can start sending emails. Look at ${logdir}/freshclam/current"
fi
if [ ! -f ${sysconfdir}/certs/servercert.pem ] ; then
count=`expr $count + 1`
if [ ${nocourierimap} -eq 0 ] ; then
echo "$count. You need to create CERTS for STARTTLS / SSL enabled IMAP/POP3."
else
echo "$count. You need to create CERTS for STARTTLS."
fi
echo "   Run the following command to create Certificate for TLS/SSL"
echo "   ${prefix}/sbin/svctool --config=cert --postmaster=postmaster@${default_domain} --common_name=${default_domain}"
fi
echo
echo "Check /tmp/indimail-setup.log for the detailed installation log!!!"

exit 0
