#
#
# $Id: indimail.spec.in,v 2.479 2018-11-06 09:30:47+05:30 Cprogrammer Exp mbhangui $
%undefine _missing_build_ids_terminate_build
%global _unpackaged_files_terminate_build 1
%global debug_package %{nil}

%if %{defined _project}
# define if building on openSUSE build service
%global build_on_obs       1
%global reconfigure_mode   0
%else
%define _project           local
%global build_on_obs       0
%global reconfigure_mode   0
%global reconf_fetchmail   1
%global reconf_courierimap 1
%global reconf_bogofilter  1
%global _hardened_build    1
%endif

%global pythondir %(python -c "from distutils.sysconfig import get_python_lib; print get_python_lib()")
%global _prefix            @prefix@
%global indimaildir        @indimaildir@
%global domaindir          @domaindir@
%global sysconfdir         @sysconfdir@
%global libexecdir         @libexecdir@
%global mandir             @mandir@
%global shareddir          @shareddir@
%global defaultDomain      @defaultdomain@
%global courier_version    5.0.0
%global bogofilter_version 1.2.4
%global pam_multi_version  1.1
%global ucspi_version      0.88
%global qmail_version      1.03
%global fetchmail_version  6.4.0
%global tcpserver_plugin   1
%global nosignatures       1
%global fortune_version    1.1
%global nssd_version       1.1
%global flash_version      0.9.4
%global eps_version        1.2
%global cdb_version        1.0
%global mysql_version      6.0.9-alpha
%if 0%{?suse_version}
%global noperms            1
%else
%global noperms            0
%endif
%global see_base           For a description of IndiMail visit http://www.indimail.org
%global nonssd             0
%global noproxy            0
%global nocourierimap      0
%global nofetchmail        0
%global nobogofilter       0
%global nodksignatures     0

%global _verbose           0
%global qcount             5
%global qbase              %{indimaildir}/queue
%global mbase              @basepath@
%global logdir             @logdir@
%global moduledir          %{_prefix}/lib/indimail/modules
%global servicedir         @servicedir@
%global pam_confdir        %{_sysconfdir}/pam.d
%global pam_module_dir     /%{_lib}/security
%global _pkg_config_path   /usr/%{_lib}/pkgconfig
%global mysqlSocket        /var/run/mysqld/mysqld.sock

%if %build_on_obs == 1
# change mysqlPrefix to /usr for openSUSE buildservice
%global mysqlPrefix        /usr
%else
%global mysqlPrefix        @mysql_prefix@
%endif

%if %build_on_obs == 1
%global packager Manvendra Bhangui <manvendra@indimail.org>
%endif

Summary: A Flexible Messaging Platform with Multi-Host/Multi-Protocol support
Name: indimail
Version: @version@
Provides: libindimail = %{version}
Release: 1.1%{?dist}

## user/group management
# Note: it is not necessary to assign 555 for uid, gid. The package will use any id assigned to username, groupname
# at runtime
%global uid                555
%global gid                555
%global username           indimail
%global groupname          indimail
# Note: 999 indimail-mta does not require any specific values for uids/gids. 999 is just
# for rpmlint to shut up and stop complaining
Requires: user(alias)
Requires: user(qmaill)
Requires: user(indimail)
Requires: user(qscand)
Requires: group(qmail)
Requires: group(nofiles)
Requires: group(qscand)
Requires: group(indimail)

%if %build_on_obs == 0
Requires(pre): shadow-utils
Requires(postun): shadow-utils
%endif

%if %build_on_obs == 1
License: GPL-3.0+
%else
License: GPLv3
%endif

%if %{undefined suse_version} && %{undefined sles_version}
Group: System Environment/Base
%else
Group: Productivity/Networking/Email/Servers
%endif
Source0:  http://downloads.sourceforge.net/%{name}/%{name}-%{version}.tar.gz
%if %nocourierimap == 0
%if %build_on_obs == 0
Source1:  http://downloads.sourceforge.net/courier/courier-imap-%{courier_version}.tar.bz2
%else
Source1:  http://downloads.sourceforge.net/%{name}/courier-imap-%{courier_version}.tar.bz2
%endif
%endif
Source2:  http://downloads.sourceforge.net/%{name}/flash-0.9.4.tar.gz
Source3:  http://downloads.sourceforge.net/%{name}/altermime-0.3.10.tar.gz
Source4:  http://downloads.sourceforge.net/%{name}/ripmime-1.4.0.10.tar.gz
Source5:  http://downloads.sourceforge.net/%{name}/mpack-1.6.tar.gz
Source6:  http://downloads.sourceforge.net/%{name}/fortune-%{fortune_version}.tar.gz
%if %nonssd == 0
Source7:  http://downloads.sourceforge.net/%{name}/nssd-%{nssd_version}.tar.gz
%endif
%if %nobogofilter == 0
%if %build_on_obs == 0
Source8: http://downloads.sourceforge.net/bogofilter/bogofilter-%{bogofilter_version}.tar.bz2
%else
Source8: http://downloads.sourceforge.net/%{name}/bogofilter-%{bogofilter_version}.tar.bz2
%endif
%endif
%if %nofetchmail == 0
Source9: http://downloads.sourceforge.net/%{name}/fetchmail-%{fetchmail_version}.tar.xz
%endif
Source10: http://downloads.sourceforge.net/%{name}/pam-multi-%{pam_multi_version}.tar.gz
Source11: http://downloads.sourceforge.net/%{name}/%{name}-rpmlintrc
%if %noperms == 0
%if 0%{?suse_version} >= 1120
Source12:%{name}-permissions.easy
Source13:%{name}-permissions.secure
Source14:%{name}-permissions.paranoid
%endif
%endif

# Comment out below for openSUSE buildservice
%if %build_on_obs == 0

%if %nocourierimap == 0
Patch1:  http://downloads.sourceforge.net/%{name}/Patches-2.0/courier-imap-%{courier_version}.patch.gz
%endif

%if %nobogofilter == 0
Patch8: http://downloads.sourceforge.net/%{name}/Patches-2.0/bogofilter-%{bogofilter_version}.patch.gz
%endif

%if %nofetchmail == 0
Patch9: http://downloads.sourceforge.net/%{name}/Patches-2.0/fetchmail-%{fetchmail_version}.patch.gz
%endif

%endif

URL: http://www.indimail.org
%if %build_on_obs == 1
AutoReqProv: No
%else
AutoReqProv: Yes
%endif
# few binaries were moved to sbin and indimail >= 2.5 depends on that
Requires: indimail-mta > 2.6
Conflicts: %{name} < 2.0
Obsoletes: %{name} < 2.0

BuildRequires: openssl-devel rpm gcc gcc-c++ make bison binutils coreutils grep
BuildRequires: glibc glibc-devel openssl procps readline-devel
BuildRequires: sed ncurses-devel gettext-devel
BuildRequires: python-devel flex findutils
BuildRequires: readline gzip autoconf automake libtool pkgconfig
BuildRequires: xz
BuildRequires: mysql-devel pam-devel

%if %nocourierimap == 0
BuildRequires: libgcrypt-devel gdbm-devel libidn-devel
BuildRequires: perl
%endif

%if %{defined fedora_version}
BuildRequires: redhat-lsb-core
%endif
%if %{defined centos_version} || %{defined rhel_version}
BuildRequires: redhat-lsb
%endif

%if %{undefined centos_version} && %{undefined rhel_version}
BuildRequires: chrpath
%endif

%if %{undefined rhel_version}
BuildRequires: sharutils
%endif

%if %{defined suse_version}
%if 0%{?suse_version} > 1110 || 0%{?suse_version} == 1310 || 0%{?suse_version} == 1230 || 0%{?suse_version} == 1220 || 0%{?suse_version} == 1210 || 0%{?suse_version} == 1140
BuildRequires: lsb-release
%endif
%endif

%if 0%{?suse_version} == 1220 || 0%{?suse_version} == 1210 || 0%{?suse_version} == 1140 || 0%{?suse_version} == 1100 || 0%{?suse_version} == 1030 || 0%{?suse_version} == 1020
BuildRequires: chrpath
%endif

%if 0%{?suse_version}
BuildRequires: openldap2-devel
%else
BuildRequires: openldap-devel
%endif

%if %noperms == 0
%if 0%{?suse_version} >= 1120
PreReq: permissions
%endif
%endif

%if %nobogofilter == 0
%if 0%{?suse_version}
BuildRequires: db-devel
%else
%if 0%{?fedora_version} > 17 || 0%{?centos_version} > 600 || 0%{?rhel_version} > 600
BuildRequires: libdb-devel
%else
BuildRequires: db4-devel
%endif
%endif
%endif

################################# OBS ###############################
%if %build_on_obs == 1
%if 0%{?rhel_version} != 600 && 0%{?rhel_version} != 700
BuildRequires: sharutils
%endif

%if 0%{?suse_version}
BuildRequires: -post-build-checks
#!BuildIgnore: post-build-checks
#!BuildIgnore: brp-check-suse
%endif
%endif
################################# OBS ###############################

Requires: pam mrtg
Requires: coreutils grep /bin/sh glibc openssl

# rpm -qf /bin/ls
# rpm -qp --queryformat %%{arch} some-file.rpm
# rpm --showrc for all macros
# rpm -qlp some-file.rpm
Requires: /usr/sbin/useradd /usr/sbin/groupadd /usr/sbin/groupdel
Requires: /sbin/chkconfig procps /usr/bin/awk /usr/bin/which
Requires: binutils initscripts sed findutils pkgconfig

%if 0%{?suse_version}
Requires: mysql-community-server
%else
Requires: mysql-server
%endif

%if %{defined centos_version} || %{defined rhel_version}
Requires: policycoreutils-python
%endif
%if %nobogofilter == 0
Requires: bogofilter-wordlist
%endif

%if %build_on_obs == 1
BuildRoot: %(mktemp -ud %{_tmppath}/%{name}-%{version}-%{release}-XXXXXXX)
%endif
#
# IndiMail is choosy and runs on reliable OS only
#
Excludeos: windows

%description
IndiMail is a messaging platform providing multi-cluster domain support.
It provides IMAP/POP3 protocol using Courier Imap, SPAM filtering using
bogofilter (A Bayesian Spam Filter), mail retreival using Fetchmail.
Additionally it packages other useful utilities like mpack, unpack,
altermime, ripmime, fortune, flash.

IndiMail provides ability for a single domain to have users across multiple
hosts (even across different geographical locations) and tools to manage
virtual domains.

%{see_base}

%package devel
Summary: IndiMail - Development header files and libraries
Group: Development/Libraries/Other
Requires: libindimail
Conflicts: %{name}-devel < 2.0

%description devel
This package contains the development header files and libraries
necessary to develop IndiMail client applications.

%{see_base}

%package -n libindimail
Summary: IndiMail - Shared libraries
Group: Development/Libraries/Other
Conflicts: libindimail < 2.0

%description -n libindimail
This package contains the shared libraries (*.so*) which certain
languages and applications need to dynamically load and use IndiMail.

%{see_base}

%prep
echo "---------------- INFORMATION ------------------------"
echo target        %_target
echo target_alias  %_target_alias
echo target_cpu    %_target_cpu
echo target_os     %_target_os
echo target_vendor %_target_vendor
echo Project       %{_project}
echo pythondir     %{pythondir}
echo Building %{name}-%{version}-%{release} Build %{_build} OS %{_os} lib=%{_lib} libdir=%{_libdir}
echo "------------------------------------------------------"

for i in %{name}-%{version} altermime-0.3.10 ripmime-1.4.0.10 flash-0.9.4 \
mpack-1.6 fortune-%{fortune_version} pam-multi-%{pam_multi_version} \
nssd-%{nssd_version} bogofilter-%{bogofilter_version} \
fetchmail-%{fetchmail_version} courier-imap-%{courier_version}
do
  (
  if [ -d $i ] ; then
    %{__rm} -rf $i
  fi
  if [ " $i" = " fetchmail-%{fetchmail_version}" -a %nofetchmail -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " bogofilter-%{bogofilter_version}" -a %nobogofilter -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " courier-imap-%{courier_version}" -a %nocourierimap -ne 0 ] ; then
    continue
  fi
  if [ -f ../SOURCES/$i.tar.bz2 ] ; then
    %{__bzip2} -d -c ../SOURCES/$i.tar.bz2 | tar xf -
  elif [ -f ../SOURCES/$i.tar.xz ] ; then
    xz -d -c ../SOURCES/$i.tar.xz |tar xf -
  elif [ -f ../SOURCES/$i.tar.gz ] ; then
    gunzip -c ../SOURCES/$i.tar.gz | tar xf -
  else
    echo "No Source Archive for $i"
    exit 1
  fi
%if %build_on_obs == 1
  if [ -d $i ] ; then
    #
    # Apply IndiMail Patch
    #
    if [ " $i" = " %{name}-%{version}" ] ; then
      if [ -f ../SOURCES/%{name}-%{version}.patch ] ; then
        patch -p0 < ../SOURCES/%{name}-%{version}.patch
        continue
      elif [ -f ../SOURCES/%{name}-%{version}.patch.gz ] ; then
        gunzip -c ../SOURCES/%{name}-%{version}.patch.gz | patch -p0
        continue
      fi
    fi
  fi
%endif
  )
done

# skip patch application on obs. Picked the patched source from indimail/obs subdir
# autoreconf gives issues
%if %build_on_obs == 0
%if %nocourierimap == 0
%patch1  -p0
%endif
%endif

# skip patch application on obs. Picked the patched source from indimail/obs subdir
# autoreconf gives issues
# Comment out below for openSUSE buildservice
%if %build_on_obs == 0
%if %nobogofilter == 0
%patch8 -p0
%endif
%if %nofetchmail == 0
%patch9 -p0
%endif
%endif

%build
ID=$(id -u)
#### IndiMail ######################
cd %{name}-%{version}

if [ %{reconfigure_mode} -eq 1 ] ; then
  echo "reconfiguring..."
  %{__mkdir_p} m4
  aclocal -I m4
  autoreconf -fiv
fi

%configure --prefix=%{_prefix} --sysconfdir=%{sysconfdir} \
  --mandir=%{_prefix}/share/man --datarootdir=%{_prefix}/share/indimail \
  --with-pkgconfigdir=%{_pkg_config_path} --libdir=%{_libdir} --enable-domaindir=%{domaindir} \
  --enable-mysqlprefix=%{mysqlPrefix} \
  --libexecdir=%{libexecdir} --mandir=%{mandir} --enable-qmaildir=%{indimaildir} \
  --enable-shareddir=%{shareddir} --datarootdir=%{shareddir} \
  --enable-modbase=%{_prefix}/lib/indimail \
  --enable-basepath=@basepath@ --enable-logdir=%{logdir} \
  --enable-tcprules-prog=%{_prefix}/bin/tcprules --enable-tcpserver-file=%{sysconfdir}/tcp/tcp.smtp \
  --enable-cookiedir=%{_prefix}/share/indimail/fortunes \
  --enable-moduledir=%pam_module_dir `%{__cat} config/indimail.opts`

#### nssd ######################
%if %nonssd == 0
if [ -d ../nssd-%{nssd_version} ] ; then
  cd ../nssd-%{nssd_version}
  if [ %{reconfigure_mode} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi

  %configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
  --mandir=%{mandir} --libdir=%{_libdir} \
  --enable-mysqlprefix=%{mysqlPrefix} \
  `%{__cat} ../%{name}-%{version}/config/nssd.opts`
fi
%endif

#### courier-imap ######################
%if %nocourierimap == 0
if [ -d ../courier-imap-%{courier_version} ] ; then
  cd ../courier-imap-%{courier_version}
  if [ %{reconf_courierimap} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
    %{__cp} libs/unicode/depcomp .
  fi
  %configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --bindir=%{_prefix}/bin \
  --mandir=%{mandir} --sysconfdir=%{sysconfdir} --libdir=%{_libdir} \
  --datarootdir=%{shareddir} --with-certsdir=%{sysconfdir}/control \
  --with-mailer=%{_prefix}/bin/sendmail \
  `%{__cat} ../%{name}-%{version}/config/courier-imap.opts`
fi
%endif

#### bogofilter ######################
%if %nobogofilter == 0
if [ -d ../bogofilter-%{bogofilter_version} ] ; then
  cd ../bogofilter-%{bogofilter_version}
  if [ %{reconf_bogofilter} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi
  (
  HOME='.';export HOME
  ./configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
  --mandir=%{mandir} --libdir=%{_libdir} `%{__cat} ../%{name}-%{version}/config/bogofilter.opts`
  )
fi
%endif

#### fetchmail ######################
%if %nofetchmail == 0
if [ -d ../fetchmail-%{fetchmail_version} ] ; then
  cd ../fetchmail-%{fetchmail_version}
  if [ %{reconf_fetchmail} -eq 1 ] ; then
    echo "reconfiguring..."
    %{__mkdir_p} m4
    aclocal -I m4
    autoreconf -fiv
  fi
  %configure --prefix=%{_prefix} --libexecdir=%{libexecdir} --sysconfdir=%{sysconfdir} \
    --enable-binprefix=%{_prefix} --mandir=%{mandir} --datarootdir=%{shareddir} \
    --libdir=%{_libdir} \
    `%{__cat} ../%{name}-%{version}/config/fetchmail.opts`
fi
%endif
if [ $ID -eq 0 ] ; then
  if [ $nscd_up -ge 1 ] ; then
    if [ -x %{_sysconfdir}/init.d/nscd ] ; then
      %{_sysconfdir}/init.d/nscd start
    elif [ -f %{_sysconfdir}/lib/systemd/system/multi-user.target/nscd.service ] ; then
      /bin/systemctl start nscd.service
    fi
  fi
fi

%install
ID=$(id -u)
%{__mkdir_p} $RPM_BUILD_ROOT%{_prefix}
for i in %{name}-%{version} nssd-%{nssd_version} bogofilter-%{bogofilter_version} \
fetchmail-%{fetchmail_version} courier-imap-%{courier_version}
do
  if [ " $i" = " fetchmail-%{fetchmail_version}" -a %nofetchmail -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " bogofilter-%{bogofilter_version}" -a %nobogofilter -ne 0 ] ; then
    continue
  fi
  if [ " $i" = " courier-imap-%{courier_version}" -a %nocourierimap -ne 0 ] ; then
    continue
  fi
  if [ -d $i ] ; then
    cd $i
    if [ %{_verbose} -eq 0 ] ; then
      %{__make} -s DESTDIR=%{buildroot}
      %{__make} -s DESTDIR=%{buildroot} install-strip
    else
      %{__make} DESTDIR=%{buildroot}
      %{__make} DESTDIR=%{buildroot} install-strip
    fi
%if %noperms == 0
    if [ " $i" = " %{name}-%{version}" ] ; then
      %{__cp} %{name}-permissions.easy   ../../SOURCES/%{name}-permissions.easy
      %{__cp} %{name}-permissions.secure ../../SOURCES/%{name}-permissions.secure
      %{__cp} %{name}-permissions.paranoid ../../SOURCES/%{name}-permissions.paranoid
    fi
%endif
    cd ..
  fi
done
#
# remove fetchmail docs installed by IndiMail Makefile
#
if [ %nofetchmail -eq 1 ] ; then
  %{__rm} -f %{buildroot}%{shareddir}/doc/COPYING.fetchmail \
    %{buildroot}%{shareddir}/doc/README-NTLM.fetchmail \
    %{buildroot}%{shareddir}/doc/README-SSL-SERVER.fetchmail \
    %{buildroot}%{shareddir}/doc/README-SSL.fetchmail \
    %{buildroot}%{shareddir}/doc/README.fetchmail
fi
for i in eps cdb flash indimail
do
  %{__rm} -f %{buildroot}%{_libdir}/lib"$i".la
done
%{__rm} -f %{buildroot}%{moduledir}/iauth.la

if [ %nonssd -eq 0 ] ; then
  %{__rm} -f %{buildroot}%{_libdir}/libnss_nssd.la
fi
if [ %nocourierimap -eq 0 ] ; then
  %{__rm} -f %{buildroot}/%{_libdir}/libunicode.la
  if [ -x /usr/bin/chrpath ] ; then
     /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/imapd
     /usr/bin/chrpath -d %{buildroot}%{_prefix}/sbin/imaplogin
  fi
fi
if [ %nobogofilter -eq 0 ] ; then
  if [ -x /usr/bin/chrpath ] ; then
    for i in bogofilter bogoutil bogotune
    do
      chmod 755 %{buildroot}%{_prefix}/bin/$i
         /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/$i
    done
  fi
fi

%{__mkdir_p} %{buildroot}%{domaindir}/domains
%{__mkdir_p} %{buildroot}%{_prefix}/include/indimail

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%{__mkdir_p} %{buildroot}%{_sysconfdir}/permissions.d/
install -m 644 %{S:14} %{buildroot}%{_sysconfdir}/permissions.d/%{name}-permissions
install -m 644 %{S:15} %{buildroot}%{_sysconfdir}/permissions.d/%{name}-permissions.secure
%endif
%endif

if [ -x /usr/bin/chrpath ] ; then
  /usr/bin/chrpath -d %{buildroot}%{_libdir}/*.so
  for i in dbinfo flash hostcntrl printdir \
    proxyimap proxypop3 sigtool vacation vaddaliasdomain vadddomain vadduser \
    valias vatrn vbulletin vcalias vcfilter vdeldomain vdeluser vdominfo \
    vgroup vhostid vipmap vlimit vmoduser vmoveuser vpasswd vpriv sslerator \
    vproxy vrenamedomain vrenameuser vsetuserquota vsmtp vuserinfo tcpserver ismaildup
  do
    if [ -f %{buildroot}%{_prefix}/bin/$i ] ; then
      /usr/bin/chrpath -d %{buildroot}%{_prefix}/bin/$i
    fi
  done

  /usr/bin/chrpath -d %{buildroot}%{libexecdir}/imapmodules/authindi
  /usr/bin/chrpath -d %{buildroot}%{libexecdir}/imapmodules/authpgsql
  /usr/bin/chrpath -d %{buildroot}%{libexecdir}/sq_vacation
  /usr/bin/chrpath -d %{buildroot}%{libexecdir}/qmailmrtg7
  /usr/bin/chrpath -d %{buildroot}%{moduledir}/iauth.so
  /usr/bin/chrpath -d %{buildroot}%{moduledir}/background
  /usr/bin/chrpath -d %{buildroot}%{moduledir}/alarms
  /usr/bin/chrpath -d %{buildroot}%{moduledir}/countdown

  for i in adminclient chowkidar cindimail clearopensmtp \
  hostsync indisrvr inlookup inquerytest install_tables ipchange \
  mgmtpass postdel systpass updatefile updaterules vchkpass vdelivermail \
  vdeloldusers vfilter vfstab vmoddomain vreorg vsetpass nssd vserverinfo check_getpw \
  vtable resetquota
  do
    if [ -f %{buildroot}%{_prefix}/sbin/$i ] ; then
      /usr/bin/chrpath -d %{buildroot}%{_prefix}/sbin/$i
    fi
    if [ -f %{buildroot}%{libexecdir}/$i ] ; then
      /usr/bin/chrpath -d %{buildroot}%{libexecdir}/$i
    fi
  done
fi
# Compress the man pages
find %{buildroot}%{mandir} -type f -exec gzip -q {} \;
if [ -f %{buildroot}%{mandir}/man7/authlib.7.gz ] ; then
  for i in authshadow.7 authpwd.7 authpam.7 authcustom.7
  do
    %{__rm} -f %{buildroot}%{mandir}/man7/$i
    echo ".so man7/authlib.7" |gzip -c > %{buildroot}%{mandir}/man7/$i.gz
  done
fi
# pam-multi
%{__rm} -f %{buildroot}%{pam_module_dir}/pam-multi.la
%{__rm} -f %{buildroot}%{pam_module_dir}/pam-multi.a
if [ -x /usr/bin/chrpath ] ; then
  /usr/bin/chrpath -d %{buildroot}%{pam_module_dir}/pam-multi.so
  /usr/bin/chrpath -d %{buildroot}%{_prefix}/sbin/pam-checkpwd
fi

if [ -x /bin/touch ] ; then
  TOUCH=/bin/touch
elif [ -x /usr/bin/touch ] ; then
  TOUCH=/usr/bin/touch
else
  TOUCH=/bin/touch
fi
%{__mkdir_p} %{buildroot}%{indimaildir}/inquery
%{__mkdir_p} %{buildroot}%{sysconfdir}/users
%{__mkdir_p} %{buildroot}%{sysconfdir}/control
%{__mkdir_p} %{buildroot}%{sysconfdir}/tcp
# Create these files so that %%ghost does not complain
for i in tcp.imap tcp.imap.cdb tcp.pop3 tcp.pop3.cdb \
  tcp.poppass tcp.poppass.cdb
do
  if [ ! -f %{buildroot}%{sysconfdir}/tcp/$i ] ; then
    $TOUCH %{buildroot}%{sysconfdir}/tcp/$i
  fi
done
for i in indimail.cnf procmailrc indimail.pp indimail.mod \
  users/cdb users/assign
do
  if [ ! -f %{buildroot}%{sysconfdir}/$i ] ; then
    $TOUCH %{buildroot}%{sysconfdir}/$i
  fi
done
%if %nonssd == 0
  $TOUCH %{buildroot}%{sysconfdir}/nssd.conf
%endif
(
for i in `%{__cat} %{buildroot}%{sysconfdir}/controlfiles.i`
do
  echo "%ghost %config(noreplace,missingok)   %{sysconfdir}/control/$i"
  $TOUCH %{buildroot}%{sysconfdir}/control/$i
done
) > config_files.list

%if %{undefined suse_version} && %{undefined sles_version}
  %{__mkdir_p} %{buildroot}%{logdir}
  for i in imapd.143 imapd-ssl.993 indisrvr.4000 \
    inlookup.infifo logfifo mrtg mysql.3306 pop3d.110 pop3d-ssl.995 poppass.106 \
    proxyIMAP.4143 proxyIMAP.9143 proxyPOP3.4110 proxyPOP3.9110 pwdlookup
  do
    %{__mkdir_p} %{buildroot}%{logdir}/$i
    $TOUCH %{buildroot}%{logdir}/$i/current
  done
  if [ %nofetchmail -eq 0 ] ; then
    %{__mkdir_p} %{buildroot}%{logdir}/fetchmail
    $TOUCH %{buildroot}%{logdir}/fetchmail/current
  fi
  
  if [ %nobogofilter -eq 0 ] ; then
    $TOUCH %{buildroot}%{sysconfdir}/bogofilter.cf
  fi
  if [ %nofetchmail -eq 0 ] ; then
    $TOUCH %{buildroot}%{sysconfdir}/fetchmailrc
    #%%find_lang fetchmail
  fi
%endif

%files -f config_files.list
%defattr(-, root, root,-)
#
# Directories
#
# opensuse requres ghost files to be present
%if %{undefined suse_version} && %{undefined sles_version}
%ghost %dir                       %{logdir}
%ghost %dir                       %{logdir}/*
%ghost                            %{logdir}/*/*
%endif

%dir %attr(775,root,indimail)     %{domaindir}/domains
%dir %attr(775,indimail,qmail)    %{indimaildir}/inquery
%dir %attr(555,root,root)         %{libexecdir}/imapmodules
%if "%{mandir}" != "/usr/share/man"
%dir %attr(755,root,root)         %{mandir}
%dir %attr(755,root,root)         %{mandir}/man1
%dir %attr(755,root,root)         %{mandir}/cat1
%dir %attr(755,root,root)         %{mandir}/man5
%dir %attr(755,root,root)         %{mandir}/cat5
%dir %attr(755,root,root)         %{mandir}/man7
%dir %attr(755,root,root)         %{mandir}/cat7
%dir %attr(755,root,root)         %{mandir}/man8
%dir %attr(755,root,root)         %{mandir}/cat8
%endif
%if "%{_prefix}" != "/usr"
%dir %attr(555,root,root)         %{_libdir}
%endif

%if %nofetchmail == 0
%dir %attr(755,root,root)         %{shareddir}/locale
%endif

%dir %attr(755,root,root)         %{shareddir}/fortunes
#
# If the configuration file should not be replaced when the RPM is
# upgraded, mark it as follows:
# %%config(noreplace) filename
#
# Configuration files must be marked as such in packages.
# As a rule of thumb, use %%config(noreplace) instead of plain %%config unless your best,
# educated guess is that doing so will break things. In other words, think hard before
# overwriting local changes in configuration files on package upgrades.
# An example case when /not/ to use noreplace is when a package's configuration file
# changes so that the new package revision wouldn't work with the config file
# from the previous package revision. Whenever plain %%config is used,
# add a brief comment to the specfile explaining why.

%attr(444,root,root) %config(noreplace)           %{sysconfdir}/system.flashlogin
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/system.rc
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/system.menu
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/system.module
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/osh.table
# Allow new control files to get added with new packages
# unlikely for this file to have local changes
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/controlfiles.i
# For configuration files that may be found missing during uninstall have
# $config(missingok)
#
# For files that should be included in the list of files so that they
# are uninstalled when the package is removed but may not exist until
# they are created during post-install should be marked as follows:
# %%ghost filename
%ghost %attr(0644,root,root) %config(noreplace,missingok) %{sysconfdir}/users/assign
%ghost %attr(0644,root,root) %config(noreplace,missingok) %{sysconfdir}/users/cdb
%if %nobogofilter == 0
%ghost %config(noreplace,missingok)               %{sysconfdir}/bogofilter.cf
%endif
%if %nofetchmail == 0
%ghost %config(noreplace,missingok)               %{sysconfdir}/fetchmailrc
%endif
%ghost %config(noreplace,missingok)               %{sysconfdir}/procmailrc

%ghost %config(noreplace,missingok)               %{sysconfdir}/indimail.cnf
%if %nonssd == 0
%ghost %config(noreplace,missingok)               %{sysconfdir}/nssd.conf
%endif
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp/tcp.imap
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp/tcp.pop3
%ghost %config(noreplace,missingok)               %{sysconfdir}/tcp/tcp.poppass
#
# These files will get removed during uninstallation
#
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp/tcp.imap.cdb
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp/tcp.pop3.cdb
%ghost %attr(0644,indimail,indimail)              %{sysconfdir}/tcp/tcp.poppass.cdb
#
#
%ghost %attr(0644,root,root)                      %{sysconfdir}/indimail.pp
%ghost %attr(0644,root,root)                      %{sysconfdir}/indimail.mod

%attr(444,root,root) %config(noreplace)           %{sysconfdir}/cronlist.i
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/indimail.mrtg.cfg
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/headerlist
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/indimail.settings
%attr(444,root,root) %config(noreplace)           %{sysconfdir}/perm_list.i

%attr(644,root,qmail) %config(noreplace)          %{sysconfdir}/indimail.te
%attr(644,root,qmail) %config(noreplace)          %{sysconfdir}/indimail.fc
%attr(444,root,root)  %config(noreplace)          %{sysconfdir}/indimail-release

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%attr(644,root,root)                              %{_sysconfdir}/permissions.d/%{name}-permissions
%attr(644,root,root)                              %{_sysconfdir}/permissions.d/%{name}-permissions.secure
%endif
%endif

%if %nobogofilter == 0
%attr(644,root,root)                              %{sysconfdir}/bogofilter.cf.example
%endif

%if %nocourierimap == 0
%attr(600,root,root)                              %{sysconfdir}/pop3d-ssl.dist
%attr(600,root,root)                              %{sysconfdir}/imapd-ssl.dist
%attr(600,root,root)                              %{sysconfdir}/pop3d.cnf
%attr(600,root,root)                              %{sysconfdir}/imapd.cnf
%attr(600,root,root)                              %{sysconfdir}/pop3d.dist
%attr(600,root,root)                              %{sysconfdir}/imapd.dist
%attr(600,root,root)                              %{sysconfdir}/authmodulelist
%attr(644,root,root)                              %{sysconfdir}/quotawarnmsg.example
%endif

#
# setuid Binaries
#
%attr(4555,root,root)                   %{_prefix}/bin/vrenameuser
%attr(4555,root,root)                   %{_prefix}/bin/vmoveuser
%attr(4555,root,root)                   %{_prefix}/bin/vrenamedomain
%attr(4555,root,root)                   %{_prefix}/bin/vmoduser
%attr(4555,root,root)                   %{_prefix}/bin/vcfilter
%attr(4555,root,root)                   %{_prefix}/bin/vsetuserquota
%attr(4555,root,root)                   %{_prefix}/bin/vaddaliasdomain
%attr(4555,root,root)                   %{_prefix}/bin/vadduser
%attr(4555,root,root)                   %{_prefix}/bin/printdir
%attr(4555,root,root)                   %{_prefix}/bin/vdeluser
%attr(4555,root,root)                   %{_prefix}/bin/vbulletin
%attr(4555,root,root)                   %{_prefix}/bin/vdominfo
%attr(4555,root,root)                   %{_prefix}/bin/vadddomain
%attr(4555,root,root)                   %{_prefix}/bin/vdeldomain
%attr(4555,root,root)                   %{_prefix}/sbin/systpass

# indimail binaries
%attr(755,root,qmail)                   %{_prefix}/bin/vuserinfo
%attr(755,root,qmail)                   %{_prefix}/bin/hostcntrl
%attr(755,root,qmail)                   %{_prefix}/bin/vpasswd
%attr(755,root,qmail)                   %{_prefix}/bin/vcalias
%attr(755,root,qmail)                   %{_prefix}/bin/vhostid
%attr(755,root,qmail)                   %{_prefix}/bin/vatrn
%attr(755,root,qmail)                   %{_prefix}/bin/vlimit
%attr(755,root,qmail)                   %{_prefix}/bin/crypt
%attr(755,root,qmail)                   %{_prefix}/bin/vpriv
%attr(755,root,qmail)                   %{_prefix}/bin/vipmap
%attr(755,root,qmail)                   %{_prefix}/bin/vsmtp
%attr(755,root,qmail)                   %{_prefix}/bin/vgroup
%attr(755,root,qmail)                   %{_prefix}/bin/vcaliasrev
%attr(755,root,qmail)                   %{_prefix}/bin/vacation
%attr(755,root,qmail)                   %{_prefix}/bin/proxyimap
%attr(755,root,qmail)                   %{_prefix}/bin/proxypop3
%attr(755,root,qmail)                   %{_prefix}/bin/crc
%attr(755,root,qmail)                   %{_prefix}/bin/iecho

%attr(755,root,qmail)                   %{_prefix}/bin/altermime
%attr(755,root,qmail)                   %{_prefix}/bin/crcdiff
%attr(755,root,qmail)                   %{_prefix}/bin/dbinfo
%attr(755,root,qmail)                   %{_prefix}/bin/randstr
%attr(755,root,qmail)                   %{_prefix}/bin/ripmime
%attr(755,root,qmail)                   %{_prefix}/bin/sslerator

%attr(755,root,qmail)                   %{_prefix}/sbin/resetquota
%attr(755,root,qmail)                   %{_prefix}/sbin/vserverinfo
%attr(755,root,qmail)                   %{_prefix}/sbin/adminclient
%attr(755,root,qmail)                   %{_prefix}/sbin/chowkidar
%attr(755,root,qmail)                   %{_prefix}/sbin/clearopensmtp
%attr(755,root,qmail)                   %{_prefix}/sbin/hostsync
%attr(755,root,qmail)                   %{_prefix}/sbin/indisrvr
%attr(755,root,qmail)                   %{_prefix}/sbin/initsvc
%attr(755,root,qmail)                   %{_prefix}/sbin/inlookup
%attr(755,root,qmail)                   %{_prefix}/sbin/inquerytest
%attr(755,root,qmail)                   %{_prefix}/sbin/install_tables
%attr(755,root,qmail)                   %{_prefix}/sbin/vtable
%attr(755,root,qmail)                   %{_prefix}/sbin/ipchange
%attr(755,root,qmail)                   %{_prefix}/sbin/mgmtpass
%attr(755,root,qmail)                   %{_prefix}/sbin/updaterules
%attr(755,root,qmail)                   %{_prefix}/sbin/vchkpass
%attr(755,root,qmail)                   %{_prefix}/sbin/vsetpass
%attr(755,root,qmail)                   %{_prefix}/sbin/vdelivermail
%attr(755,root,qmail)                   %{_prefix}/sbin/vdeloldusers
%attr(755,root,qmail)                   %{_prefix}/sbin/vfilter
%attr(755,root,qmail)                   %{_prefix}/sbin/vfstab
%attr(755,root,qmail)                   %{_prefix}/sbin/vmoddomain
%attr(755,root,qmail)                   %{_prefix}/sbin/vreorg
%attr(755,root,qmail)                   %{_prefix}/bin/valias
%attr(755,root,qmail)                   %{_prefix}/bin/vproxy
%attr(755,root,qmail)                   %{_prefix}/sbin/osh
%attr(755,root,qmail)                   %{_prefix}/sbin/postdel
%attr(755,root,qmail)                   %{_prefix}/bin/ismaildup

%attr(755,root,qmail)                   %{_prefix}/bin/mpack
%attr(755,root,qmail)                   %{_prefix}/bin/munpack
%attr(755,root,qmail)                   %{_prefix}/bin/fortune
%attr(755,root,qmail)                   %{_prefix}/sbin/rot
%attr(755,root,qmail)                   %{_prefix}/sbin/strfile
%attr(755,root,qmail)                   %{_prefix}/sbin/unstr
%attr(755,root,qmail)                   %{_prefix}/bin/flash
%attr(755,root,qmail)                   %{_prefix}/bin/ripole

%if %nonssd == 0
%attr(755,root,qmail)                   %{_prefix}/sbin/nssd
%attr(755,root,qmail)                   %{libexecdir}/check_getpw
%endif

%attr(755,root,qmail)                   %{libexecdir}/controlsync
%attr(755,root,qmail)                   %{libexecdir}/mailzipper
%attr(755,root,qmail)                   %{libexecdir}/updatefile
%attr(755,root,qmail)                   %{libexecdir}/cindimail
%attr(755,root,qmail)                   %{libexecdir}/cputime
%attr(755,root,qmail)                   %{libexecdir}/myslave
%attr(755,root,qmail)                   %{libexecdir}/bogofilter-qfe
%attr(755,root,qmail)                   %{libexecdir}/iupgrade.sh
%verify (not md5 size mtime mode)       %{libexecdir}/ilocal_upgrade.sh

%attr(755,root,qmail)                   %{libexecdir}/vadddomain
%attr(755,root,qmail)                   %{libexecdir}/vaddaliasdomain
%attr(755,root,qmail)                   %{libexecdir}/vpasswd
%attr(755,root,qmail)                   %{libexecdir}/vrenamedomain
%attr(755,root,qmail)                   %{libexecdir}/vdeldomain
%attr(755,root,qmail)                   %{libexecdir}/vadduser
%attr(755,root,qmail)                   %{libexecdir}/vmoduser
%attr(755,root,qmail)                   %{libexecdir}/vdeluser
%attr(755,root,qmail)                   %{libexecdir}/vrenameuser
%attr(755,root,qmail)                   %{libexecdir}/overquota.sh
%attr(755,root,qmail)                   %{libexecdir}/qmailmrtg7
%attr(4755,root,qmail)                  %{libexecdir}/sq_vacation

%if %nocourierimap == 0
# courier imap
%attr(755,root,root)                    %{_prefix}/bin/maildirmake
%attr(755,root,root)                    %{_prefix}/bin/maildirkw
%attr(755,root,root)                    %{_prefix}/bin/deliverquota
%attr(755,root,root)                    %{_prefix}/bin/couriertls
%attr(755,root,root)                    %{_prefix}/bin/maildiracl
%attr(755,root,root)                    %{_prefix}/bin/imapd
%attr(755,root,root)                    %{_prefix}/bin/pop3d
%attr(755,root,root)                    %{_prefix}/sbin/imaplogin
%attr(755,root,root)                    %{_prefix}/sbin/pop3login
%attr(755,root,root)                    %{_prefix}/sbin/sharedindexinstall
%attr(755,root,root)                    %{_prefix}/sbin/sharedindexsplit
#
%attr(4755,root,root)                   %{libexecdir}/imapmodules/authshadow
%endif

# bogofilter
%if %nobogofilter == 0
%attr(6551,root,indimail)               %{_prefix}/bin/bogofilter
%attr(755,root,root)                    %{_prefix}/bin/bogolexer
%attr(755,root,root)                    %{_prefix}/bin/bogotune
%attr(755,root,root)                    %{_prefix}/bin/bogoutil
%attr(755,root,root)                    %{_prefix}/bin/bogoupgrade
%attr(755,root,root)                    %{_prefix}/sbin/bf_compact
%attr(755,root,root)                    %{_prefix}/sbin/bf_copy
%attr(755,root,root)                    %{_prefix}/sbin/bf_tar
%endif

# fetchmail
%if %nofetchmail == 0
%attr(755,root,root)                    %{_prefix}/bin/fetchmailconf
%attr(755,root,root)                    %{_prefix}/bin/fetchmail
%endif

# pam-multi
%attr(755,root,root)                    %{_prefix}/sbin/pam-checkpwd
%attr(644,root,root) %config(noreplace) %{pam_confdir}/pam-multi
%attr(644,root,root) %config(noreplace) %{pam_confdir}/pop3
%attr(644,root,root) %config(noreplace) %{pam_confdir}/imap

%if %nocourierimap == 0
%attr(755,root,root)                    %{libexecdir}/pop3d-ssl.rc
%attr(755,root,root)                    %{libexecdir}/makedatprog
%attr(755,root,root)                    %{libexecdir}/imapd-ssl.rc
%attr(755,root,root)                    %{libexecdir}/couriertcpd
%attr(755,root,root)                    %{libexecdir}/imapd.rc
%attr(755,root,root)                    %{libexecdir}/pop3d.rc
%attr(755,root,root)                    %{libexecdir}/mkimapdcert
%attr(755,root,root)                    %{libexecdir}/mkpop3dcert
%attr(755,root,root)                    %{libexecdir}/mkdhparams
%endif
%attr(755,root,root)                    %{libexecdir}/imapmodules/authindi
%attr(755,root,root)                    %{libexecdir}/imapmodules/authpgsql
%attr(755,root,root)                    %{libexecdir}/imapmodules/authgeneric

%attr(755,root,root)                    %{moduledir}/background
%attr(755,root,root)                    %{moduledir}/alarms
%attr(755,root,root)                    %{moduledir}/countdown
%attr(755,root,root)                    %{moduledir}/iauth.so

%attr(644,root,root)                    %{shareddir}/fortunes/definitions
%attr(644,root,root)                    %{shareddir}/fortunes/linux.dat
%attr(644,root,root)                    %{shareddir}/fortunes/food
%attr(644,root,root)                    %{shareddir}/fortunes/medicine
%attr(644,root,root)                    %{shareddir}/fortunes/magic
%attr(644,root,root)                    %{shareddir}/fortunes/ethnic
%attr(644,root,root)                    %{shareddir}/fortunes/art.dat
%attr(644,root,root)                    %{shareddir}/fortunes/computers.dat
%attr(644,root,root)                    %{shareddir}/fortunes/songs-poems.dat
%attr(644,root,root)                    %{shareddir}/fortunes/kids
%attr(644,root,root)                    %{shareddir}/fortunes/goedel
%attr(644,root,root)                    %{shareddir}/fortunes/paradoxum
%attr(644,root,root)                    %{shareddir}/fortunes/computers
%attr(644,root,root)                    %{shareddir}/fortunes/goedel.dat
%attr(644,root,root)                    %{shareddir}/fortunes/news
%attr(644,root,root)                    %{shareddir}/fortunes/pets
%attr(644,root,root)                    %{shareddir}/fortunes/law.dat
%attr(644,root,root)                    %{shareddir}/fortunes/zippy
%attr(644,root,root)                    %{shareddir}/fortunes/miscellaneous
%attr(644,root,root)                    %{shareddir}/fortunes/ascii-art.dat
%attr(644,root,root)                    %{shareddir}/fortunes/perl
%attr(644,root,root)                    %{shareddir}/fortunes/kids.dat
%attr(644,root,root)                    %{shareddir}/fortunes/love.dat
%attr(644,root,root)                    %{shareddir}/fortunes/work.dat
%attr(644,root,root)                    %{shareddir}/fortunes/humorists
%attr(644,root,root)                    %{shareddir}/fortunes/definitions.dat
%attr(644,root,root)                    %{shareddir}/fortunes/drugs
%attr(644,root,root)                    %{shareddir}/fortunes/education.dat
%attr(644,root,root)                    %{shareddir}/fortunes/politics.dat
%attr(644,root,root)                    %{shareddir}/fortunes/science.dat
%attr(644,root,root)                    %{shareddir}/fortunes/love
%attr(644,root,root)                    %{shareddir}/fortunes/men-women
%attr(644,root,root)                    %{shareddir}/fortunes/ascii-art
%attr(644,root,root)                    %{shareddir}/fortunes/humorists.dat
%attr(644,root,root)                    %{shareddir}/fortunes/platitudes.dat
%attr(644,root,root)                    %{shareddir}/fortunes/debian
%attr(644,root,root)                    %{shareddir}/fortunes/sports.dat
%attr(644,root,root)                    %{shareddir}/fortunes/riddles
%attr(644,root,root)                    %{shareddir}/fortunes/law
%attr(644,root,root)                    %{shareddir}/fortunes/knghtbrd.dat
%attr(644,root,root)                    %{shareddir}/fortunes/sports
%attr(644,root,root)                    %{shareddir}/fortunes/perl.dat
%attr(644,root,root)                    %{shareddir}/fortunes/tao.dat
%attr(644,root,root)                    %{shareddir}/fortunes/linuxcookie
%attr(644,root,root)                    %{shareddir}/fortunes/linuxcookie.dat
%attr(644,root,root)                    %{shareddir}/fortunes/riddles.dat
%attr(644,root,root)                    %{shareddir}/fortunes/medicine.dat
%attr(644,root,root)                    %{shareddir}/fortunes/fortunes
%attr(644,root,root)                    %{shareddir}/fortunes/cookie
%attr(644,root,root)                    %{shareddir}/fortunes/cookie.dat
%attr(644,root,root)                    %{shareddir}/fortunes/art
%attr(644,root,root)                    %{shareddir}/fortunes/politics
%attr(644,root,root)                    %{shareddir}/fortunes/songs-poems
%attr(644,root,root)                    %{shareddir}/fortunes/startrek.dat
%attr(644,root,root)                    %{shareddir}/fortunes/men-women.dat
%attr(644,root,root)                    %{shareddir}/fortunes/kernelnewbies
%attr(644,root,root)                    %{shareddir}/fortunes/fortunes.dat
%attr(644,root,root)                    %{shareddir}/fortunes/magic.dat
%attr(644,root,root)                    %{shareddir}/fortunes/science
%attr(644,root,root)                    %{shareddir}/fortunes/platitudes
%attr(644,root,root)                    %{shareddir}/fortunes/kernelnewbies.dat
%attr(644,root,root)                    %{shareddir}/fortunes/literature.dat
%attr(644,root,root)                    %{shareddir}/fortunes/translate-me
%attr(644,root,root)                    %{shareddir}/fortunes/startrek
%attr(644,root,root)                    %{shareddir}/fortunes/drugs.dat
%attr(644,root,root)                    %{shareddir}/fortunes/zippy.dat
%attr(644,root,root)                    %{shareddir}/fortunes/linux
%attr(644,root,root)                    %{shareddir}/fortunes/work
%attr(644,root,root)                    %{shareddir}/fortunes/literature
%attr(644,root,root)                    %{shareddir}/fortunes/knghtbrd
%attr(644,root,root)                    %{shareddir}/fortunes/news.dat
%attr(644,root,root)                    %{shareddir}/fortunes/paradoxum.dat
%attr(644,root,root)                    %{shareddir}/fortunes/bofh-excuses.dat
%attr(644,root,root)                    %{shareddir}/fortunes/translate-me.dat
%attr(644,root,root)                    %{shareddir}/fortunes/miscellaneous.dat
%attr(644,root,root)                    %{shareddir}/fortunes/rj.dat
%attr(644,root,root)                    %{shareddir}/fortunes/debian.dat
%attr(644,root,root)                    %{shareddir}/fortunes/tao
%attr(644,root,root)                    %{shareddir}/fortunes/food.dat
%attr(644,root,root)                    %{shareddir}/fortunes/ethnic.dat
%attr(644,root,root)                    %{shareddir}/fortunes/people.dat
%attr(644,root,root)                    %{shareddir}/fortunes/people
%attr(644,root,root)                    %{shareddir}/fortunes/wisdom.dat
%attr(644,root,root)                    %{shareddir}/fortunes/rj
%attr(644,root,root)                    %{shareddir}/fortunes/wisdom
%attr(644,root,root)                    %{shareddir}/fortunes/pets.dat
%attr(644,root,root)                    %{shareddir}/fortunes/bofh-excuses
%attr(644,root,root)                    %{shareddir}/fortunes/education
%attr(644,root,root)                    %{shareddir}/fortunes/age
%attr(644,root,root)                    %{shareddir}/fortunes/age.dat
%attr(644,root,root)                    %{shareddir}/fortunes/chanakya
%attr(644,root,root)                    %{shareddir}/fortunes/chanakya.dat
%attr(644,root,root)                    %{shareddir}/fortunes/joel-on-software
%attr(644,root,root)                    %{shareddir}/fortunes/joel-on-software.dat
%attr(644,root,root)                    %{shareddir}/fortunes/osp
%attr(644,root,root)                    %{shareddir}/fortunes/osp.dat
%attr(644,root,root)                    %{shareddir}/fortunes/paul-graham
%attr(644,root,root)                    %{shareddir}/fortunes/paul-graham.dat
%attr(644,root,root)                    %{shareddir}/fortunes/thirukkural
%attr(644,root,root)                    %{shareddir}/fortunes/thirukkural.dat
%attr(644,root,root)                    %{shareddir}/fortunes/vedas-1
%attr(644,root,root)                    %{shareddir}/fortunes/vedas-1.dat
%attr(644,root,root)                    %{shareddir}/fortunes/vedas-2
%attr(644,root,root)                    %{shareddir}/fortunes/vedas-2.dat

%if %nofetchmail == 0
#%%attr(644,root,root)                    %%{shareddir}/locale/*/LC_MESSAGES/*.mo
#%%files -f fetchmail.lang
%lang(eo) /usr/share/indimail/locale/eo/LC_MESSAGES/fetchmail.mo
%lang(gl) /usr/share/indimail/locale/gl/LC_MESSAGES/fetchmail.mo
%lang(sq) /usr/share/indimail/locale/sq/LC_MESSAGES/fetchmail.mo
%lang(pt) /usr/share/indimail/locale/pt_BR/LC_MESSAGES/fetchmail.mo
%lang(cs) /usr/share/indimail/locale/cs/LC_MESSAGES/fetchmail.mo
%lang(ru) /usr/share/indimail/locale/ru/LC_MESSAGES/fetchmail.mo
%lang(de) /usr/share/indimail/locale/de/LC_MESSAGES/fetchmail.mo
%lang(vi) /usr/share/indimail/locale/vi/LC_MESSAGES/fetchmail.mo
%lang(ca) /usr/share/indimail/locale/ca/LC_MESSAGES/fetchmail.mo
%lang(pl) /usr/share/indimail/locale/pl/LC_MESSAGES/fetchmail.mo
%lang(it) /usr/share/indimail/locale/it/LC_MESSAGES/fetchmail.mo
%lang(id) /usr/share/indimail/locale/id/LC_MESSAGES/fetchmail.mo
%lang(fr) /usr/share/indimail/locale/fr/LC_MESSAGES/fetchmail.mo
%lang(nl) /usr/share/indimail/locale/nl/LC_MESSAGES/fetchmail.mo
%lang(sv) /usr/share/indimail/locale/sv/LC_MESSAGES/fetchmail.mo
%lang(es) /usr/share/indimail/locale/es/LC_MESSAGES/fetchmail.mo
%lang(da) /usr/share/indimail/locale/da/LC_MESSAGES/fetchmail.mo
%lang(tr) /usr/share/indimail/locale/tr/LC_MESSAGES/fetchmail.mo
%lang(el) /usr/share/indimail/locale/el/LC_MESSAGES/fetchmail.mo
%lang(fi) /usr/share/indimail/locale/fi/LC_MESSAGES/fetchmail.mo
%lang(en) /usr/share/indimail/locale/en_GB/LC_MESSAGES/fetchmail.mo
%lang(zh) /usr/share/indimail/locale/zh_CN/LC_MESSAGES/fetchmail.mo
%lang(sk) /usr/share/indimail/locale/sk/LC_MESSAGES/fetchmail.mo
%lang(ja) /usr/share/indimail/locale/ja/LC_MESSAGES/fetchmail.mo
%attr(644,root,root)                    %{pythondir}/fetchmailconf.pyo
%attr(755,root,root)                    %{pythondir}/fetchmailconf.py
%attr(644,root,root)                    %{pythondir}/fetchmailconf.pyc
%endif

%docdir %{shareddir}/doc
%docdir %{mandir}
%attr(644,root,root)                    %{mandir}/man[1,5,7,8]/*

%if %build_on_obs == 0
%license %attr(444,root,qmail)          %{shareddir}/doc/COPYING.indimail
%license %attr(444,root,qmail)          %{shareddir}/doc/LICENSE.altermime
%license %attr(444,root,qmail)          %{shareddir}/doc/LICENSE.ripmime
%if %nobogofilter == 0
%license %attr(444,root,qmail)          %{shareddir}/doc/COPYING.bogofilter
%endif
%if %nocourierimap == 0
%license %attr(444,root,qmail)          %{shareddir}/doc/COPYING.courier-imap
%endif
%if %nofetchmail == 0
%license %attr(444,root,qmail)          %{shareddir}/doc/COPYING.fetchmail
%endif
%license %attr(444,root,qmail)          %{shareddir}/doc/COPYING.flash
%license %attr(444,root,qmail)          %{shareddir}/doc/COPYING.fortune
%license %attr(444,root,qmail)          %{shareddir}/doc/COPYING.nssd
%license %attr(444,root,qmail)          %{shareddir}/doc/COPYING.pam-multi
%else
%attr(444,root,qmail)                   %{shareddir}/doc/COPYING.indimail
%attr(444,root,qmail)                   %{shareddir}/doc/LICENSE.altermime
%attr(444,root,qmail)                   %{shareddir}/doc/LICENSE.ripmime
%if %nobogofilter == 0
%attr(444,root,qmail)                   %{shareddir}/doc/COPYING.bogofilter
%endif
%if %nocourierimap == 0
%attr(444,root,qmail)                   %{shareddir}/doc/COPYING.courier-imap
%endif
%if %nofetchmail == 0
%attr(444,root,qmail)                   %{shareddir}/doc/COPYING.fetchmail
%endif
%attr(444,root,qmail)                   %{shareddir}/doc/COPYING.flash
%attr(444,root,qmail)                   %{shareddir}/doc/COPYING.fortune
%attr(444,root,qmail)                   %{shareddir}/doc/COPYING.nssd
%attr(444,root,qmail)                   %{shareddir}/doc/COPYING.pam-multi
%endif
%attr(444,root,qmail)                   %{shareddir}/doc/COPYRIGHT.flash
%attr(444,root,qmail)                   %{shareddir}/doc/COPYRIGHT.mpack
%attr(444,root,qmail)                   %{shareddir}/doc/AUTHORS.altermime
%if %nobogofilter == 0
%attr(444,root,qmail)                   %{shareddir}/doc/AUTHORS.bogofilter
%endif
%if %nocourierimap == 0
%attr(444,root,qmail)                   %{shareddir}/doc/AUTHORS.courier-imap
%endif
%attr(444,root,qmail)                   %{shareddir}/doc/AUTHORS.fortune
%attr(444,root,qmail)                   %{shareddir}/doc/AUTHORS.nssd
%attr(444,root,qmail)                   %{shareddir}/doc/AUTHORS.pam-multi
%attr(444,root,qmail)                   %{shareddir}/doc/AUTHORS.ripmime

%if %nofetchmail == 0
%attr(444,root,qmail)                   %{shareddir}/doc/README-SSL-SERVER.fetchmail
%attr(444,root,qmail)                   %{shareddir}/doc/README-SSL.fetchmail
%attr(444,root,qmail)                   %{shareddir}/doc/README-NTLM.fetchmail
%attr(444,root,qmail)                   %{shareddir}/doc/README.fetchmail
%endif
%attr(444,root,qmail)                   %{shareddir}/doc/README.altermime
%if %nocourierimap == 0
%attr(444,root,qmail)                   %{shareddir}/doc/README.courier-imap
%endif
%if %nobogofilter == 0
%attr(444,root,qmail)                   %{shareddir}/doc/HOWTO.bogofilter
%endif
%attr(444,root,qmail)                   %{shareddir}/doc/37rules.pdf
%attr(444,root,qmail)                   %{shareddir}/doc/ChangeLog.indimail
%attr(444,root,qmail)                   %{shareddir}/doc/FAQ.pdf
%attr(444,root,qmail)                   %{shareddir}/doc/HOWTO.sharedmaildir
%attr(444,root,qmail)                   %{shareddir}/doc/INSTALL-MYSQL
%attr(444,root,qmail)                   %{shareddir}/doc/INSTALL-RPM
%attr(444,root,qmail)                   %{shareddir}/doc/INSTALL.indimail
%attr(444,root,qmail)                   %{shareddir}/doc/Quick-INSTALL
%attr(444,root,qmail)                   %{shareddir}/doc/README
%attr(444,root,qmail)                   %{shareddir}/doc/README-CLUSTER
%attr(444,root,qmail)                   %{shareddir}/doc/README.cdb
%attr(444,root,qmail)                   %{shareddir}/doc/README.flash
%attr(444,root,qmail)                   %{shareddir}/doc/README.ldap
%attr(444,root,qmail)                   %{shareddir}/doc/README.mpack
%attr(444,root,qmail)                   %{shareddir}/doc/README.nssd
%attr(444,root,qmail)                   %{shareddir}/doc/README.pam-multi
%attr(444,root,qmail)                   %{shareddir}/doc/README.ripmime
%attr(444,root,qmail)                   %{shareddir}/doc/README.vlimits
%attr(444,root,qmail)                   %{shareddir}/doc/RELEASE-Notes
%attr(444,root,qmail)                   %{shareddir}/doc/indimail_arch.png
%attr(444,root,qmail)                   %{shareddir}/doc/indimail_queue.png
%attr(444,root,qmail)                   %{shareddir}/doc/percenthack.shtml

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vdeluser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vadduser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vaddaliasdomain
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vrenamedomain
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vsetuserquota
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vmoveuser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vdeldomain
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vadddomain
%if %nobogofilter == 0
%verify (not user group mode) %attr(6551, root, indimail)  %{_prefix}/bin/bogofilter
%endif
%verify (not user group mode) %attr(4551, root, root)      %{_prefix}/bin/vdominfo
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vrenameuser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/printdir
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vmoduser
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vcfilter
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/bin/vbulletin
%verify (not user group mode) %attr(4755, root, root)      %{_prefix}/sbin/systpass
%verify (not user group mode) %attr(4755, root, qmail)     %{libexedir}/sq_vacation
%verify (not user group mode) %attr(4755, root, root)      %{libexedir}/imapmodules/authshadow
%endif
%endif

# Shared libraries (omit for architectures that don't support them)

# pam-multi
%attr(755,root,root)                    /%{pam_module_dir}/pam-multi.so

%{_libdir}/libeps.so.1
%{_libdir}/libeps.so.1.0.0
%{_libdir}/libcdb.so.1
%{_libdir}/libcdb.so.1.0.0
%{_libdir}/libflash.so.1
%{_libdir}/libflash.so.1.0.0
%{_libdir}/libindimail.so.2
%{_libdir}/libindimail.so.2.0.0

%if %nonssd == 0
                                        %{_libdir}/libnss_nssd.so.2
%attr(755,root,root)                    %{_libdir}/libnss_nssd.so.2.0.0
%endif

%if %nocourierimap == 0
%{_libdir}/libunicode.so.4
%{_libdir}/libunicode.so.4.1.0
%endif

%files devel
%defattr(-, root, root, 0755)
%dir %attr(555,root,root)              %{_prefix}/include/indimail
%if "%{_prefix}" != "/usr"
%dir %attr(555,root,root)              %{_libdir}
%dir %attr(555,root,qmail)             %{mandir}/man3
%endif
%doc %attr(644,root,root)              %{mandir}/man3/*

%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_unroll.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_buffer.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_email.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/rfc2822.h
%attr(444,root,qmail)                   %{_prefix}/include/indimail/indimail.h
%attr(444,root,qmail)                   %{_prefix}/include/indimail/typesx.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_mime.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_boundary.h
%attr(444,root,qmail)                   %{_prefix}/include/indimail/indimail_config.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_roll.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_line.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_int_buffer.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_base64.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_misc.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_address.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_interface.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_int_stream.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_header.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/eps_content.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/cdb.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/cdbmake.h
%attr(644,root,qmail)                   %{_prefix}/include/indimail/uint32.h

%if %nocourierimap == 0
%attr(644,root,qmail)                   %{_prefix}/include/courier-unicode.h
%attr(644,root,qmail)                   %{_prefix}/include/courier-unicode-categories-tab.h
%attr(644,root,qmail)                   %{_prefix}/include/courier-unicode-script-tab.h
%attr(644,root,qmail)                   %{_prefix}/share/aclocal/courier-unicode.m4
%attr(644,root,qmail)                   %{_libdir}/libunicode.a
%endif

%{_libdir}/libeps.a
%{_libdir}/libcdb.a
%{_libdir}/libflash.a
%{_libdir}/libindimail.a

%if %nocourierimap == 0
%{_libdir}/libunicode.so
%endif

%{_libdir}/libeps.so
%{_libdir}/libcdb.so
%{_libdir}/libflash.so
%{_libdir}/libindimail.so

%if %nonssd == 0
                                        %{_libdir}/libnss_nssd.so
%endif

%{_pkg_config_path}/libindimail.pc

%files -n libindimail
%defattr(-, root, root, 0755)
# Shared libraries (omit for architectures that don't support them)
%{_libdir}/libeps.so.1
%{_libdir}/libeps.so.1.0.0
%{_libdir}/libcdb.so.1
%{_libdir}/libcdb.so.1.0.0
%{_libdir}/libflash.so.1
%{_libdir}/libflash.so.1.0.0
%{_libdir}/libindimail.so.2
%{_libdir}/libindimail.so.2.0.0

%if %nonssd == 0
                                        %{_libdir}/libnss_nssd.so.2
%attr(755,root,root)                    %{_libdir}/libnss_nssd.so.2.0.0
%endif

%if %nocourierimap == 0
%{_libdir}/libunicode.so.4
%{_libdir}/libunicode.so.4.1.0
%endif

%{_pkg_config_path}/libindimail.pc

%clean
[ "%{buildroot}" != "/" ] && %{__rm} -fr %{buildroot}

#            install   erase   upgrade  reinstall
# pretrans      0        -         0
# pre           1        -         2         2
# post          1        -         2         2
# preun         -        0         1         -
# postun        -        0         1         -
# posttrans     0        -         0
# The scriptlets in %%pre and %%post are respectively run before and after a package is installed.
# The scriptlets %%preun and %%postun are run before and after a package is uninstalled.
# The scriptlets %%pretrans and %%posttrans are run at start and end of a transaction.
# On upgrade, the scripts are run in the following order:
#
#   1. pretrans of new package
#   2. pre of new package
#   3. (package install)
#   4. post of new package
#   5. preun of old package
#   6. (removal of old package)
#   7. postun of old package
#   8. posttrans of new package

### SCRIPTLET ###############################################################################
%verifyscript
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
%{_prefix}/sbin/svctool --check-install --servicedir=%{servicedir} \
  --qbase=%{qbase} --qcount=%{qcount} --qstart=1

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%verify_permissions -e %{_prefix}/bin/vdeluser
%verify_permissions -e %{_prefix}/bin/vadduser
%verify_permissions -e %{_prefix}/bin/vaddaliasdomain
%verify_permissions -e %{_prefix}/bin/vrenamedomain
%verify_permissions -e %{_prefix}/bin/vsetuserquota
%verify_permissions -e %{_prefix}/bin/vmoveuser
%verify_permissions -e %{_prefix}/bin/vdeldomain
%verify_permissions -e %{_prefix}/bin/vadddomain
%if %nobogofilter == 0
%verify_permissions -e %{_prefix}/bin/bogofilter
%endif
%verify_permissions -e %{_prefix}/bin/vdominfo
%verify_permissions -e %{_prefix}/bin/vrenameuser
%verify_permissions -e %{_prefix}/bin/printdir
%verify_permissions -e %{_prefix}/bin/vmoduser
%verify_permissions -e %{_prefix}/bin/vcfilter
%verify_permissions -e %{_prefix}/bin/vbulletin
%verify_permissions -e %{_prefix}/sbin/systpass
%verify_permissions -e %{libexecdir}/sq_vacation
%verify_permissions -e %{libexecdir}/imapmodules/authshadow
%endif
%endif

### SCRIPTLET ###############################################################################
%pretrans
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -d %{_prefix} -a -d %{servicedir} ] ; then
  if [ -f %{_prefix}/sbin/initsvc ] ; then
    %{_prefix}/sbin/initsvc -status
  fi

  if [ -f %{_prefix}/bin/svok ] ; then
    %{_prefix}/bin/svok %{servicedir}/.svscan/log 2>/dev/null
    if [ $? -eq 0 ] ; then
      if test -f %{_sysconfdir}/init/svscan.conf
      then
        echo "Giving IndiMail exactly 5 seconds to exit nicely"
        /sbin/initctl emit qmailstop > /dev/null 2>&1
      elif test -f %{_sysconfdir}/event.d/svscan
      then
        echo "Giving IndiMail exactly 5 seconds to exit nicely"
        /sbin/initctl emit qmailstop > /dev/null 2>&1
      elif test -f %{_sysconfdir}/systemd/system/multi-user.target.wants/svscan.service
      then
        echo "Giving IndiMail exactly 5 seconds to exit nicely"
        /bin/systemctl stop indimail > /dev/null 2>&1
      elif test -x %{_prefix}/sbin/initsvc
      then
        echo "Giving IndiMail exactly 5 seconds to exit nicely"
        %{_prefix}/sbin/initsvc -off
      fi
      sleep 5
    fi
  fi
fi
if [ -f %{libexecdir}/iupgrade.sh ] ; then
(
  echo "Running Custom Installation Script for pretrans"
  /bin/sh %{libexecdir}/iupgrade.sh pretrans noargs %{version} $*
) > /tmp/indimail-setup.log 2>&1
fi

### SCRIPTLET ###############################################################################
%pre
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
# initialize setup log file
>> /tmp/indimail-setup.log
# we are doing upgrade
if [ $argv1 -eq 2 ] ; then
  if [ -f %{libexecdir}/iupgrade.sh ] ; then
  (
    echo "Running Custom Upgrade Script for pre upgrade"
    /bin/sh %{libexecdir}/iupgrade.sh pre upgrade %{version} $*
  ) >> /tmp/indimail-setup.log 2>&1
  fi
  exit 0
fi
(
echo "Checking for mandatory user/group mysql.."
case "%host" in
  *-*-darwin*)
  /usr/bin/dscl . -list /Groups/mysql > /dev/null || (echo "group mysql does not exist. Aborting..." && false)
  if [ $? -ne 0 ] ; then
    exit 1
  fi
  /usr/bin/dscl . -list /Users/mysql > /dev/null || (echo "user mysql does not exist. Aborting..." && false)
  if [ $? -ne 0 ] ; then
    exit 1
  fi
  ;;
  *)
  /usr/bin/getent group  mysql > /dev/null || (echo "group mysql does not exist. Aborting..." && false)
  if [ $? -ne 0 ] ; then
    exit 1
  fi
  /usr/bin/getent passwd mysql > /dev/null || (echo "user  mysql does not exist. Aborting..." && false)
  if [ $? -ne 0 ] ; then
    exit 1
  fi
esac
#
# Create a users and groups. Do not report any problems if they already
# exists.
#
nscd_up=`ps -ef |grep nscd |grep -v grep|wc -l`
if [ $nscd_up -ge 1 ] ; then
  if [ -x %{_sysconfdir}/init.d/nscd ] ; then
    %{_sysconfdir}/init.d/nscd stop
  elif [ -f %{_sysconfdir}/lib/systemd/system/multi-user.target/nscd.service ] ; then
    /bin/systemctl start nscd.service
  fi
fi
echo "Adding IndiMail users/groups"
/usr/bin/getent group %groupname  > /dev/null || /usr/sbin/groupadd -r -g %gid %groupname || true
if [ $? = 4 ] ; then
  /usr/sbin/groupadd %groupname
fi
# add for roundcube/php to access certs
/usr/bin/getent group apache    > /dev/null && /usr/sbin/usermod -aG qmail apache || true

/usr/bin/getent passwd %username > /dev/null || /usr/sbin/useradd -r -g %groupname -u %uid -d %{indimaildir} %username || true
if [ $? = 4 ] ; then
  /usr/sbin/useradd -r -g %groupname -d %{indimaildir} %username
fi

if [ $nscd_up -ge 1 ] ; then
  if [ -x %{_sysconfdir}/init.d/nscd ] ; then
    %{_sysconfdir}/init.d/nscd start
  elif [ -f %{_sysconfdir}/lib/systemd/system/multi-user.target/nscd.service ] ; then
    /bin/systemctl start nscd.service
  fi
fi
) >> /tmp/indimail-setup.log 2>&1

### SCRIPTLET ###############################################################################
%post
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -x /bin/touch ] ; then
  TOUCH=/bin/touch
elif [ -x /usr/bin/touch ] ; then
  TOUCH=/usr/bin/touch
else
  TOUCH=/bin/touch
fi

if [ $argv1 -eq 2 ] ; then # upgrade
# we are doing upgrade
  (
  echo "doing post upgrade activities"
  if [ -f %{libexecdir}/iupgrade.sh ] ; then
    if [ "%{_libdir}" != "/usr/lib64" -a "%{_libdir}" != "/usr/lib" ] ; then
      /sbin/ldconfig
    fi
    echo "Running Custom Upgrade Script for post upgrade"
    /bin/sh %{libexecdir}/iupgrade.sh post upgrade %{version} $*
  fi
  # selinux

  %{_prefix}/sbin/svctool --servicedir=%{servicedir} --config=iselinux
  # refresh indimail services
  svc_list=""
  for i in mrtg mysql.3306 fetchmail qmail-imapd.143 qmail-imapd-ssl.993 \
    qmail-pop3d.110 qmail-pop3d-ssl.995 proxy-imapd.4143 proxy-imapd-ssl.9143 \
    proxy-pop3d.4110 proxy-pop3d-ssl.9110 indisrvr.4000 inlookup.infifo \
    pwdlookup qmail-poppass.106 
  do
    svc_list="$svc_list %{servicedir}/$i"
  done
  %{_prefix}/sbin/svctool --servicedir=%{servicedir} --refreshsvc="$svc_list"
  indlib=`ls -d %{_libdir}/libindimail.so.*.*.* 2>/dev/null`
  for port in 25 465 587
  do
    if [ -n "$indlib" -a -f "$indlib" ] ; then
      echo $indlib > %{servicedir}/qmail-smtpd.$port/variables/VIRTUAL_PKG_LIB
    fi
  done
  if [ -n "$indlib" -a -f "$indlib" ] ; then
    echo $indlib > %{servicedir}/qmail-send.25/variables/VIRTUAL_PKG_LIB
  fi
  ) >> /tmp/indimail-setup.log 2>&1
  exit 0
fi

# Recreate ld.so links and cache
if [ "%{_libdir}" != "/usr/lib64" -a "%{_libdir}" != "/usr/lib" ] ; then
  if [ -d %{_sysconfdir}/ld.so.conf.d ] ; then
    echo %{_libdir} > %{_sysconfdir}/ld.so.conf.d/indimail-%{_arch}.conf
  fi
  /sbin/ldconfig
fi

echo "Doing post installation activities for the following"
echo ""
echo " 1. Configure %{logdir} for multilog"
echo " 2. Configure %{servicedir}"
echo " 3. Configure IndiMail configuration"
echo " 4. Configure %{sysconfdir}/indimail.cnf for MySQL service"
echo " 5. Configure MySQL DB in %{indimaildir}/mysqldb/data"
echo " 6. Configure fetchmail service"
echo " 7. Configure IMAP/POP3/poppass services"
echo " 8. Configure indisrvr service"
echo " 9. Configure nssd service"
echo "10. Configure inlookup service"
echo "11. Configure SPAM filter configuration"
echo "12. Configure tcprules database for IMAP, POP3, popass"
echo "13. Configure selinux configuration"
echo "14. Configure default cron entries"
echo ""

(
echo "Creating %{logdir}"
if [ ! -d %{logdir} ] ; then
  %{__mkdir_p} %{logdir}
fi
%{__chown} -R qmaill:nofiles %{logdir}

# mrtg service
%{_prefix}/sbin/svctool --mrtg=/var/www/html/mailmrtg --servicedir=%{servicedir}

if [ -x /usr/bin/uname -o -x /bin/uname ] ; then
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || `uname -n`)
else
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || echo %{defaultDomain})
fi
echo "Creating default indimail tcp access control files"
%{_prefix}/sbin/svctool --config=indimail --mysqlhost=localhost --mysqluser=indimail  \
  --mysqlpass=ssh-1.5- --mysqlsocket=%{mysqlSocket}

# MySQL
if [ -x %{mysqlPrefix}/libexec/mysqld -o -x %{mysqlPrefix}/sbin/mysqld ] ; then
  error=`ps -e|grep mysqld|grep -v grep|wc -l` # another mysqld instance running ?
  echo "Creating Database/Service for MySQL"
  # MySQL Config Creation
  %{_prefix}/sbin/svctool --config=mysql   --mysqlPrefix=%{mysqlPrefix} --mysqlsocket=%{mysqlSocket} \
      --databasedir=%{indimaildir}/mysqldb
  # MySQL Database Creation
  %{_prefix}/sbin/svctool --config=mysqldb --mysqlPrefix=%{mysqlPrefix} \
      --databasedir=%{indimaildir}/mysqldb --base_path=%{mbase} --mysqlsocket="%{mysqlSocket}".tmp
  # MySQL Supervise creation
  %{_prefix}/sbin/svctool --mysql=3306 --servicedir=%{servicedir} --mysqlPrefix=%{mysqlPrefix} \
    --databasedir=%{indimaildir}/mysqldb --config=%{sysconfdir}/indimail.cnf --default-domain=$default_domain
  if [ ! -f %{indimaildir}/mysqldb/data/indimail/indimail.frm ] ; then
    error=1
  fi
  if [ $error -gt 0 ] ; then
    echo "Disabling mysqld service"
    $TOUCH %{servicedir}/mysql.3306/down
  fi
else
  echo "WARNING!!! Did not find mysqld in %{mysqlPrefix}/{libexec,sbin}. Skipping MySQL configuration" 1>&2
fi

%if %noperms == 0
%if 0%{?suse_version} >= 1120
%if 0%{?set_permissions:1} > 0
  if [ ! -f /tmp/no_permissions ] ; then
      %set_permissions %{name}
  fi
%else
  if [ ! -f /tmp/no_permissions ] ; then
      %run_permissions
  fi
%endif
%endif
%endif

# SMTP
%ifarch x86_64
%global fetchmail_mem 144857600
%global imap_pop3_mem 524288000
%global imapspop3_mem 524288000
%global poppass_mem   104857600
%else
%global fetchmail_mem 72428800
%global imap_pop3_mem 52428800
%global imapspop3_mem 52428800
%global poppass_mem   52428800
%endif

# Configure SPAMFILTER, LOGFILTER
for port in 465 25
do
  if [ %nobogofilter -eq 0 ] ; then
    echo "%{_prefix}/bin/bogofilter -p -d %{sysconfdir}" > %{servicedir}/qmail-smtpd.$port/variables/SPAMFILTER
    echo 0 > %{servicedir}/qmail-smtpd.$port/variables/SPAMEXITCODE
    echo 0 > %{servicedir}/qmail-smtpd.$port/variables/REJECTSPAM
    echo 1 > %{servicedir}/qmail-smtpd.$port/variables/MAKE_SEEKABLE
    echo /tmp/logfifo > %{servicedir}/qmail-smtpd.$port/variables/LOGFILTER
    # update SPAMFILTER and also change .options, so that refreshsvc doesn't lose the settings
    options="`cat %{servicedir}/qmail-smtpd.$port/variables/.options` --spamfilter=\"%{_prefix}/bin/bogofilter -p -d %{sysconfdir}\" --logfilter=\"/tmp/logfifo\" --rejectspam=\"0\" --spamexitcode=\"0\""
    echo $options > %{servicedir}/qmail-smtpd.$port/variables/.options
  fi
done


# fetchmail
if [ %nofetchmail -eq 0 ] ; then
  if [ %nodksignatures -eq 0 ] ; then
    if [ -x %{_prefix}/bin/dknewkey ] ; then
      ver_opt="both"
      sign_opt="both"
      key_bit=$KEYBIT # set KEYBIT in environment variable
      if [ " $key_bit" = " " ] ; then
        key_bit=1024
      fi
      %{_prefix}/bin/dknewkey %{sysconfdir}/control/domainkeys/default $key_bit
    else
      ver_opt="none"
      sign_opt="none"
    fi
  else
    ver_opt="none"
    sign_opt="none"
  fi
  extra_opt=""
  if [ %nobogofilter -eq 0 ] ; then
    extra_opt="--spamfilter=\"%{_prefix}/bin/bogofilter -p -d %{sysconfdir}\""
    extra_opt="$extra_opt --logfilter=/tmp/logfifo --rejectspam=0 --spamexitcode=0"
  fi
  if [ -f /usr/sbin/clamd -a -f /usr/bin/clamdscan ] ; then
    qhpsi="/usr/bin/clamdscan %s --fdpass --quiet --no-summary"
    extra_opt="$extra_opt --qhpsi=\"$qhpsi\""
  fi
  eval %{_prefix}/sbin/svctool --fetchmail --servicedir=%{servicedir} \
    --qbase=%{qbase} --qcount=%{qcount} --qstart=1 \
    --cntrldir=control --memory=%{fetchmail_mem} --fsync --syncdir \
    --dkverify=$ver_opt $extra_opt
  echo 0 > %{servicedir}/fetchmail/variables/SPAMEXITCODE
  echo 0 > %{servicedir}/fetchmail/variables/REJECTSPAM
  echo 1 > %{servicedir}/fetchmail/variables/MAKE_SEEKABLE
  echo /tmp/logfifo > %{servicedir}/fetchmail/variables/LOGFILTER
  options="`cat %{servicedir}/fetchmail/variables/.options` --spamfilter=\"%{_prefix}/bin/bogofilter -p -d %{sysconfdir}\" --logfilter=\"/tmp/logfifo\" --rejectspam=\"0\" --spamexitcode=\"0\""
  echo $options > %{servicedir}/fetchmail/variables/.options
  #
  # user has to create fetchmailrc before which fetchmail cannot be started
  #
  $TOUCH %{servicedir}/fetchmail/down
fi

if [ %nocourierimap -eq 0 ] ; then
# IMAP/POP3
%{_prefix}/sbin/svctool --imap=143 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=$default_domain --memory=%{imap_pop3_mem} \
  --starttls --infifo=infifo
%{_prefix}/sbin/svctool --imap=993 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=$default_domain --memory=%{imapspop3_mem} \
  --ssl --infifo=infifo
%{_prefix}/sbin/svctool --pop3=110 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=$default_domain --memory=%{imap_pop3_mem} \
  --starttls --infifo=infifo
%{_prefix}/sbin/svctool --pop3=995 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=$default_domain --memory=%{imapspop3_mem} \
  --ssl --infifo=infifo
fi
if [ %noproxy -eq 0 ] ; then
%{_prefix}/sbin/svctool --imap=4143 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=$default_domain --memory=%{imap_pop3_mem} \
  --proxy=143 --starttls --tlsprog=%{_prefix}/bin/sslerator --infifo=infifo
%{_prefix}/sbin/svctool --imap=9143 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=$default_domain --memory=%{imapspop3_mem} \
  --proxy=143 --ssl --infifo=infifo
%{_prefix}/sbin/svctool --pop3=4110 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=$default_domain --memory=%{imap_pop3_mem} \
  --proxy=110 --starttls --tlsprog=%{_prefix}/bin/sslerator --infifo=infifo
%{_prefix}/sbin/svctool --pop3=9110 --servicedir=%{servicedir} --localip=0 --maxdaemons=40 \
  --maxperip=25 --query-cache --default-domain=$default_domain --memory=%{imapspop3_mem} \
  --proxy=110 --ssl --infifo=infifo
fi

# IndiMail Daemons
#indisrvr
%{_prefix}/sbin/svctool --indisrvr=4000 --servicedir=%{servicedir} \
  --localip=0 --maxdaemons=40 --maxperip=25 --avguserquota=2097152 \
  --certfile=%{sysconfdir}/certs/servercert.pem --ssl \
  --hardquota=52428800 --base_path=%{mbase}

#inlookup
%{_prefix}/sbin/svctool --inlookup=infifo --servicedir=%{servicedir} --cntrldir=control \
  --threads=5 --activeDays=60 --query-cache --password-cache --use-btree

#nssd
if [ %nonssd -eq 0 ] ; then
  %{_prefix}/sbin/svctool --pwdlookup=/tmp/nssd.sock --threads=5 --timeout=-1 \
    --mysqlhost=localhost --mysqluser=indimail \
    --mysqlpass=ssh-1.5- --mysqlsocket=%{mysqlSocket} --servicedir=%{servicedir}
fi

#poppass
%{_prefix}/sbin/svctool --poppass=106 --localip=0 --maxdaemons=40 --maxperip=25 \
  --memory=%{poppass_mem} \
  --certfile=%{sysconfdir}/certs/servercert.pem --ssl \
  --setpassword=%{_prefix}/sbin/vsetpass --servicedir=%{servicedir}

#
# bogofilter configuration
#
if [ %nobogofilter -eq 0 ] ; then
  %{_prefix}/sbin/svctool --config=bogofilter
fi

# rebuild cdb
for i in smtp qmtp qmqp imap pop3 poppass
do
  for j in `/bin/ls %{sysconfdir}/tcp*.$i 2>/dev/null`
  do
    t1=`date +'%s' -r $j`
    if [ -f $j.cdb ] ; then
      t2=`date +'%s' -r $j.cdb`
    else
      t2=0
    fi
    if [ $t1 -gt $t2 ] ; then
      echo "Creating CDB $j.cdb"
      %{_prefix}/bin/tcprules $j.cdb $j.tmp < $j && /bin/chmod 664 $j.cdb \
        && %{__chown} indimail:indimail $j.cdb
    fi
  done
done
#update VIRTUAL_PKG_LIB for smtp service
indlib=`ls -d %{_libdir}/libindimail.so.*.*.* 2>/dev/null`
for port in 25 465 587
do
  if [ -n "$indlib" -a -f "$indlib" ] ; then
    echo $indlib > %{servicedir}/qmail-smtpd.$port/variables/VIRTUAL_PKG_LIB
  fi
done
if [ -n "$indlib" -a -f "$indlib" ] ; then
  echo $indlib > %{servicedir}/qmail-send.25/variables/VIRTUAL_PKG_LIB
fi

# turn off automatic refresh for services during first time installation
svc_list=""
for i in mrtg mysql.3306 fetchmail qmail-imapd.143 qmail-imapd-ssl.993 \
  qmail-pop3d.110 qmail-pop3d-ssl.995 proxy-imapd.4143 proxy-imapd-ssl.9143 \
  proxy-pop3d.4110 proxy-pop3d-ssl.9110 indisrvr.4000 inlookup.infifo \
  pwdlookup qmail-poppass.106 
do
  svc_list="$svc_list %{servicedir}/$i"
done
%{_prefix}/sbin/svctool --servicedir=%{servicedir} --norefreshsvc="0 $svc_list"

# selinux
%{_prefix}/sbin/svctool --servicedir=%{servicedir} --config=iselinux

if [ -f %{sysconfdir}/cronlist.i -a -d %{_sysconfdir}/cron.d ] ; then
  echo "adding cron entries"
  %{__cp} %{sysconfdir}/cronlist.i %{_sysconfdir}/cron.d
fi

if [ -f %{libexecdir}/iupgrade.sh ] ; then
  echo "Running Custom Installation Script for post install"
  /bin/sh %{libexecdir}/iupgrade.sh post install %{version} $*
fi
) >> /tmp/indimail-setup.log 2>&1

if [ -f %{_sysconfdir}/init/svscan.conf -o -f %{_sysconfdir}/event.d/svscan ] ; then
  echo "1. Issue /sbin/initctl emit qmailstart to start services"
  count=1
elif [ -f %{_sysconfdir}/systemd/system/multi-user.target.wants/svscan.service ] ; then
  echo "1. Issue /bin/systemctl start indimail to start services"
  count=1
else
  echo "1. Issue %{_prefix}/sbin/initsvc -on"
  echo "2. Issue /sbin/init q to start services"
  count=2
fi

count=`expr $count + 1`
echo "$count. Change your default domain in %{sysconfdir}/control/defaultdomain"
count=`expr $count + 1`
echo "$count. You can optionally run the following command to verify installation"
echo "   sudo rpm -V indimail"

if [ ! -f %{sysconfdir}/certs/servercert.pem ] ; then
if [ -x /usr/bin/uname -o -x /bin/uname ] ; then
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || `uname -n`)
else
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || echo %{defaultDomain})
fi
count=`expr $count + 1`
%if %nocourierimap == 0
echo "$count. You need to create CERTS for STARTTLS / SSL enabled IMAP/POP3."
%else
echo "$count. You need to create CERTS for STARTTLS."
%endif
echo "   Run the following command to create Certificate for TLS/SSL"
echo "   %{_prefix}/sbin/svctool --config=cert --postmaster=postmaster@$default_domain --common_name=$default_domain"
fi

echo
echo "Check /tmp/indimail-setup.log for the detailed installation log!!!"

### SCRIPTLET ###############################################################################
%preun
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi

(
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  if [ -f %{libexecdir}/iupgrade.sh ] ; then
    echo "Running Custom Un-Installation Script for preun upgrade"
    /bin/sh %{libexecdir}/iupgrade.sh preun upgrade %{version} "$argv1"
  fi
  exit 0
fi
if [ -f %{_prefix}/bin/svok ] ; then
  %{_prefix}/bin/svok %{servicedir}/.svscan/log 2>/dev/null
  if [ $? -eq 0 ] ; then
    if test -f %{_sysconfdir}/init/svscan.conf
    then
      echo "Giving IndiMail exactly 5 seconds to exit nicely"
      /sbin/initctl emit qmailstop > /dev/null 2>&1
    elif test -f %{_sysconfdir}/event.d/svscan
    then
      echo "Giving IndiMail exactly 5 seconds to exit nicely"
      /sbin/initctl emit qmailstop > /dev/null 2>&1
    elif test -f %{_sysconfdir}/systemd/system/multi-user.target.wants/svscan.service
    then
      echo "Giving IndiMail exactly 5 seconds to exit nicely"
      /bin/systemctl stop indimail > /dev/null 2>&1
    elif test -x %{_prefix}/sbin/initsvc
    then
      echo "Giving IndiMail exactly 5 seconds to exit nicely"
      %{_prefix}/sbin/initsvc -off
    fi
    sleep 5
  fi
fi

if [ -f %{libexecdir}/iupgrade.sh ] ; then
  echo "Running Custom Un-Installation Script for preun pre-uninstall"
  /bin/sh %{libexecdir}/iupgrade.sh preun uninstall %{version} "$argv1"
fi
) >> /tmp/indimail-setup.log 2>&1

### SCRIPTLET ###############################################################################
%postun
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -x /usr/bin/uname -o -x /bin/uname ] ; then
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || `uname -n`)
else
  default_domain=$([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || echo %{defaultDomain})
fi
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  (
  if [ -f %{libexecdir}/iupgrade.sh ] ; then
    echo "Running Custom Un-Installation Script for postun upgrade"
    /bin/sh %{libexecdir}/iupgrade.sh postun upgrade %{version} $*
  fi
  ) >> /tmp/indimail-setup.log
  if [ "%{_libdir}" != "/usr/lib64" -a "%{_libdir}" != "/usr/lib" ] ; then
    echo "recreating ld.so cache"
    /sbin/ldconfig
  fi
  exit 0
fi

(
# remove all virtual domains
for i in `ls %{indimaildir}/domains`
do
  grep -wv "^+$i-" %{sysconfdir}/users/assign > %{sysconfdir}/users/assign.tmp
  %{__mv} %{sysconfdir}/users/assign.tmp %{sysconfdir}/users/assign
done
if [ -x %{_prefix}/sbin/qmail-newu ] ; then
  %{_prefix}/sbin/qmail-newu
fi
%{__rm} -rf %{indimaildir}/domains/$default_domain
for port in 465 25 587
do
  > %{servicedir}/qmail-smtpd.$port/variables/VIRTUAL_PKG_LIB
  if [ %nobogofilter -eq 0 -a $port -ne 587 ] ; then
    > %{servicedir}/qmail-smtpd.$port/variables/SPAMFILTER
    > %{servicedir}/qmail-smtpd.$port/variables/SPAMEXITCODE
    > %{servicedir}/qmail-smtpd.$port/variables/LOGFILTER
  fi
done
%{__rm} -f %{sysconfdir}/indimail.mrtg.ok %{sysconfdir}/system.mrtg.ok
echo "removing startup services"
for i in fetchmail indisrvr.4000 inlookup.infifo mysql.3306 \
pwdlookup qmail-imapd.143 qmail-imapd-ssl.993 qmail-pop3d.110 qmail-pop3d-ssl.995 \
qmail-imapd.4143 qmail-pop3d.4110 qmail-poppass.106 mrtg 
do
  if [ -d %{servicedir}/$i ] ; then
    %{__rm} -rf %{servicedir}/$i || true
  elif [ -L %{servicedir}/$i ] ; then
    %{__rm} -f %{servicedir}/$i || true
  fi
done
if [ %noproxy -eq 0 ] ; then
for i in proxy-imapd.4143 proxy-imapd-ssl.9143 proxy-pop3d.4110 proxy-pop3d-ssl.9110
do
  if [ -d %{servicedir}/$i ] ; then
    %{__rm} -rf %{servicedir}/$i || true
  fi
done
fi
count=`/bin/ls %{servicedir} 2>/dev/null| /usr/bin/wc -l`
if [ $count -eq 0 ] ; then # ignore disabled services
  %{__rm} -rf %{servicedir} || true
fi

if [ -d %{_sysconfdir}/cron.d ] ; then
  echo "removing cron entries"
  %{__rm} -f %{_sysconfdir}/cron.d/cronlist.i
fi

echo "removing logs"
%{__rm} -f %{indimaildir}/mysqldb/logs/logisam.log
%{__rm} -f %{indimaildir}/mysqldb/logs/logquery
%{__rm} -f %{indimaildir}/mysqldb/logs/logslow
if [ -h %{logdir} ] ; then
  log_dir=`/bin/ls -ld %{logdir} | /usr/bin/awk '{print $10}'`
else
  log_dir=%{logdir}
fi
for i in fetchmail imapd.143 imapd-ssl.993 indisrvr.4000 inlookup.infifo \
mrtg mysql.3306 pop3d.110 pop3d-ssl.995 poppass.106 proxyIMAP.4143 \
proxyIMAP.9143 proxyPOP3.4110 proxyPOP3.9110 pwdlookup
do
  %{__rm} -rf $log_dir/$i
done

if [ "%{_libdir}" != "/usr/lib64" -a "%{_libdir}" != "/usr/lib" ] ; then
  echo "recreating ld.so cache"
  /sbin/ldconfig
fi

if [ -x /usr/sbin/selinuxenabled ] ; then
  /usr/sbin/selinuxenabled
  if [ $? -eq 0 -a -x /usr/sbin/semodule ] ; then
    echo "disabling selinux module"
    /usr/sbin/semodule -r indimail
  fi
fi

if [ -f %{libexecdir}/iupgrade.sh ] ; then
  echo "Running Custom Un-Installation Script for postun uninstall"
  /bin/sh %{libexecdir}/iupgrade.sh postun uninstall %{version} $*
fi
) >> /tmp/indimail-setup.log 2>&1

### SCRIPTLET ###############################################################################
%posttrans
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -f %{libexecdir}/iupgrade.sh ] ; then
(
  echo "Running Custom Installation Script for posttrans"
  /bin/sh %{libexecdir}/iupgrade.sh posttrans noargs %{version} $*
) >> /tmp/indimail-setup.log 2>&1
fi

### SCRIPTLET ###############################################################################
%pre -n libindimail

### SCRIPTLET ###############################################################################
%post -n libindimail
if [ "%{_libdir}" != "/usr/lib64" -a "%{_libdir}" != "/usr/lib" ] ; then
  /sbin/ldconfig
fi

### SCRIPTLET ###############################################################################
%postun -n libindimail
argv1=$1
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  exit 0
fi
# Shared libraries (omit for architectures that don't support them)
echo "removing shared libraries"
%{__rm} -f %{_libdir}/libeps.so
%{__rm} -f %{_libdir}/libeps.so.1
%{__rm} -f %{_libdir}/libeps.so.1.0.0
%{__rm} -f %{_libdir}/libcdb.so
%{__rm} -f %{_libdir}/libcdb.so.1
%{__rm} -f %{_libdir}/libcdb.so.1.0.0
%{__rm} -f %{_libdir}/libflash.so
%{__rm} -f %{_libdir}/libflash.so.1
%{__rm} -f %{_libdir}/libflash.so.1.0.0
%{__rm} -f %{_libdir}/libindimail.so
%{__rm} -f %{_libdir}/libindimail.so.2
%{__rm} -f %{_libdir}/libindimail.so.2.0.0
if [ "%{_libdir}" != "/usr/lib64" -a "%{_libdir}" != "/usr/lib" ] ; then
  /sbin/ldconfig
fi

%postun devel
argv1=$1
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  exit 0
fi
if [ %{_prefix} = "/var/indimail" -o %{_prefix} = "/var/qmail" ] ; then
echo "removing man pages, include files"
for i in %{_prefix}/include %{mandir}/man3
do
  %{__rm} -rf $i || true
done
/bin/rmdir --ignore-fail-on-non-empty %{mandir} 2>/dev/null
fi
echo "removing static libraries"
%{__rm} -f %{_libdir}/libeps.a
%{__rm} -f %{_libdir}/libcdb.a
%{__rm} -f %{_libdir}/libflash.a
%{__rm} -f %{_libdir}/libindimail.a


# fix changelog for openSUSE buildservice
%changelog
