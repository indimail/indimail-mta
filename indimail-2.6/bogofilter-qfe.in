#!/bin/sh
# WARNING: This file was auto-generated. Do not edit!
# $Log: bogofilter-qfe.in,v $
# Revision 2.16  2016-06-17 10:40:20+05:30  Cprogrammer
# FHS compliance
#
# Revision 2.15  2016-05-17 14:41:05+05:30  Cprogrammer
# use controldir defined by configure
#
# Revision 2.14  2012-06-20 19:03:31+05:30  Cprogrammer
# fix for recursive emails when email sent to training ids
#
# Revision 2.13  2011-12-18 10:59:42+05:30  Cprogrammer
# use config_file and wordlist argument to bogofilter
#
# Revision 2.12  2011-12-10 09:22:39+05:30  Cprogrammer
# use spam_header_name from bogofilter.cf
#
# Revision 2.11  2010-07-06 13:26:40+05:30  Cprogrammer
# use sendmail instead of sendmail.sh
#
# Revision 2.10  2010-04-23 08:38:16+05:30  Cprogrammer
# allow nonspam as a valid anologous token for ham
#
# Revision 2.9  2009-12-19 20:20:40+05:30  Cprogrammer
# change tail syntax to gnu usage
#
# Revision 2.8  2008-06-04 13:51:08+05:30  Cprogrammer
# added warning that file is auto-generated
#
# Revision 2.7  2004-02-26 12:06:59+05:30  Cprogrammer
# delete temp file
#
# Revision 2.6  2004-01-15 23:23:20+05:30  Cprogrammer
# ignore case when check spamignoreheaders
# send stats before adding to wordlist.db
#
# Revision 2.5  2004-01-11 23:57:51+05:30  Cprogrammer
# added report for sending back stats to sender
#
# Revision 2.4  2004-01-10 09:46:18+05:30  Cprogrammer
# added code to allow specific senders and domains
#
# Revision 2.3  2003-12-17 23:30:43+05:30  Cprogrammer
# added control file spamignoreheaders
#
# Revision 2.2  2003-12-10 01:39:09+05:30  Cprogrammer
# added option for domain specific filtering
#
# Revision 2.1  2003-12-07 00:34:45+05:30  Cprogrammer
# script to register unregister spam
#
# This a qmail specific bogofilter frontend script which allows the use of a 
# centralized bogofilter running on an smtp mail server
# Copyright (C) Gyepi Sam <gyepi@praxis-sw.com> 2002
# $Id: bogofilter-qfe.in,v 2.16 2016-06-17 10:40:20+05:30 Cprogrammer Exp mbhangui $
 
domain=$HOST
#
# set REPORT if statistics is to be sent back
# set REPORT_TO if the report is not to be sent to the SENDER
# set attach_report to send the report as an attached zip
#
REPORT=yes
REPORT_TO=postmaster
attach_report=no
sender_domain=`echo $SENDER | cut -d@ -f2`
if [ " $sender_domain" = " " -o " $sender_domain" = " #[]" ] ; then
	echo "$SENDER: Sorry, You are not authorized to email $EXT@$domain"
	exit 100
fi
auth_flag=0
/bin/grep $sender_domain @controldir@/rcpthosts > /dev/null 2>&1
if [ $? -eq 0 ] ; then
	auth_flag=1
fi
if [ $auth_flag -eq 0 ] ; then
	/bin/grep $sender_domain @controldir@/locals > /dev/null 2>&1
	if [ $? -eq 0 ] ; then
		auth_flag=1
	fi
fi
if [ $auth_flag -eq 0 ] ; then
	/bin/grep "@$sender_domain" @controldir@/spamignore > /dev/null 2>&1
	if [ $? -eq 0 ] ; then
		auth_flag=1
	fi
fi
#
# Sigh :( my last hope
#
if [ $auth_flag -eq 0 ] ; then
	/bin/grep $SENDER @controldir@/spamignore > /dev/null 2>&1
	if [ $? -ne 0 ] ; then
		echo "$SENDER: Sorry, You are not authorized to email $EXT@$domain"
		exit 100
	fi
fi
if [ -f @indimaildir@/domains/$domain/wordlist.db ] ; then
	wordlist=@indimaildir@/domains/$domain
else
	wordlist=@sysconfdir@
fi
if [ -f @indimaildir@/domains/$domain/bogofilter.cf ] ; then
	config_file=@indimaildir@/domains/$domain/bogofilter.cf
else
	config_file=@sysconfdir@/bogofilter.cf
fi
spam_header_name=`grep ^spam_header_name $config_file 2>/dev/null | cut -d= -f2`
if [ " $spam_header_name" = " " ] ; then
	PAT="/^X-Spam-Rating/d; /^X-Filter/d; /^X-Bogosity/d; /^Delivered-To/d;"
else
	PAT="/^X-Spam-Rating/d; /^X-Filter/d; /^$spam_header_name/d; /^Delivered-To/d;"
fi
opt="X"
case "$EXT" in
	Bregister-spam|register-spam)		# register as spam
	PAT="$PAT /$domain/d;"
	opt="-s"
;;
	Bregister-ham|register-ham|Bregister-nonspam|register-nonspam)	# register as ham
	opt="-n"
;;
	Bspam|spam)	# unregister as ham + register as spam
	PAT="$PAT /$domain/d;"
	opt="-Ns"
;;
	Bham|ham|Bnonspam|nonspam)	# unregister as spam + register as ham
	opt="-Sn"
;;
esac
(
if [ -f @controldir@/spamignoreheaders ] ; then
	/bin/grep -i -v -f @controldir@/spamignoreheaders
else
	/bin/cat -
fi
) | sed -e 's,.\**SPAM.\**,,g' > /tmp/bogofilter.$$
if [ ! " $REPORT" = " " ] ; then
	subject="SpamFilter Analysis (mail sent to $EXT@$HOST)"
	if [ " $attach_report" = " " -o " $attach_report" != " yes" ] ; then
		(
		if [ " $REPORT_TO" = " " ] ; then
			echo "To: $SENDER"
		else
			echo "To: $REPORT_TO"
		fi
		echo "From: \"IndiMail Spam Reporter\" <Mailer-Daemon>"
		echo "Date: `/bin/date -R`"
		echo "Subject: $subject"
		echo
		echo "Analysis of mail sent by $SENDER to $EXT@$HOST"
		echo
		@prefix@/bin/bogofilter -c $config_file -d $wordlist -vvv < /tmp/bogofilter.$$
		) | @qmaildir@/bin/sendmail -t
	else
		(
		echo
		echo "Analysis of mail sent by $SENDER to $EXT@$HOST"
		echo "on `/bin/date -R`"
		echo
		) > /tmp/descfile.$$
		if [ " $REPORT_TO" = " " ] ; then
			postmaster="$SENDER"
		else
			postmaster="$REPORT_TO"
		fi
		@prefix@/bin/bogofilter -c $config_file -d $wordlist -vvv < /tmp/bogofilter.$$ > /tmp/report.$$
		if [ " $opt" = " -s" -o " $opt" = " -Ns" ] ; then
			/usr/bin/zip -q -j /tmp/report.$$.zip /tmp/report.$$ /tmp/bogofilter.$$
			/bin/rm -f /tmp/report.$$
		else
			# Could be confidential
			/usr/bin/zip -q -j -m /tmp/report.$$.zip /tmp/report.$$
		fi
		QMAILUSER=postmaster
		if [ ! " $default_domain" = " " ] ; then
			QMAILHOST=$default_domain
		fi
		QMAILNAME="IndiMail SPAM Reporter"
		export QMAILNAME
		@prefix@/bin/mpack -s "$subject" -d /tmp/descfile.$$ \
			-c "application/zip" /tmp/report.$$.zip $postmaster
		/bin/rm -f /tmp/descfile.$$ /tmp/report.$$.zip
	fi
fi
headcount=`@qmaildir@/bin/822header < /tmp/bogofilter.$$| wc -l`
(
	if [ " $headcount" = " " ] ; then
		# Something wrong with the mail format.
		/bin/cat /tmp/bogofilter.$$ | /bin/sed "$PAT"
	else
		# Output headers after eliminating headers containing the 
		# sender's email id and domain
		@qmaildir@/bin/822header < /tmp/bogofilter.$$ | /bin/sed "$PAT"
		# get the body
		headcount=`expr $headcount + 1`
		tail --lines=+$headcount < /tmp/bogofilter.$$
	fi
	/bin/rm -f /tmp/bogofilter.$$
) | @prefix@/bin/bogofilter -c $config_file -d $wordlist $opt
status=$?
if [ $status = 0 ] ; then
	exit 0
else
	exit 111
fi
