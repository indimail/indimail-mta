.TH plugin_init 3
.SH NAME

plugin_init() - Template for Dynamic SMTP Plugins
.SH SYNTAX
.B #include "smtp_plugin.h"

char *\fBfrom_plug\fP(char *\fIrip\fR, char *\fIfrom\fR, char **\fImesg\fR);

char *\fBrcpt_plug\fP(char *\fIrip\fR, char *\fIfrom\fR, char *\fIrcpt\fR, char **\fImesg\fR);

char *\fBdata_plug\fP(char *\fIlocal\fR, char *\fIrip\fR, char *\fIrhost\fR, char *\fIrinfo\fR, char **\fImesg\fR);

PLUGIN *\fBplugin_init()\fR;

.EX
typedef struct
{
	int             (*mail_func) (char *, char *, char **);
	int             (*rcpt_func) (char *, char *, char *, char **);
	int             (*data_func) (char *, char *, char *, char *, char **);
} PLUGIN;
.EE

.SH DESCRIPTION
.B PLUGIN
structure has three components:
\fBmail_func\fR
is a pointer to function to be executed in the SMTP MAIL session.
\fBrcpt_func\fR
is a pointer to function to be executed in the SMTP RCPT session.
\fBdata_func\fR
is a pointer to function to be executed in the SMTP DATA session.

To write a SMTP plugin you have to write the \fBplugin_init()\fR function. Depending on which
phase of SMTP (MAIL, RCPT, DATA) you want to call your function, you have to write the
\fBfrom_plug\fR, \fBrcpt_plug\fR, \fBdata_plug\fR functions.

The plugin_init() function can be written as below

.EX
PLUGIN         *
plugin_init()
{
	static PLUGIN   plug;
	PLUGIN         *ptr;

	ptr = &plug;
	ptr->mail_func = from_plug;
	ptr->rcpt_func = rcpt_plug;
	ptr->data_func = data_plug;
	return &plug;
}
.EE

To compile the plugin you can use \fBgcc(1)\fR.

.EX
gcc -Wall -O2 -fPIC -fno-strict-aliasing -c smtp_plugin.c
gcc -shared -rdynamic -nostartfiles -fPIC -s -O4 -o smtpd-plugin.so smtp_plugin.o
.EE

You need to copy the plugin in \fIQMAILHOME/plugins\fR directory for it to get loaded by
\fBqmail-smtpd(8)\fR at runtime.

If you desire to write multiple plugins, you should have your plugins as
smtpd-plugin.so, smtpd-plugin0.so, smtpd-plugin1.so and so on. To ensure functions to be
executed from all libraries, you should append an index to the \fImail_func\fR, \fIrcpt_func\fR
and \fIdata_func\fR functions. eg. Your \fBplugin_init()\fR in smtpd-plugin0.so can be

.EX
PLUGIN         *
plugin_init()
{
	static PLUGIN   plug;
	PLUGIN         *ptr;

	ptr = &plug;
	ptr->mail_func = from_plug_0;
	ptr->rcpt_func = rcpt_plug_0;
	ptr->data_func = data_plug_0;
	return &plug;
}
.EE

.SH RETURN VALUE

The functions \fBfrom_plug\fR, \fBrcpt_plug\fR, \fBdata_plug\fR must return 0 on success. These
functions should return 1 to terminate the sesson with a message. You can set your own message
by assigning \fImesg\fR variable. If you have the below function in smtpd-plugin.so

.EX
int
rcpt_plug(char *remoteip, char *from, char *rcpt, char **mesg)
{
	if (!strstr(rcpt, "@yahoo.com"))
	{
		*mesg = "530 We are serious and don't Yahoo (#5.7.1)\r\n";
		return (1);
	}
	return (0);
}
.EE

.SH SEE ALSO
qmail-smtpd(8), dlopen(3), plugtest(1), gcc(1)
