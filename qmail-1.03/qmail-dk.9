.TH qmail-dk 8
.SH NAME
qmail-dk \- sign/verify and queue a mail message for delivery
.SH SYNOPSIS
.B qmail-dk
.SH DESCRIPTION
.B qmail-dk
has the same interface as
.B qmail-queue
except that it inserts an appropriate DomainKeys header before it
queues the message.  To invoke
.BR qmail-dk ,
set QMAILQUEUE to point to qmail-dk in the environment when
you send or receive email. qmail-dk will call
.BR qmail-multi .
To invoke an executable other than
.B qmail-multi
set DKQUEUE=bin/qmail-queue for example.

.B qmail-dk
supports DomainKey signing and verification.  It uses the libdomainkey
and OpenSSL libraries.  To sign a message, set the
.B DKSIGN
environment variable to the pathname to the private key that will be
used to sign the message.  If there is a % character in the environment
variable, it is removed and replaced by the domain name in the From: header.
If, after substituting the %, that file does not exist, the % will be removed.
If the privae key file does not exist, the message will be rejected with error 35.
The selector will be taken from the basename of the file. The private key should be
created by 
.BR dknewkey(8) .

You can set various DK options in getopt style, by setting the environment variable DKSIGNOPTIONS
 b <advice_length>    Length of Advice
 c <canonicalization> simple, nofws
 s <privkeyfile>
 h                    include h= tag
 r                    Skip Duplicate Headers
.EX
 DKSIGNOPTIONS="-h -r -c nofws"
 sets the h= tag, skips duplicate headers and sets nofws canonicalization
.EE

To verify a message, set the
.B DKVERIFY
environment variable to a desired set of letters.  Precisely, if you
want a libdomainkey return status to generate an error, include that
letter, where A is the first return status (DK_STAT_OK), B is the
second (DK_STAT_BADSIG), etc.  The letter should be uppercase if you
want a permanent error to be returned (exit code 13), and lowercase if
you want a temporary error to be returned (exit code 84).
The complete set of letters with the corresponding return status is given below

 A - DK_STAT_OK           - Function completed successfully
 B - DK_STAT_BADSIG       - Signature was available but failed to verify against
                            domain specified key
 C - DK_STAT_NOSIG        - No signature available in message
 D - DK_STAT_NOKEY        - No public key available (permanent failure)
 E - DK_STAT_BADKEY       - Unusable key, public if verifying, private if signing
 F - DK_STAT_CANTVRFY     - Cannot get domain key to verify signature
                            (temporary failure)
 G - DK_STAT_SYNTAX       - Message is not valid syntax. Signature could not be
                            created/checked
 H - DK_STAT_NORESOURCE   - Could not get critical resource (temporary failure)
 I - DK_STAT_ARGS         - Arguments are not usable.
 J - DK_STAT_REVOKED      - Key has been revoked.
 K - DK_STAT_INTERNAL     - cannot call this routine in this context.  Internal error.
 L - DK_STAT_GRANULARITY  - Granularity mismatch: sender doesn't match g= option.

For example, if you want to permanently reject messages that have a
signature that has been revoked, include the letter 'K' in the
.B DKVERIFY
environment variable.  A conservative set of letters is
.BR DEGIJKfh .
Reject permanently BADSIG, NOKEY, BADKEY, SYNTAX, ARGS, REVOKED, and
INTERNAL errors, and temporarily CANTVRFY and NORESOURCE. Add in
.B B
if you want to reject messages that have a signature that doesn't
verify (presumably because the message is a forgery or has been
damaged in transit.  Note that
.B qmail-dk
always inserts the 
.B DomainKey-Status
header, so that messages can be
rejected at delivery time, or in the mail reader.

Typically, you would sign messages generated on-host by setting
.B DKSIGN
in the environment before running an email program.  DKSIGN will be carried
through qmail's sendmail emulation through 
.B qmail-inject
to
.BR qmail-dk .
You would also set it for
.B qmail-smtpd
at the same time
.B RELAYCLIENT
is set, most often in the tcpserver cdb file.  If a host is authorized
to relay, you probably want to sign messages sent by that host.
.B DKVERIFY
should be set for all other hosts.

If neither
.B DKSIGN
nor
.B DKVERIFY
are set, then
.B DKSIGN
will be set to QMAILHOME/control/domainkeys/%/default. The % will be replaced by the domain in the
From: header. If such a file does not exist, then it will be set to
QMAILHOME/control/domainkeys/default. If such a private key exists, it will be used to sign the
domain. You can also set \fBDKKEY\fR to chose a key different from
QMAILHOME/control/domainkeys/%/default. \fBDKKEY\fR can also have % character that will be
replaced by the domain in the From: header.

By default
.B qmail-dk
will use all of the headers when signing a message.
The environment variable
.B DKEXCLUDEHEADERS
may be set to a colon-separated list of headers that are to be excluded from signing.

.B qmail-dk
will ordinarily spawn
.BR qmail-multi ,
but if DKQUEUE is set in the environment,
the program that it points to will be executed instead.

.SH "EXIT CODES"
.B qmail-dk
returns the same exit codes as qmail-queue with these additions:
.TP 5
.B 35
The private key file does not exist.
.TP 5
.B 57
Trouble waiting for qmail-queue to exit.
.TP 5
.B 58
Unable to vfork.
.TP 5
.B 59
Unable to create a pipe to qmail-queue.
.SH "SEE ALSO"
addresses(5),
envelopes(5),
qmail-header(5),
dknewkey(8),
dktest(8),
qmail-inject(8),
qmail-qmqpc(8),
qmail-queue(8),
qmail-send(8),
qmail-smtpd(8),
qmail-dkim(8),
domain-keys(5)

