.TH "sslerator" "8" "06 Mar 2010" "Manvendra Bhangui" ""

.SH NAME
sslerator \- TLS/SSL protocol wrapper
.SH SYNOPSIS

\fBsslerator\fR [ \fB\fIoption\fB\fR\fI ...\fR ] \fB\fIprog\fB\fR \fB\fIarg\fB\fR\fI ...\fR

.SH "DESCRIPTION"
.PP
The \fBsslerator\fR program is used by applications to encrypt a network
connection using SSL/TLS, without having the application deal with the gory
details of SSL/TLS. \fBsslerator\fR is used by the IndiMail proxy IMAP and
POP3 servers.
.PP
\fBsslerator\fR is not usually run directly from the commandline. An
application typically creates a network connection, then runs
\fBsslerator\fR with appropriate options to encrypt the network connection
with SSL/TLS.

\fBsslerator\fR(8) can be replaced by the \fBdotls\fR(1) program and in
future will be deprecated.

.SH "OPTIONS"
.TP 3
\fB-n\fR \fIcertfile\fR
The certificate to use and is required for SSL/TLS servers. \fIcertfile\fR
must not be world-readable. This option overrides environment variable
TLS_CERTFILE.

.TP
\fB-C\fR \fIcafile\fR
Specify \fIcafile\fR as the file containing CA certificates. Sometimes,
special CA certificates are needed if an intermediate certificate used
by your issuing CA expires. Note that the file given with -c is passed
to SSL_CTX_load_verify_locations and thus may contain several CA
certificates, which will be used during SSL connection negotiation to
close any gap in the certificate chain.

.TP
\fB-c\fR \fIcipherfile\fR
Use ciphers listed in \fIcipherfile\fR. Without this \fBdotls\fR uses
TLS_CIPHER_LIST environment variable if set or system configured
PROFILE=SYSTEM ciphers.

.TP
-\fBM\fR \fItls_method\fR
Use \fItls_method\fR to set client/server method / protocol. This will be
one of SSLv23, SSLv3, TLSv1, TLSv1_1, TLSv1_2, TLSv1_3 values.
The actual protocol version used will be negotiated to the highest version
mutually supported by the client and the server. The supported protocols
are SSLv3, TLSv1, TLSv1.1, TLSv1.2 and TLSv1.3. Ths option must not be used
to avoid the version-specific methods as they are deprecated.

.TP
\fB-t\fR \fItimeout\fR
Timeout after \fItimeout\fR seconds if no data is received

.TP
\fB-b\fR \fIbanner\fR
Use \fIbanner\fR as greeting. This is overriden if -s startls stmp option
is given. This option overrides environment variable BANNER.

.TP
\fB-e\fR
Write ssl library errors to the network. If not provided, \fBsslerator\fR
will write all ssl library errors to fd 2. This mode is disabled if
environment variable \fBTCPREMOTEIP\fR is defined (running under
tcpserver(1)).

.TP
\fB-s\fR
Issue SMTP Greeting code on successful TLS/SSL negotiation. This code is
obtained from \fIprog\fR. \fIprog\fR could be something like qmail-smtpd
from qmail/indimail/notqmail/netqmail package.

.SH "ENVIRONMENT VARIABLES"
.PP
\fBsslerator\fR reads the following environment variables in order to
configure the SSL/TLS protocol:
.TP 0
\fBTLS_CERTFILE=\fIfilename\fB\fR
The certificate to use. The -n option overrides this. \fBTLS_CERTFILE\fR is
required for SSL/TLS servers, and is optional for SSL/TLS clients.
\fIfilename\fR must not be world-readable.

.TP
\fBSSL_CIPHER=\fIcipherList\fB\fR
A set of OpenSSL cipher strings. Multiple ciphers contained in a string
should be separated by a colon. The -c option overrides this.

.TP
\fBBANNER=\fIstring\fB\fR
Banner to issue before starting SSL/TLS negotiation.

.SH NOTES

A script \fIupdate_tmprsadh\fR in cron uses the following openssl commands
to pre-generate 2048 bites RSA and DH parameters. You can pass --maxbits
argument to \fIupdate_tmprsadh\fR to generate these with higher bits. You
can set the environment variable \fBSSL_BITS\fR to make sslerator choose
specific bits for the RSA/DH parameters. These files are generated in
@qsysconfdir@/certs. \fIupdate_rmprsadh\fR is installed to be run by cron
if you have installed indimail from Open Build Service.

.EX
/usr/bin/openssl genrsa  -out    rsa2048.pem 2048
/usr/bin/openssl dhparam -out -2  dh2048.pem 2048
.EE

Some ciphersuites may use ephemeral Diffie-Hellman (DH) key exchange. In
these cases, the session data is negotiated using the ephemeral/temporary
DH key and the key supplied and certified by the certificate chain is only
used for signing. Anonymous ciphers (without a permanent server key) also
use ephemeral DH keys.

Using ephemeral DH key exchange yields forward secrecy as the connection
can only be decrypted when the DH key is known. By generating a temporary
DH key inside the server application that is lost when the application is
left, it becomes impossible for an attacker to decrypt past sessions, even
if they get hold of the normal (certified) key, as this key was only used
for signing.

In order to perform a DH key exchange the server must use a DH group (DH
parameters) and generate a DH key. The server will always generate a new DH
key during the negotiation.

As generating DH parameters is extremely time consuming, an application
should not generate the parameters on the fly. DH parameters can be reused,
as the actual key is newly generated during the negotiation.

Typically applications should use well known DH parameters that have
built-in support in OpenSSL. The macro SSL_set_dh_auto(3ossl) configures
OpenSSL to use the default built-in DH parameters for the SSL object.
Passing a value of 1 in the onoff parameter switches the feature on, and
passing a value of 0 switches it off. The default setting is off.

If "auto" DH parameters are switched on then the parameters will be
selected to be consistent with the size of the key associated with the
server's certificate. If there is no certificate (e.g. for PSK
ciphersuites), then it it will be consistent with the size of the
negotiated symmetric cipher key.

Applications may supply their own DH parameters instead of using the
built-in values. This approach is discouraged and applications should in
preference use the built-in parameter support described above. Applications
wishing to supply their own DH parameters should call
SSL_set0_tmp_dh_pkey(3ossl) to supply the parameters for SSL. The
parameters should be supplied in the dhpkey argument as an EVP_PKEY
containg DH parameters. Ownership of the dhpkey value is passed to the
SSL_CTX or SSL object as a result of this call, and so the caller should
not free it if the function call is succesful..

.SH "SEE ALSO"
.PP
\fBproxyimap\fR(8),
\fBproxypop3\fR(8),
\fBdotls\fR(1),
\fBqmail-smtpd\fR(8)
