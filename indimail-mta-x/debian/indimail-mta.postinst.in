#!/bin/sh
# postinst script for indimail
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

prefix=@prefix@
qmaildir=@qmaildir@
mandir=@mandir@
shareddir=@shareddir@
libexecdir=@libexecdir@
qcount=5
qbase=${qmaildir}/queue
mbase=@mbase@
logdir=@logdir@
servicedir=@servicedir@
qsysconfdir=@qsysconfdir@
sysconfdir=@sysconfdir@
cp=/bin/cp
rm=/bin/rm
mv=/bin/mv
####################################
nodksignature=0
notlsarr=0
tcpserver_plugin=1
dkimkeyfn=default

setperm()
{
	local user="$1"; shift
	local group="$1"; shift
	local mode="$1"; shift
	local file="$1"; shift
	/usr/sbin/dpkg-statoverride --list "$file" >/dev/null && return 0
	/usr/sbin/dpkg-statoverride --update --add "$user" "$group" "$mode" "$file"
}

fixperms()
{
	if [ $# -eq 3 ] ; then # directory
	#%dir %attr(0555,root,indimail) /var/indimail/sbin
		lin=$2
		file=$3
		if [ ! -d $file ] ; then
			return 0
		fi
	elif [ $# = 2 ] ; then # file
	#%attr(0555,root,qmail) /var/indimail/bin/rsmtp
		lin=$1
		file=$2
		if [ ! -f $file ] ; then
			return 0
		fi
	fi
	perm=`echo $lin|cut -d\( -f2 | cut -d, -f1`
	perm_f1=`echo $perm | cut -c1`
	own=`echo $lin|cut -d\( -f2 | cut -d, -f2`
	grp=`echo $lin|cut -d\( -f2 | cut -d, -f3|cut -d\) -f1`
	if [ -f $file ] ; then
		if [ $perm_f1 -eq 0 ] ; then # 4755, 0644
			/bin/chown $own:$grp $file
			/bin/chmod $perm $file
		else
			echo $file
			if [ -f /usr/sbin/dpkg-statoverride ] ; then
				setperm $own $grp $perm $file
			else
				/bin/chown $own:$grp $file
				/bin/chmod $perm $file
			fi
		fi
	elif [ -d $file ] ; then
		/bin/chown $own:$grp $file
		/bin/chmod $perm $file
	fi
}

ID=`id -u`
if [ $ID -ne 0 ] ; then
	echo "You are not root" >&2
	exit 1
fi

upgrade=0
case "$1" in
	configure)
	if [ -f /tmp/indimail-mta/.install ] ; then
		upgrade=0
		/bin/rm -rf /tmp/indimail-mta
	else
		if [ -n "$2" ] ; then
			upgrade=1
		fi
	fi
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	exit 0
	;;

	*)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

#
# We need to do this for debian. SIGH!!
#
if [ -f ${qsysconfdir}/indimail-mta.perms ] ; then
	(
	/bin/grep -v "^#" ${qsysconfdir}/indimail-mta.perms | cut -d# -f1 | while read line
	do
		if [ " $line" = " " ] ; then
			continue
		fi
		fixperms $line
	done
	) > ${qsysconfdir}/indimail-mta-stat.override
	if [ ! -s ${qsysconfdir}/indimail-mta-stat.override ] ; then
		/bin/rm -f ${qsysconfdir}/indimail-mta-stat.override
	fi
fi

# indimail-mta.upgrade/indimail-mta.install are created
# by the preinst script
if [ $upgrade -eq 1 ] ; then # upgrade
	(
	if [ -f ${libexecdir}/qupgrade.sh ] ; then
		echo "Running Custom Upgrade Script for post upgrade"
		/bin/sh ${libexecdir}/qupgrade.sh post upgrade @version@ $* || true
	fi
	# refresh indimail-mta services
	svc_list=""
	for i in clamd greylist.1999 qmail-qmqpd.628 \
		qmail-qmtpd.209 qmail-smtpd.25 qmail-smtpd.366 \
		qmail-smtpd.465 qmail-smtpd.587 slowq-send \
		qmail-daned.1998 qscanq udplogger.3000 \
		qmail-logfifo .svscan
	do
		if [ -d ${servicedir}/$i ] ; then
			if [ -z "$svc_list" ] ; then
				svc_list="${servicedir}/$i"
			else
				svc_list="$svc_list ${servicedir}/$i"
			fi
		fi
	done
	svc_list="$svc_list ${qsysconfdir}/control/defaultqueue"
	${prefix}/sbin/svctool --servicedir=${servicedir} --refreshsvc="$svc_list"

	set +e
	if [ -d /run ] ; then
		rundir=/run
	elif [ -d /var/run ] ; then
		rundir=/var/run
	else
		rundir=${servicedir}
	fi
	echo "starting indimail-mta services"
	for i in greylist.1999 qmail-daned.1998 qmail-qmqpd.628 \
		qmail-qmtpd.209 qmail-send.25 qmail-smtpd.25 \
		qmail-smtpd.366 qmail-smtpd.465 qmail-smtpd.587 \
		slowq-send qscanq resolvconf udplogger.3000 \
		qmail-logfifo
	do
		if [ ! -d ${servicedir}/$i ] ; then
			continue
		fi
		${prefix}/bin/svok ${servicedir}/$i 2>&1
		if [ $? -eq 0 -a -f ${rundir}/$i/.down ] ; then
			${rm} -f ${rundir}/$i/.down
			${prefix}/bin/svc -u ${servicedir}/$i
		fi
	done
	set -e
	) >> /var/log/indimail-mta-setup.log 2>&1
	exit 0
fi
if [ ! "${prefix}" = "/usr" ] ; then
	# Recreate ld.so links and cache
	if [ -d ${sysconfdir}/ld.so.conf.d ] ; then
	echo "recreating ld.so cache"
	(
		if [ -d /usr/lib64 ] ; then
			echo /usr/lib64
		else
			echo /usr/lib
		fi
	) > ${sysconfdir}/ld.so.conf.d/indimail-mta-`uname -m`.conf
	/sbin/ldconfig
	fi
else
	/sbin/ldconfig
fi

echo "Doing Post Install"
echo ""
echo " 1. Configure ${logdir} for multilog"
echo " 2. Configure ${servicedir}"
echo " 3. Configure svscanlog service"
echo " 4. Configure standard catch-all accounts, default qmail configuration"
echo " 5. Configure DKIM, Domainkeys signature"
echo " 6. Configure QHPSI for inline virus scanning"
echo " 7. Configure SMTP services on port in 465 25 587"
echo " 8. Configure default queue configuration for sendmail, qmail-inject"
echo " 9. Configure ODMR service"
echo "10. Configure greylisting service"
echo "11. Configure QMTP service"
echo "12. Configure QMQP service"
echo "13. Configure udplogger service"
echo "14. Configure qscanq/clamd/freshclam service"
echo "15. Configure ${qsysconfdir}/control/signatures"
echo "16. Configure tcprules database for SMTP, QMTP, QMQP"
echo "17. Configure indimail-mta startup"
echo ""

(
echo "Creating ${logdir}"
if [ ! -d ${logdir} ] ; then
	/bin/mkdir ${logdir}
fi
/bin/chown -R qmaill:nofiles ${logdir}

# Misc/Configuration
echo "Creating default qmail configuraton and catch-all alias (${qmaildir}/alias/Maildir) for all system users"
${prefix}/sbin/svctool --config=qmail --fsync --syncdir  --postmaster=${qmaildir}/alias/Maildir/

if [ $nodksignature -eq 0 ] ; then
	if [ -x ${prefix}/bin/dknewkey ] ; then
		ver_opt="dkim"
		sign_opt="dkim"
		if [ " $key_bit" = " " ] ; then
			key_bit=1024
		fi
		${prefix}/bin/dknewkey -b $key_bit $dkimkeyfn
	else
		ver_opt="none"
		sign_opt="none"
	fi
else
	ver_opt="none"
	sign_opt="none"
fi
a_arch=`uname -m`
if [ " $a_arch" = " x86_64" ] ; then
	smtp_soft_mem=104857600
	qmtp_soft_mem=104857600
	qmqp_soft_mem=104857600
	send_soft_mem=104857600
else
	smtp_soft_mem=26214400
	qmtp_soft_mem=26214400
	qmqp_soft_mem=26214400
	send_soft_mem=83886080
fi

echo "Checking if clamav is installed"
if [ -f /usr/sbin/clamd -a -f /usr/bin/clamdscan ] ; then
	have_clamav=1
	clamdPrefix="/usr"
	if [ -d ${sysconfdir}/clamav ] ; then
		mysysconfdir=${sysconfdir}/clamav
	elif [ -d ${sysconfdir}/clamd.d ] ; then
		mysysconfdir=${sysconfdir}/clamd.d
	elif [ -d ${qsysconfdir}] ; then
		mysysconfdir=${qsysconfdir}
	else
		mysysconfdir=${sysconfdir}
	fi
	qhpsi="/usr/bin/clamdscan %s --config=${mysysconfdir}/scan.conf --fdpass --quiet --no-summary"
	# let qscand get qmail group for socket permission
	/usr/sbin/usermod -aG qmail qscand || true
else
	have_clamav=0
fi

# SMTP
for port in 465 25 587
do
	extra_opt=""
	if [ $port -eq 465 ] ; then
		extra_opt="--skipsend --authsmtp --ssl --utf8"
		extra_opt="$extra_opt --rbl=-rzen.spamhaus.org --rbl=-rdnsbl-1.uceprotect.net"
	elif [ $port -eq 587 ] ; then
		# local authenticated users
		# why bother with spamfilter
		# if you do, then you have a serious
		# problem with your organization, not
		# with IndiMail
    	extra_opt="--skipsend --forceauthsmtp --antispoof --forcetls --utf8"
	else
		extra_opt="--remote-authsmtp=login --localfilter --remotefilter"
		extra_opt="$extra_opt --deliverylimit-count=-1 --deliverylimit-size=-1"
		extra_opt="$extra_opt --rbl=-rzen.spamhaus.org --rbl=-rdnsbl-1.uceprotect.net"
		extra_opt="$extra_opt --dmemory=$send_soft_mem --utf8"
	fi
	if [ $tcpserver_plugin -eq 1 ] ; then
		extra_opt="$extra_opt --shared-objects=1 --use-dlmopen=1"
	fi
	if [ $have_clamav -eq 1 ] ; then
		extra_opt="$extra_opt --qhpsi=\"$qhpsi\""
	fi
	eval ${prefix}/sbin/svctool --smtp=$port --servicedir=${servicedir} \
		--qbase=${qbase} --qcount=${qcount} --qstart=1 \
		--query-cache --dnscheck --password-cache \
		--cntrldir=control --localip=0 --maxdaemons=75 --maxperip=25 --persistdb \
		--starttls --memory=$smtp_soft_mem \
		--chkrecipient --chkrelay --masquerade \
		--min-free=52428800 --content-filter --virus-filter \
		--dmasquerade --infifo=infifo \
		--dkverify=${ver_opt} \
		--dksign=${sign_opt} --private_key=${qsysconfdir}/control/domainkeys/%/$dkimkeyfn \
		$extra_opt
done

# queue parameters in control/defaultqueue for qmail-inject, sendmail
extra_opt=""
if [ $have_clamav -eq 1 ] ; then
	extra_opt="--qhpsi=\"$qhpsi\""
fi
eval ${prefix}/sbin/svctool --queueParam=defaultqueue \
	--qbase=${qbase} --qcount=${qcount} --qstart=1 \
	--min-free=52428800 --virus-filter \
	--dkverify="none" --dksign=$sign_opt \
	--private_key=${qsysconfdir}/control/domainkeys/%/$dkimkeyfn \
	$extra_opt

# slowq service
eval ${prefix}/sbin/svctool --slowq --servicedir=${servicedir} --qbase=${qbase} \
	--cntrldir=control --todo-proc --persistdb --starttls \
    --dmemory=${send_soft_mem} --min-free=52428800 --dkverify=${ver_opt} \
	--dksign=${sign_opt} --private_key=${qsysconfdir}/control/domainkeys/%/${dkimkeyfn} \
	--remote-authsmtp=login --localfilter --remotefilter \
	--deliverylimit-count="-1" --deliverylimit-size="-1" --utf8

#odmr
${prefix}/sbin/svctool --smtp=366 --odmr --servicedir=${servicedir} \
	--infifo="" --query-cache --password-cache --skipsend --memory=$smtp_soft_mem

# Greylist daemon
${prefix}/sbin/svctool --greylist=1999 --servicedir=${servicedir} --min-resend-min=2 \
	--resend-win-hr=24 --timeout-days=30 --context-file=greylist.context \
	--hash-size=65535 --save-interval=5 --whitelist=greylist.white

if [ ${notlsarr} -eq 0 ] ; then
	# qmail-daned tlsa daemon
	${prefix}/sbin/qmail-daned > /dev/null 2>&1 || \
	(test $? -ne 100 && ${prefix}/sbin/svctool \
		--tlsa=1998 --servicedir=${servicedir} \
		--timeout-days=30 --context-file=tlsa.context \
		--hash-size=65535 --save-interval=5 --whitelist=tlsa.white ) || \
	echo "Not enabling qmail-daned service" 1>&2
fi

# qmail-qmtpd service
${prefix}/sbin/svctool --qmtp=209 --servicedir=${servicedir} --qbase=${qbase} \
	--qcount=${qcount} --qstart=1 --cntrldir=control --localip=0 \
	--maxdaemons=75 --maxperip=25 \
	--memory=$qmtp_soft_mem --min-free=52428800

# qmail-qmqpd service
${prefix}/sbin/svctool --qmqp=628 --servicedir=${servicedir} --qbase=${qbase} \
	--qcount=${qcount} --qstart=1 --cntrldir=control --localip=0 \
	--maxdaemons=75 --maxperip=25 \
	--memory=$qmqp_soft_mem --min-free=52428800
/bin/touch ${servicedir}/qmail-qmqpd.628/down

# virus/spam filtering
${prefix}/sbin/svctool --qscanq --servicedir=${servicedir} --scanint=200
if [ $have_clamav -eq 1 ] ; then
	${prefix}/sbin/svctool --config=clamd
	${prefix}/sbin/svctool --config=foxhole
	# create clamd, freshclam service
	${prefix}/sbin/svctool --clamd --servicedir=${servicedir} --clamdPrefix=$clamdPrefix \
		--sysconfdir=$mysysconfdir
	if [ $have_clamav -eq 1 ] ; then
		echo "Checking if clamd/freshclam is running"
		count=`ps -e|grep clamd|wc -l`
		if [ $count -gt 0 ] ; then
			echo "Disabling clamd service"
			$TOUCH ${servicedir}/clamd/down
		fi
		count=`ps -e|grep freshclam|wc -l`
		if [ $count -gt 0 ] ; then
			echo "Disabling freshclam service"
			$TOUCH ${servicedir}/freshclam/down
		fi
	fi
fi

# udplogger service
${prefix}/sbin/svctool --udplogger=3000 --localip=0 --timeout=10 --servicedir=${servicedir}

/bin/cat <<EOFUU > ${qsysconfdir}/control/signatures
# Windows executables seen in active virii
TVqQAAMAA
TVpQAAIAA
# Additional windows executable signatures not yet seen in virii
TVpAALQAc
TVpyAXkAX
TVrmAU4AA
TVrhARwAk
TVoFAQUAA
TVoAAAQAA
TVoIARMAA
TVouARsAA
TVrQAT8AA
# .ZIPfile signature seen in SoBig.E and mydoom:
#UEsDBBQAA
#UEsDBAoAAA
# .GIF file found in a previous Microsoft virus making the rounds.
R0lGODlhaAA7APcAAP///+rp6puSp6GZrDUjUUc6Zn53mFJMdbGvvVtXh2xre8bF1x8cU4yLprOy
EOFUU
/bin/chown qscand:qscand ${qsysconfdir}/control/signatures

if [ -x ${sysconfdir}/init.d/apparmor ] ; then
if [ $have_clamav -eq 1 ] ; then
	if [ -d ${sysconfdir}/apparmor.d/local ] ; then
		reload=0
		if [ ! -f ${sysconfdir}/apparmor.d/local/usr.sbin.clamd ] ; then
		(
		echo "# Site-specific additions and overrides for usr.sbin.clamd."
		echo "# For more details, please see ${sysconfdir}/apparmor.d/local/README."
		echo "capability setuid,"
		echo "capability setgid,"
		echo "${shareddir}/clamd/ r,"
		echo "${shareddir}/clamd/** krw,"
		reload=1
		) > ${sysconfdir}/apparmor.d/local/usr.sbin.clamd
		fi
		if [ ! -f ${sysconfdir}/apparmor.d/local/usr.sbin.freshclam ] ; then
		(
		echo "# Site-specific additions and overrides for usr.bin.freshclam."
		echo "# For more details, please see ${sysconfdir}/apparmor.d/local/README."
		echo "${shareddir}/share/clamd/ r,"
		echo "${shareddir}/share/clamd/** krw,"
		reload=1
		) > ${sysconfdir}/apparmor.d/local/usr.bin.freshclam
		fi
		if [ $reload -ne 0 ] ; then
			echo "Reloading apparmor profiles..."
			/usr/sbin/service apparmor reload || true
		fi
	fi
fi
fi

# rebuild cdb
for i in smtp qmtp qmqp
do
	for j in `/bin/ls ${qsysconfdir}/tcp/tcp.$i 2>/dev/null`
	do
		t1=`date +'%s' -r $j`
		if [ -f $j.cdb ] ; then
			t2=`date +'%s' -r $j.cdb`
		else
			t2=0
		fi
		if [ $t1 -gt $t2 ] ; then
			echo "Creating CDB $j.cdb"
			${prefix}/bin/tcprules $j.cdb $j.tmp < $j && /bin/chmod 664 $j.cdb \
				&& /bin/chown indimail:indimail $j.cdb
		fi
	done
done

# turn off automatic refresh for services during first time installation
svc_list=""
for i in clamd greylist.1999 qmail-qmqpd.628 \
	qmail-qmtpd.209 qmail-smtpd.25 qmail-smtpd.366 \
	qmail-smtpd.465 qmail-smtpd.587 qscanq udplogger.3000 \
	qmail-daned.1998 qmail-send.25 slowq-send qmail-logfifo \
	resolvconf
do
	if [ -d ${servicedir}/$i ] ; then
		svc_list="$svc_list ${servicedir}/$i"
		# save variables
		${prefix}/sbin/svctool --servicedir=${servicedir} --service-name=$i \
			--export-variables=${servicedir}/$i/variables/.variables  --force
	fi
done
svc_list="$svc_list ${qsysconfdir}/control/defaultqueue"
${prefix}/sbin/svctool --servicedir=${servicedir} --autorefresh="0 $svc_list"

echo "compressing man pages"
find ${mandir} -type f -exec gzip -q {} \;
if [ -f ${mandir}/man7/authlib.7.gz ] ; then
	for i in authshadow.7 authpwd.7 authpam.7 authcustom.7
	do
		${rm} -f ${mandir}/man7/$i
		ln -sf ${mandir}/man7/authlib.7.gz ${mandir}/man7/$i.gz
	done
fi

#
if [ /usr/lib/sm.bin/sendmail ] ; then
	echo "removing sendmail as alternative"
	if [ -x /usr/sbin/update-alternatives ] ; then
	/usr/sbin/update-alternatives --remove-all sendmail-mta || true
	/usr/sbin/update-alternatives --remove-all sendmail-msp || true
	elif [ -x /usr/bin/update-alternatives ] ; then
	/usr/bin/update-alternatives --remove-all sendmail-mta || true
	/usr/bin/update-alternatives --remove-all sendmail-msp || true
	fi
fi
${prefix}/sbin/svctool --disable-service sendmail exim4 postfix
echo "adding indimail-mta as an alternative"
${prefix}/sbin/svctool --config=add-alt

if [ -x ${libexecdir}/instcheck.indimail-mta ] ; then
	echo "Checking Installed Permissions"
	${libexecdir}/instcheck.indimail-mta > /dev/null 2>&1
fi

) >> /var/log/indimail-mta-setup.log 2>&1

if [ -f ${sysconfdir}/init/svscan.conf -o -f ${sysconfdir}/event.d/svscan ] ; then
	echo "1. Execute /sbin/initctl emit qmailstart to start services"
	count=1
elif [ -f ${sysconfdir}/systemd/system/multi-user.target.wants/svscan.service ] ; then
	echo "1. Execute /bin/systemctl start svscan to start services"
	count=1
else
	if [ -x ${prefix}/sbin/initsvc ] ; then
	echo "1. Execute ${prefix}/sbin/initsvc -on"
	else
	echo "1. Execute ${sysconfdir}/init.d/svscan start"
	fi
	echo "2. Execute /sbin/init q to start services"
	count=2
fi
default_domain=$(echo $([ -n "$HOSTNAME" ] && echo "$HOSTNAME" || uname -n) | sed 's/^\([^\.]*\)\.\([^\.]*\)\./\2\./')
echo "   You can also use the 'service' command to start indimail-mta"
echo "   sudo service svscan start"
count=`expr $count + 1`
echo "$count. Change your default domain in ${qsysconfdir}/control/defaultdomain"
count=`expr $count + 1`
echo "$count. You can optionally run the following command to verify installation"
echo "   sudo ${prefix}/sbin/svctool --check-install --servicedir=${servicedir} \\"
echo "       --qbase=${qbase} --qcount=${qcount} --qstart=1"
if [ ! -f ${qsysconfdir}/certs/servercert.pem ] ; then
count=`expr $count + 1`
echo "$count. You need to create CERTS for SSL/TLS/STARTTLS"
echo "   Execute the following command to create the certificate"
echo "   ${prefix}/sbin/svctool --config=cert --postmaster=postmaster@${default_domain} --common_name=${default_domain}"
fi
echo
echo "Look at /var/log/indimail-mta-setup.log for the installation log"

exit 0
