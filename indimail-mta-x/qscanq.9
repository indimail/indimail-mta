.\" vim: tw=75
.TH qscanq 8
.SH NAME
qscanq \- qmail virus scanner
.SH SYNOPSIS
.B qscanq
[
.I prog
.I arg1
.I arg2
.IR arg3 ...
]

.SH DESCRIPTION
\fBqscanq\fR(8) allows indimail to initiate a scan on an incoming mail. It
gets invoked by indimail programs using qmail-queue frontend when the
\fBQMAILQUEUE\fR environment is set to \fBqscanq\fR or when passed as a
command line argument having \fBqscanq\fR like below (which will have the
message pass through \fBqmail-dkim\fR and \fBqmail-qfilter\fR).

.EX
QMAILQUEUE="@prefix@/sbin/qmail-dkim @prefix@/sbin/qscanq"
.EE

\fBqscanq\fR(8) initiates a scan on an incoming email, and returns the exit
status of the scanner or of \fBqmail-queue\fR to the caller.

\fBqscanq\fR needs no arguments. It may be called with optional arguments,
which will then be treated as a program to be called instead of
\fBqmail-queue\fR. The arguments will be passed on to \fBqscanq-stdin\fR,
which actually calls \fBqmail-queue\fR, if no arguments are given.

\fBqscanq\fR runs setuid to the \fIqscand\fR user. When invoked, it changes
to the spool directory and creates a working directory based on a
timestamp, the PID, and a counter, with the sticky bit set. It then changes
to that directory and invokes \fBqscanq-stdin\fR. The spool directory is
defined during compile time by the file \fBconf-scandir\fR. This can be
overridden at run time by the environment variable \fBSCANDIR\fR.

After \fBqscanq-stdin\fR returns, \fBqscanq\fR unsets the sticky bit on its
working directory, invokes \fBrun-cleanq\fR and then returns the exit
status of \fBqscanq-stdin\fR without waiting for \fBrun-cleanq\fR to
return. \fBqscanq\fR generates no output. The return codes are interpreted
by the caller, which in turn generates any user output.

.SH Environment Variables

\fBqscanq\fR sets no environment variables. It does pass its environment to
\fBqscanq-stdin\fR, which in turn passes them to \fBqmail-queue\fR (or
\fIprog\fR, if supplied instead). This means that any qmail-queue wrapper
called by \fBqscanq\fR must be able to handle its environment safely.

If the DEBUG environment variable is set to any value whatsoever, then
\fBqscanq\fR will print diagnostic messages to stderr whenever an error
occurs. This is for use in debugging a new configuration, and should never
be used to capture "extra log information" during runtime.

The default scanner to be called is set during compilation in conf-scancmd. This can
be overridden at run time by the environment variable SCANCMD. See qscanq-stdin(8)

.SH Return Codes

\fBqscanq\fR can return any code returned by \fBqmail-queue\fR. In
addition, it returns 71 (temporary refusal) if any runtime error occurs.
The caller may also receive exit status 31 from \fBqscanq-stdin\fR, which
is called by \fBqscanq\fR.

.SH NOTES

In a default install, the \fBclamscan\fR configuration file will be found
at @sysconfdir@/clamav.conf. Edit the file and follow the contained
instructions, making sure that the following entries are set in their
appropriate places:

 * LogFile stderr
 * StreamSaveToDisk
 * User Gqscanq
 * Foreground
 * FixStaleSocket

The FixStaleSocket setting is intended to address a problem with
\fBclamdscan\fR :

if the daemon crashes,it can leave a stale communications socket lying
around. When launched, it detects this socket and refuses to start. When
this happens, email will be deferred because scanning will fail; if it is
not corrected in time, messages will start to bounce. The startup script
supplied below also checks for this condition.

Make sure you are running \fBfreshclam\fR in order to get the latest virus
definitions in a timely way.

It is recommended that \fBclamd\fR be run as a \fBsupervise\fR(8) service.
If clamav was installed in the default manner, there should be a
\fIqscand\fR user. You should not proceed until that user exists. Stop
right now and install qscanq, or at least create the necessary users, and
then come back to this step.

That should be it. This daemon will be running as qscand, and will be logging to
@logdir@/clamd.

.SH "SEE ALSO"
cleanq(8),
run-cleanq(8),
qscanq-stdin(8),
qmail-queue(8),
qmail-multi(8),
clamd(8),
clamav.conf(5),
clamdscan(1),
clamscan(1)
