.\" vim: tw=75
.TH qmail-spamfilter 8
.SH NAME
qmail-spamfilter \- spam filter for indimail

.SH SYNOPSIS
\fBqmail-spamfilter\fR [ \fIqqf\fR] \fIarg1\fR] [\fIarg2\fR] ... ]

.SH DESCRIPTION
\fBqmail-spamfilter\fR(1) allows indimail to execute antispam filter. It
gets invoked by indimail programs using qmail-queue frontend when the
\fBQMAILQUEUE\fR environment is set to \fBqmail-spamfilter\fR or when
passed as a command line argument having \fBqmail-spamfilter\fR like below
(which will have the message pass through \fBqmail-dkim\fR and
\fBqmail-spamfilter\fR).

.EX
QMAILQUEUE="@prefix@/sbin/qmail-dkim @prefix@/sbin/qmail-spamfilter"
.EE

\fBqmail-spamfilter\fR also calls \fBqscanq\fR(8) to perform virus scanning
or bad attachment scan by setting \fBVIRUSCHECK\fR environment variable
between 2 and 7.

\fBqmail-spamfilter\fR uses \fBSPAMFILTER\fR environment variable to
execute the actual spam filter. The \fBSPAMFILTER\fR env variable can
contain command line arguments. The spam filter defined by SPAMFILTER
environment variable should read descriptor 0 and write to descriptor 1.

The sequence in which the filter program is run is given below

.TP 5
1. create a pipe and fork
.TP 5
2. dup write end of the pipe to descriptor 1 in the child and exec the
filter program
.TP 5
3. dup read end of the pipe to descriptor 0 in parent and exec
\fBqmail-queue\fR.
.TP 0

This gives the ability for the SPAMFILTER program to read the mail message
from descriptor 0 before passing it to \fBqmail-queue\fR through the pipe.

\fBqmail-spamfilter\fR will attempt to make the descriptor 0 seekable. This
may be necessary for certain filter programs like bogofilter which allocate
memory for the mail message when lseek(2) fails..

\fBqmail-spamfilter\fR by default, interprets the exit status of spam
filter program as below

 Exit Status     Interpretation
 -----------     --------------
 0,1,2           Program ran successfully. Interpretation depends
                 on filter implementation. Mail will be accepted
                 unless REJECTSPAM is set. See description below.
 100             Mail will be bounced
 anything else   Mail will be rejected with a temporary error

A typical application of this would be to run spam filtering software like
spamassasin, bogofilter, etc

When the exit code of the filter program matches the value of
\fBSPAMEXITCODE\fR, the mail is considered to be spam. When the exit code of
the filter program matches the value of \fBHAMEXITCODE\fR, the mail is not
consided to be spam. If the exit code of the filter program matches the
value of \fBUNSUREEXITCODE\fR, the classication of mail as spam or ham
couldn't be determined accurately. All other errors should be consided as
temporary errors except for 100, which should be interpreted as a permanent
error.

If \fBREJECTSPAM\fR is set to 1, the mail will be bounced back to the
sender. mail can be redirected to the recipient specified in the
\fIglobalspamredirect\fR control file. The email id in
\fIglobalspamdirect\fR can be overriden by the environment variable
\fBGLOBALSPAMREDIRECT\fR. If \fBREJECTSPAM\fR is set and
\fIglobalspamdirect\fR control file exists, spam mails will be bounced back
to the sender as wll a copy redirected to the recipient specified in by
\fIglobalspamredirect\fR control file. You may decide not to generate a
bounce to the sender by setting the environment variable \fBREJECTSPAM\fR
to a value greater than 1 (i.e. black hole SPAM mails).

\fBqmail-spamfilter\fR invokes \fBqmail-queue\fR to deposit the mail. This
can be changed by setting environment variable \fBSPAMQUEUE\fR or
\fBQUEUEPROG\fR to the path of any qmail-queue frontend. It can also be
changed by passing the path of any qmail-queue frontend (along with
arguments to the qmail-queue frontend) on the command line. Passing command
line arguments takes precedence over environment variable.

\fBqmail-spamfilter\fR sets an alarm of 86400 seconds to quit if it doesn't
complete. This can be changed by setting \fBDEATH\fR environment variable.
See the man pages for \fBqmail-queue\fR(8) and indimail-mta-internals(7)
for more details.

.SH "EXIT CODES"
\fBqmail-spamfilter\fR does not print diagnostics. It uses the following
exit codes indicating the problem.
.EX
.\" These codes should be taken from qmail.h
It exits 51 if it cannot allocate memory
It exits 55 if it is not able get the free space for the queue filesystem.
It exits 53 if the free space is below MIN_FREE value.
It exits 60 if it cannot create pipes or dup file descriptors.
It exits 61 if cannot change directory to QMAILHOME
It exits 68 if it cannot create temporary files to make the input seekable.
It exits 75 if cannot exec qscanq.
It exits 120 if it is not able to exec \fBqmail-multi\fR.
It exits 123 if \fBqmail-multi\fR crashes.
.EE

.SH "SEE ALSO"
addresses(5),
rfc-822(5),
qmail-send(8),
qmail-inject(8),
qmail-smtpd(8),
sendmail(8),
indimail-control(5),
qmail-header(5),
qmail-queue(8),
qmail-qmqpc(8),
qscanq(8),
cleanq(8),
bogofilter(1),
queue-fix(8),
spawn-filter(8),
indimail-mta-internals(7)

.SH "AUTHORS"

"Manvendra Bhangui" <manvendra@indimail.org>.
