.\" vim: tw=75
.TH condredirect 1
.SH NAME
condredirect \- perhaps redirect mail to another address
.SH SYNOPSIS
in
.BR .qmail :
.B |condredirect
.I newaddress
.I program
[
.I arg ...
]
.SH DESCRIPTION
.B condredirect
feeds each new mail message to
.I program
with the given arguments.
If
.I program
exits 0,
.B condredirect
forwards the mail message to
.IR newaddress ,
and then exits 99,
so further commands in
.B .qmail
are ignored.

If
.I program
exits 111,
.B condredirect
exits 111,
so delivery will be retried later.

If
.I program
exits anything else
(or does not exist),
.B condredirect
exits 0,
so the rest of
.B .qmail
will be processed as usual.

Note that
it is not safe for
.I program
to fork a child that
reads the message in the background.

If running as non-root, \fBcondredirect\fR uses environment set according
to files in $HOME/.defaultqueue directory. You can skip $HOME/.defaultqueue
if \fBSKIP_LOCAL_ENVIRONMENT\fR is set. If \fBQUEUE_BASE\fR environment
variable is not set, it additionally uses environment set according to
files in @controldir@/defaultqueue directory (for any uid).

.B WARNING:
If you create a
.B .qmail
file to enable
.BR condredirect ,
make sure to also add a line specifying delivery to your normal mailbox.

.B condredirect
rewrites the sender using Sender Rewriting Scheme if \fISRS\fB has been configured. See
.B indimail-srs(5)
for information on how to do this.

.SH "SEE ALSO"
ifaddr(1),
iftocc(1),
iftoccfrom(1)
bouncesaying(1),
condtomaildir(1),
dot-qmail(5),
filterto(1),
except(1),
dot-forward(1),
fastforward(1),
forward(1),
printforward(1),
setforward(1),
preline(1),
qmail-command(8),
qnotify(1),
qreceipt(1),
replier(1),
rrforward(1),
indimail-srs(5),
qmail-queue(8)
