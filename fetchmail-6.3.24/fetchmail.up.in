#!/bin/sh
#
# $Log: fetchmail.up.in,v $
# Revision 1.4  2008-06-20 20:50:22+05:30  Cprogrammer
# moved slemsPrivate, fixwvdialconf to sbin
#
# Revision 1.3  2005-06-26 12:56:57+05:30  Cprogrammer
# added comments
#
# Revision 1.2  2004-05-12 23:03:45+05:30  Cprogrammer
# added comments
#
# Revision 1.1  2003-12-13 16:10:54+05:30  Cprogrammer
# Initial revision
#
#
trap "" 1
if [ ! -f /tmp/.dialup ] ; then
	exit 0
fi
if [ -f /sbin/ifconfig ] ; then
	IFCONFIG=/sbin/ifconfig
elif [ -f /usr/sbin/ifconfig ] ; then
	IFCONFIG=/usr/sbin/ifconfig
elif [ -f /usr/bin/ifconfig ] ; then
	IFCONFIG=/usr/bin/ifconfig
fi
#
# Attempt to bring up the PPP interface using wvdial
# If PPP is up, we do not need to do anyting
# If PPP is down, we need to wait till the IP comes
# up. This is done by creating the fifo .wakeup and
# waiting on read on .wakeup to return. The return
# happens when a byte is written to .wakeup by ip-up.local
# .wakeup is deleted after the read
#
$IFCONFIG ppp0 >/dev/null 2>&1
if [ $? -ne 0 ] ; then
	status=0
	MYPID=$$
	(
	@prefix@/sbin/slemsPrivate @prefix@/sbin/fixwvdialconf
	@prefix@/sbin/slemsPrivate /usr/bin/killall -9 wvdial
	@prefix@/sbin/slemsPrivate /usr/bin/wvdial INDI
	if [ $? -ne 0 ] ; then
		kill -9 $MYPID
		exit 1
	fi
	) > /tmp/wvdial.log 2>&1 &
	i=1
	while true
	do
		$IFCONFIG ppp0 >/dev/null 2>&1
		if [ $? -eq 0 ] ; then
			if [ -p /tmp/.wakeup ] ; then # May have been created by ip-up.local
				read < /tmp/.wakeup
				if [ $? -ne 0 ] ; then
					sleep 5
				fi
			else
				/bin/rm -f /tmp/.wakeup
				/usr/bin/mkfifo /tmp/.wakeup
				read < /tmp/.wakeup
			fi
			/bin/rm -f /tmp/.wakeup
			break
		fi
		i=`expr $i + 1`
		sleep 2
		if [ $i -eq 60 ] ; then
			exit 1
		fi
	done
fi
exit 0
