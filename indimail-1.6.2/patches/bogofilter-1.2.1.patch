diff -Naur Bogofilter-1.2.1/bogofilter.cf.example bogofilter-1.2.1/bogofilter.cf.example
--- Bogofilter-1.2.1/bogofilter.cf.example	2009-02-22 02:02:51.000000000 +0530
+++ bogofilter-1.2.1/bogofilter.cf.example	2009-09-07 15:49:34.832203650 +0530
@@ -18,7 +18,7 @@
 #	directory for wordlists
 #
 #bogofilter_dir=~/.bogofilter
-##bogofilter_dir=/var/spool/bogofilter
+##bogofilter_dir=/var/indimail/etc
 
 #### name/location of user config file
 #
@@ -137,6 +137,7 @@
 #	    l - logging tag (from '-l' option)
 #
 #	    o - spam_cutoff, ex. cutoff=%o
+#	    O - ham_cutoff,  ex. ham_cutoff=%O
 #
 #	    p - spamicity value
 #	    d - if ham or unsure, the spamicity
diff -Naur Bogofilter-1.2.1/configure.ac bogofilter-1.2.1/configure.ac
--- Bogofilter-1.2.1/configure.ac	2009-08-01 16:45:14.000000000 +0530
+++ bogofilter-1.2.1/configure.ac	2009-09-07 15:04:53.103938992 +0530
@@ -268,6 +268,14 @@
 AM_CONDITIONAL(ENABLE_STATIC, test x$enable_static = xyes)
 AC_SUBST(EXE_EXT)
 
+###	use option --enable-indimail to compile in the INDIMAIL support
+AC_ARG_ENABLE(indimail,
+	[  --enable-indimail            compile in INDIMAIL protocol support],
+	[with_INDIMAIL=$enableval],
+	[with_INDIMAIL=no])
+test "$with_INDIMAIL" = "yes" && AC_DEFINE(INDIMAIL,1,Define if you want INDIMAIL support compiled in)
+AM_CONDITIONAL(INDIMAIL, test "$with_INDIMAIL" = yes)
+
 dnl Allow the user to specify a header name to use to indicate whether a given
 dnl message is SPAM or not.
 AC_ARG_ENABLE(spam-header-name, 
diff -Naur Bogofilter-1.2.1/config.in bogofilter-1.2.1/config.in
--- Bogofilter-1.2.1/config.in	2009-08-02 00:30:50.000000000 +0530
+++ bogofilter-1.2.1/config.in	2009-09-07 15:08:31.341944707 +0530
@@ -261,6 +261,9 @@
 /* Define as const if the declaration of iconv() needs const. */
 #undef ICONV_CONST
 
+/* Define if you want INDIMAIL support compiled in */
+#undef INDIMAIL
+
 /* Define to 1 if trio is to be included. */
 #undef NEEDTRIO
 
diff -Naur Bogofilter-1.2.1/configure bogofilter-1.2.1/configure
--- Bogofilter-1.2.1/configure	2009-08-02 00:30:49.000000000 +0530
+++ bogofilter-1.2.1/configure	2009-09-07 15:08:16.168196023 +0530
@@ -685,6 +685,8 @@
 DISABLE_UNICODE_FALSE
 DISABLE_UNICODE_TRUE
 USE_UNICODE
+INDIMAIL_FALSE
+INDIMAIL_TRUE
 EXE_EXT
 ENABLE_STATIC_FALSE
 ENABLE_STATIC_TRUE
@@ -798,6 +800,7 @@
 enable_dependency_tracking
 enable_largefile
 enable_static
+enable_indimail
 enable_spam_header_name
 enable_unicode
 with_gnu_ld
@@ -1462,6 +1465,7 @@
   --enable-dependency-tracking   do not reject slow dependency extractors
   --disable-largefile     omit support for large files
   --enable-static         build static versions as well (unsupported).
+  --enable-indimail       compile in INDIMAIL protocol support
   --enable-spam-header-name=name
                           use specified header name instead of "X-Bogosity"
   --disable-unicode       disables Unicode/UTF-8 conversion of character sets
@@ -6919,6 +6923,28 @@
 
 
 
+###	use option --enable-indimail to compile in the INDIMAIL support
+# Check whether --enable-indimail was given.
+if test "${enable_indimail+set}" = set; then
+  enableval=$enable_indimail; with_INDIMAIL=$enableval
+else
+  with_INDIMAIL=no
+fi
+
+test "$with_INDIMAIL" = "yes" &&
+cat >>confdefs.h <<\_ACEOF
+#define INDIMAIL 1
+_ACEOF
+
+ if test "$with_INDIMAIL" = yes; then
+  INDIMAIL_TRUE=
+  INDIMAIL_FALSE='#'
+else
+  INDIMAIL_TRUE='#'
+  INDIMAIL_FALSE=
+fi
+
+
 # Check whether --enable-spam-header-name was given.
 if test "${enable_spam_header_name+set}" = set; then
   enableval=$enable_spam_header_name;
@@ -17330,6 +17356,13 @@
 Usually this means the macro was only invoked conditionally." >&2;}
    { (exit 1); exit 1; }; }
 fi
+if test -z "${INDIMAIL_TRUE}" && test -z "${INDIMAIL_FALSE}"; then
+  { { $as_echo "$as_me:$LINENO: error: conditional \"INDIMAIL\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+$as_echo "$as_me: error: conditional \"INDIMAIL\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
 if test -z "${DISABLE_UNICODE_TRUE}" && test -z "${DISABLE_UNICODE_FALSE}"; then
   { { $as_echo "$as_me:$LINENO: error: conditional \"DISABLE_UNICODE\" was never defined.
 Usually this means the macro was only invoked conditionally." >&5
diff -Naur Bogofilter-1.2.1/Makefile.am bogofilter-1.2.1/Makefile.am
--- Bogofilter-1.2.1/Makefile.am	2009-05-29 02:29:05.000000000 +0530
+++ bogofilter-1.2.1/Makefile.am	2009-09-07 15:06:30.473188237 +0530
@@ -119,6 +119,9 @@
 rsynconly: .rsyncs
 	@( cat $(srcdir)/.rsyncs | sed -e 's}^}rsync -av -e ssh --delete $(PACKAGE)-$(VERSION)/ }; s/\($$\)/ \&/;' ; echo "wait" ) | $(SHELL) -x
 
+install-data-hook:
+	chown root:indimail $(DESTDIR)$(bindir)/bogofilter || true
+	chmod 6511 $(DESTDIR)$(bindir)/bogofilter || true
 dist-hook:
 	cd $(distdir) && find doc gnugetopt gsl '(' -name .svn -o -name CVS ')' -type d -prune -exec rm -rf '{}' +
 	cd $(distdir) && find doc gnugetopt gsl -name '.#*' -type f -exec rm '{}' ';'
diff -Naur Bogofilter-1.2.1/src/bogofilter.c bogofilter-1.2.1/src/bogofilter.c
--- Bogofilter-1.2.1/src/bogofilter.c	2009-02-12 06:42:54.000000000 +0530
+++ bogofilter-1.2.1/src/bogofilter.c	2009-09-07 14:53:43.169188314 +0530
@@ -39,6 +39,11 @@
 #include "register.h"
 #include "rstats.h"
 #include "score.h"
+#ifdef INDIMAIL
+#include <unistd.h>
+#include <errno.h>
+#include "format.h"
+#endif
 
 /*
 **	case B_NORMAL:		
@@ -67,6 +72,63 @@
     msg_print_stats(fp);
 }
 
+#ifdef INDIMAIL
+#if 0
+extern float    unknown_count, total_count;
+#endif
+extern char     msg_bogofilter[];
+extern char     msg_register[];
+
+void            write_fifolog(rc_t);
+
+void
+write_fifolog(rc_t status)
+{
+	char           *fifo_name;
+	FILE           *logfp;
+	pid_t           pid;
+	int             logfifo;
+
+	fifo_name = getenv("LOGFILTER");
+	if (!fifo_name || !*fifo_name)
+		return;
+	if (*fifo_name != '/')
+		return;
+	format_log_header(msg_bogofilter, 256);
+#if 0
+	sprintf(msg_bogofilter + strlen(msg_bogofilter), ", ratio %0.2f", unknown_count / total_count);
+#endif
+	write(255, msg_bogofilter, strlen(msg_bogofilter));
+	if (logflag)
+		return;
+	if ((logfifo = open(fifo_name, O_NDELAY | O_WRONLY)) == -1)
+		return;
+	if (!(logfp = fdopen(logfifo, "w")))
+		return;
+	pid = getpid();
+	format_log_header(msg_bogofilter, 256);
+	switch (run_type)
+	{
+	case RUN_NORMAL:
+		fprintf(logfp, "bogofilter: pid %d, %s\n", pid, msg_bogofilter);
+		break;
+	case RUN_UPDATE:
+		if (status == RC_UNSURE || msg_register[0] == '\0')
+			fprintf(logfp, "bogofilter: pid %d, %s\n", pid, msg_bogofilter);
+		else
+		{
+			fprintf(logfp, "bogofilter: pid %d, %s, %s\n", pid, msg_bogofilter, msg_register);
+			msg_register[0] = '\0';
+		}
+		break;
+	default:
+		fprintf(logfp, "bogofilter: pid %d, %s\n", pid, msg_register);
+		msg_register[0] = '\0';
+	}
+	fclose(logfp);
+}
+#endif
+
 rc_t bogofilter(int argc, char **argv)
 {
     uint msgcount = 0;
@@ -161,6 +223,9 @@
 
     if (logflag && register_opt)
 	write_log_message(status);
+#ifdef INDIMAIL
+	write_fifolog(status);
+#endif
 
     wordhash_free(words);
 
diff -Naur Bogofilter-1.2.1/src/format.c bogofilter-1.2.1/src/format.c
--- Bogofilter-1.2.1/src/format.c	2009-02-23 01:43:09.000000000 +0530
+++ bogofilter-1.2.1/src/format.c	2009-09-07 14:55:29.523188045 +0530
@@ -375,6 +375,11 @@
 	    case 'o':		/* o - spam_cutoff, ex. cutoff=%c */
 		buff += format_float(buff, spam_cutoff, min, prec, flags, end);
 		break;
+#ifdef INDIMAIL
+	    case 'O':		/* o - ham_cutoff, ex. cutoff=%O */
+		buff += format_float(buff, ham_cutoff, min, prec, flags, end);
+		break;
+#endif
 	    case 'r':		/* r - run type (s, n, S, or N) - two parts (reg/unreg)*/
 		snprintf( temp, sizeof(temp), "%s%s", reg, unreg );
 		buff += format_string(buff, temp, 0, 0, 0, end);
diff -Naur Bogofilter-1.2.1/src/Makefile.am bogofilter-1.2.1/src/Makefile.am
--- Bogofilter-1.2.1/src/Makefile.am	2009-05-29 02:29:05.000000000 +0530
+++ bogofilter-1.2.1/src/Makefile.am	2009-09-07 15:47:44.504224939 +0530
@@ -31,7 +31,7 @@
 # what to build
 bin_PROGRAMS = bogofilter bogoutil bogolexer bogotune
 bin_SCRIPTS = bogoupgrade
-dist_bin_SCRIPTS = bf_copy bf_compact bf_tar
+dist_sbin_SCRIPTS = bf_copy bf_compact bf_tar
 if ENABLE_STATIC
 bin_PROGRAMS += bogofilter_static bogoutil_static bogolexer_static bogotune_static
 endif
diff -Naur Bogofilter-1.2.1/src/Makefile.in bogofilter-1.2.1/src/Makefile.in
--- Bogofilter-1.2.1/src/Makefile.in	2009-08-02 00:30:51.000000000 +0530
+++ bogofilter-1.2.1/src/Makefile.in	2009-09-07 15:48:12.795937878 +0530
@@ -492,7 +492,7 @@
 AM_CFLAGS = -DBOGOFILTER $(am__append_1)
 BUILT_SOURCES = version.c directories.c $(am__append_4)
 bin_SCRIPTS = bogoupgrade
-dist_bin_SCRIPTS = bf_copy bf_compact bf_tar
+dist_sbin_SCRIPTS = bf_copy bf_compact bf_tar
 TESTS = $(am__append_7)
 
 # this must be last so any library we may have added has access to the
diff -Naur Bogofilter-1.2.1/src/passthrough.c bogofilter-1.2.1/src/passthrough.c
--- Bogofilter-1.2.1/src/passthrough.c	2009-05-21 09:09:51.000000000 +0530
+++ bogofilter-1.2.1/src/passthrough.c	2009-09-07 15:01:12.921938800 +0530
@@ -29,8 +29,13 @@
 
 static const char *eol;
 char msg_register[256];
-static char msg_bogofilter[256];
-static char msg_spam_header[256];
+#ifdef INDIMAIL
+char            msg_bogofilter[256];
+char            msg_spam_header[256];
+#else
+static char     msg_bogofilter[256];
+static char     msg_spam_header[256];
+#endif
 size_t msg_register_size = sizeof(msg_register);
 
 /* Function Definitions */
@@ -130,7 +135,16 @@
     /* print spam-status at the end of the header
      * then mark the beginning of the message body */
     if (passthrough || verbose || terse)
-	fprintf(fpo, "%s%s", msg_spam_header, eol);
+	{
+#ifdef INDIMAIL
+		if (*msg_register)
+			fprintf(fpo, "%s, %s%s", msg_spam_header, msg_register, eol);
+		else
+			fprintf(fpo, "%s%s", msg_spam_header, eol);
+#else
+		fprintf(fpo, "%s%s", msg_spam_header, eol);
+#endif
+	}
 
     if (passthrough || verbose || Rtable) {
 	verbose += passthrough;
@@ -142,7 +156,11 @@
 static bool write_header(rc_t status, readfunc_t rf, void *rfarg)
 {
     ssize_t rd;
-    char   *out;
+#ifdef INDIMAIL
+	char           *out, *ptr;
+#else
+	char           *out;
+#endif
 
     bool hadlf = true;
     bool seen_subj = false;
@@ -200,10 +218,23 @@
 
 	    if (tag != NULL && strncasecmp(out, subjstr, subjlen) == 0) {
 		seen_subj = true;
+#ifdef INDIMAIL
+		for (ptr = out + subjlen; *ptr && isspace((int) *ptr); ptr++);
+		if (strstr(ptr, tag))
+			(void) fwrite(out, 1, rd, fpo);	/*- do not tag twice */
+		else		 /*- adding tag will break DomainKeys */
+		{
+			(void) fprintf(fpo, "%.*s %s", subjlen, out, tag);
+			if (out[subjlen] != ' ')
+				fputc(' ', fpo);
+			(void) fwrite(out + subjlen, 1, rd - subjlen, fpo);
+		}
+#else
 		(void) fprintf(fpo, "%.*s %s", subjlen, out, tag);
 		if (out[subjlen] != ' ')
-		    fputc(' ', fpo);
+			fputc(' ', fpo);
 		(void) fwrite(out + subjlen, 1, rd - subjlen, fpo);
+#endif
 		continue;
 	    }
 	}
