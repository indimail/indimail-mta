#!/bin/sh
# postrm script for indimail
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


prefix=@indimaildir@
sysconfdir=/etc
servicedir=/service
logdir=@logdir@
rm=/bin/rm
rmdir=/bin/rmdir
####################################
noproxy=0
nocourierimap=0
noclamav=1
nofetchmail=0
nobogofilter=0
nonssd=0
default_domain=@defaultdomain@

ID=`id -u`
if [ $ID -ne 0 ] ; then
	echo "You are not root" >&2
	exit 1
fi

case "$1" in
    purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

# we are doing upgrade or removal
if [ " $1" = " upgrade" ] ; then
	echo "recreating ld.so cache"
	/sbin/ldconfig
	exit 0
fi

case "$1" in
    failed-upgrade|abort-install|abort-upgrade|disappear)
	exit 0
    ;;
esac
#
# Debian silliness
#
if [ " $1" = " purge" ] ; then
	nscd_up=`ps -ef |grep nscd |grep -v grep|wc -l`
	if [ $nscd_up -ge 1 ] ; then
		if [ -x ${sysconfdir}/init.d/nscd ] ; then
			${sysconfdir}/init.d/nscd stop
		fi
	fi

	for i in alias qmaild qmaill qmailp qmailq qmailr qmails qscand indimail
	do
		echo "removing user $i"
		/usr/bin/getent passwd $i > /dev/null && /usr/sbin/userdel $i >/dev/null || true
	done
	for i in nofiles qmail qscand indimail
	do
		echo "removing group $i"
		/usr/bin/getent group $i > /dev/null && /usr/sbin/groupdel $i  >/dev/null || true
	done
	if [ $nscd_up -ge 1 ] ; then
		if [ -x ${sysconfdir}/init.d/nscd ] ; then
			${sysconfdir}/init.d/nscd start
		fi
	fi

	echo "removing database and configuration"
	for i in mysqldb control domains users alias
	do
		${rm} -rf ${prefix}/$i || true
	done
	if [ -f /etc/mysql/indimail.cnf ] ; then
		${rm} -f /etc/mysql/indimail.cnf
	fi
	if [ -d ${prefix}/control/domainkeys ] ; then
		${rmdir} --ignore-fail-on-non-empty ${prefix}/control/domainkeys 2>/dev/null
	fi
	if [ -d ${prefix}/control ] ; then
		${rmdir} --ignore-fail-on-non-empty ${prefix}/control 2>/dev/null
	fi
	for i in .qmail-nonspam .qmail-register-nonspam .qmail-register-spam .qmail-spam .qmail-default
	do
		${rm} -f ${prefix}/domains/${default_domain}/$i
	done
	if [ -d ${prefix}/${default_domain} ] ; then
		${rmdir} --ignore-fail-on-non-empty ${prefix}/domains/${default_domain} 2>/dev/null
	fi
	echo "removing aliases postmaster, mailer-daemon, root"
	for i in postmaster mailer-daemon root
	do
		${rm} -f ${prefix}/alias/.qmail-"$i"
	done
	if [ -d ${prefix}/alias ] ; then
		${rmdir} --ignore-fail-on-non-empty ${prefix}/alias 2>/dev/null
	fi
	${rm} -f ${prefix}/share/imapd.pem
	${rm} -f ${prefix}/share/pop3d.pem

	if [ ${prefix} != "/usr" ] ; then
		echo "removing binaries, libraries, queues"
		for i in bin sbin queue
		do
			${rm} -rf ${prefix}/$i || true
		done
		echo "removing man pages"
		for i in ${prefix}/man/man1 ${prefix}/man/cat1 ${prefix}/man/man5 \
			${prefix}/man/cat5 ${prefix}/man/man7 ${prefix}/man/cat7 \
			${prefix}/man/man8 ${prefix}/man/cat8 ${prefix}/man/man3
		do
			${rm} -rf $i || true
		done
		if [ -d ${prefix}/man ] ; then
			/bin/rmdir --ignore-fail-on-non-empty ${prefix}/man 2>/dev/null
		fi
		for i in `/bin/ls ${prefix}/share 2>/dev/null`
		do
			if [ " $i" = " clamd" ] ; then # leave the signatures
				continue;
			fi
			${rm} -rf ${prefix}/share/$i || true
		done
		if [ -d ${prefix}/share ] ; then
			${rmdir} --ignore-fail-on-non-empty ${prefix}/share 2>/dev/null
		fi
	fi

	if [ $nobogofilter -eq 0 ] ; then
		${rm} -f ${prefix}/etc/bogofilter.cf ${prefix}/etc/bogofilter.cf.example
	fi

	if [ $noclamav -eq 0 ] ; then
		${rm} -f ${prefix}/etc/clamd.conf ${prefix}/etc/freshclam.conf
		${rm} -f ${prefix}/etc/clamd.conf.sample ${prefix}/etc/freshclam.conf.sample
	fi
	if [ $nonssd -eq 0 ] ; then
		${rm} -f ${prefix}/etc/nssd.conf
	fi
	if [ $nofetchmail -eq 0 ] ; then
		${rm} -f ${prefix}/etc/fetchmailrc
	fi

	echo "removing tcp configuration"
	for i in imap pop3 smtp qmtp qmqp poppass
	do
		${rm} -f ${prefix}/etc/tcp.$i.cdb ${prefix}/etc/tcp.$i
	done
	${rm} -f ${prefix}/control/controlfiles
	for i in indimail.cnf stat.override backup.conf cronlist headerlist \
		imapd.cnf imapd.dist imapd-ssl.dist inc_deps indimail.mrtg.cfg \
		procmailrc indimail.settings lib_deps osh.table perm_list pop3d.cnf \
		pop3d.dist pop3d-ssl.dist qmailprog.list quotawarnmsg.example \
		services.log system.flashlogin system.menu system.module system.rc
	do
		${rm} -f ${prefix}/etc/$i
	done
	if [ -d ${prefix}/etc ] ; then
		${rmdir} --ignore-fail-on-non-empty ${prefix}/etc 2>/dev/null
	fi

	echo "removing startup services"
	for i in clamd fetchmail freshclam indisrvr.4000 inlookup.infifo mysql.3306 \
	pwdlookup qmail-imapd.143 qmail-imapd-ssl.993 qmail-pop3d.110 qmail-pop3d-ssl.995 \
	qmail-send.25 qmail-smtpd.25 qmail-smtpd.366 qmail-spamlog qscanq qmail-imapd.4143 \
	qmail-pop3d.4110 qmail-smtpd.465 qmail-smtpd.587 qmail-qmtpd.209 qmail-qmqpd.628 \
	qmail-poppass.106 greylist.1999 .svscan
	do
		if [ -d ${servicedir}/$i ] ; then
			${rm} -rf ${servicedir}/$i >/dev/null 2>&1 || true
		fi
	done
	if [ $noproxy -eq 0 ] ; then
		for i in proxy-imapd.4143 proxy-imapd-ssl.9143 proxy-pop3d.4110 proxy-pop3d-ssl.9110
		do
			if [ -d ${servicedir}/$i ] ; then
				${rm} -rf ${servicedir}/$i >/dev/null 2>&1 || true
			fi
		done
	fi

	echo "removing logs"
	${rm} -f ${prefix}/mysqldb/logs/logisam.log
	${rm} -f ${prefix}/mysqldb/logs/logquery
	${rm} -f ${prefix}/mysqldb/logs/logslow
	count=`/bin/ls ${servicedir} 2>/dev/null| /usr/bin/wc -l`
	if [ $count -eq 0 ] ; then
		${rm} -rf ${servicedir} || true
	fi
	if [ -h ${logdir} ] ; then
		log_dir=`/bin/ls -ld ${logdir} | /usr/bin/awk '{print $10}'`
	else
		log_dir=${logdir}
	fi
	[ "$log_dir" != "/" ] && ${rm} -fr $log_dir
else
	echo "recreating ld.so cache"
	/sbin/ldconfig
	if [ -f ${prefix}/boot/rpm.init ] ; then
		echo "Running Custom Un-Installation Script for postun"
		/bin/sh ${prefix}/boot/rpm.init postun
	fi
fi
exit 0
