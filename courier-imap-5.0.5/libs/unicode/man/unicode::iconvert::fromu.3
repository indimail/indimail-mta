'\" t
.\"     Title: unicode::iconvert::fromu
.\"    Author: Sam Varshavchik
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 03/11/2017
.\"    Manual: Courier Unicode Library
.\"    Source: Courier Unicode Library
.\"  Language: English
.\"
.TH "UNICODE::ICONVERT::F" "3" "03/11/2017" "Courier Unicode Library" "Courier Unicode Library"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
unicode::iconvert::fromu \- template for converting text sequence from unicode
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <courier\-unicode\&.h>
.fi
.ft
.HP \w'output_iter_t\ unicode::iconvert::fromu::convert('u
.BI "output_iter_t unicode::iconvert::fromu::convert(input_iter_t\ " "beg_iter" ", input_iter_t\ " "end_iter" ", const\ std::string\ &" "charset" ", output_iter_t\ " "output_iter" ", bool\ &" "errflag" ");"
.HP \w'void\ unicode::iconvert::fromu::convert('u
.BI "void unicode::iconvert::fromu::convert(input_iter_t\ " "beg_iter" ", input_iter_t\ " "end_iter" ", const\ std::string\ &" "charset" ", std::string\ &" "out_buf" ", bool\ &" "errflag" ");"
.HP \w'std::pair<std::string,\ bool>\ unicode::iconvert::fromu::convert('u
.BI "std::pair<std::string, bool> unicode::iconvert::fromu::convert(const\ std::u32string\ &" "text" ", const\ std::string\ &" "charset" ");"
.SH "DESCRIPTION"
.PP
These template functions convert unicode characters to text in the given character set\&.
\fIbeg_iter\fR
and
\fIend_iter\fR
define an input sequence of
char32_ts\&. They get converted to unicode characters\&.
\fIoutput_iter\fR
is an output iterator that
\fBconvert\fR() iterates over
chars in the specified character set\&.
\fBconvert\fR() returns the value of the output iterator after iterating over the converted character sequence\&.
\fIerr_flag\fR
gets set to
true
if unicode text could not be converted to the requested character set, or
false
for a successful conversion\&.
.PP
An overloaded
\fBconvert\fR() puts the text string into a
std::string, instead of using an output iterator\&. Finally, a single
std::u32string
specifies the character string, instead of a beginning and an ending iterator\&.
.SH "SEE ALSO"
.PP
\fBcourier-unicode\fR(7),
\fBunicode::convert::convert\fR(3),
\fBunicode_convert\fR(3),
\m[blue]\fB\fBiconv\fR(3)\fR\m[]\&\s-2\u[1]\d\s+2\&.
.SH "AUTHOR"
.PP
\fBSam Varshavchik\fR
.RS 4
Author
.RE
.SH "NOTES"
.IP " 1." 4

	      \fBiconv\fR(3)
.RS 4
\%http://manpages.courier-mta.org/htmlman3/iconv.3.html
.RE
