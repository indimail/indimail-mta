.TH qmail-dkim 8
.SH NAME
qmail-dkim \- sign/verify using DKIM (SSP/ADSP optionally) and queue a mail message for delivery
.SH SYNOPSIS
.B qmail-dkim
.SH DESCRIPTION
.B qmail-dkim
has the same interface as
.B qmail-queue
except that it inserts an appropriate DKIM header (rfc4871) before it
queues the message.  To invoke
.BR qmail-dkim ,
set QMAILQUEUE to point to qmail-dkim in the environment when
you send or receive email. qmail-dkim will call
.BR qmail-multi .
To invoke an executable other than
.B qmail-multi
set DKIMQUEUE=bin/qmail-queue for example.

.B qmail-dkim
supports DKIM signing and verification and can optionally use
.B Sender Signing Practice (SSP)
or
.B Author Domain Signing Practice.
It uses the libdkim and OpenSSL libraries.  To sign a message, set the
.B DKIMSIGN
environment variable to the pathname of the private key that will be
used to sign the message. If there is a % character in the environment
variable, it is removed and replaced by the domain name in the From: header.
If, after substituting the %, that file does not exist, the % character will be
removed. If a private key file does not exist and does not have a % character,
the message will be rejected with error 35. The selector (s=) will be taken from
the basename of the file. The private key should be created by 
.BR dknewkey(8) .

In the absense of DKSIGN and DKVERIFY environment variable, qmail-dkim will sign the
message if RELAYCLIENT or AUTHINFO environment variable is set. It will verify the message
if RELAYCLIENT or AUTHINFO environment variable is not set. Even if DKVERIFY is set, you can disable dkim
verification, if RELAYCLIENT or AUTHINFO is set, by setting RELAYCLIENT_NODKVERIFY environment variable.

You can set various DKIM options in getopt style, by setting the environment variable
.B DKIMSIGNOPTIONS

 b <standard>         1 - allman, 2 - ietf or 3 - both
 c <canonicalization> r for relaxed [DEFAULT], s - simple,
                      t relaxed/simple, u - simple/relaxed
 l                    include body length tag
 q                    include query method tag;
 t                    include a timestamp tag
 h                    include copied headers
 i <identity>         the identity, if not provided it will not be included
 x <expire_time>      the expire time in seconds since epoch
                      ( DEFAULT = current time + 604800)
                      if set to - then it will not be included
 z <hash>             1 for sha1, 2 for sha256, 3 for both

.EX
 DKIMSIGNOPTIONS="-b 1 -c r -q"
 sets allman standard, with relaxed canonicalization and include query method tag
.EE

Apart from setting
.BR DKIMSIGNOPTIONS ,
you can set the identity and the expire time by setting
.B DKIMIDENTITY
and
.B DKIMEXPIRE
respectively.
.B DKIMIDENTITY
takes precedence over -i option specified in
.BR DKIMSIGNOPTIONS.
Similarly,
.B DKIMEXPIRE
takes precedence over -x option specifed in
.BR DKIMSIGNOPTIONS.
.B qmail-dkim
uses the domain found in the Return-Path, Sender, From headers to set the domain tag.
If not it uses the \fBDKIMDOMAIN\fR environment variable. \fBDKIMDOMAIN\fR
can be set to an email address or a domain (without the at sign).

To verify a message, set the
.B DKIMVERIFY
environment variable to a desired set of letters.  Precisely, if you
want a libdkim return status to generate an error, include that
letter, where A is the first return status (DKIM_SUCCESS), B is the
second (DKIM_FINISHED_BODY), etc.  The letter should be uppercase if you
want a permanent error to be returned, and lowercase if you want a temporary
error to be returned (exit code 88). If you omit the letter, qmail-dkim will
not issue any error inspite of DKIM verification failure. It will return
success and the email will get delivered.

The complete set of letters with the corresponding return status is given below

 A - DKIM_SUCCESS                        - Function executed successfully
 B - DKIM_FINISHED_BODY                  - process result: no more message
                                           body is needed
 C - DKIM_PARTIAL_SUCCESS                - verify result: at least one
                                           but not all signatures verified
 D - DKIM_NEUTRAL                        - verify result: no signatures
                                           verified but message is
                                           not suspicious
 E - DKIM_SUCCESS_BUT_EXTRA              - signature result: signature
                                           verified but it did not
                                           include all of the body
 F - DKIM_3PS_SIGNATURE                  - 3rd-party signature
 G - DKIM_FAIL                           - Function failed to execute
 H - DKIM_BAD_SYNTAX                     - signature error: DKIM-Signature
                                           could not parse or has bad
                                           tags/values
 I - DKIM_SIGNATURE_BAD                  - signature error: RSA verify
                                           failed
 J - DKIM_SIGNATURE_BAD_BUT_TESTING      - signature error: RSA verify
                                           failed but testing
 K - DKIM_SIGNATURE_EXPIRED              - signature error: x= is old
 L - DKIM_SELECTOR_INVALID               - signature error: selector doesn't
                                           parse or contains invalid values
 M - DKIM_SELECTOR_GRANULARITY_MISMATCH  - signature error: selector
                                           g= doesn't match i=
 N - DKIM_SELECTOR_KEY_REVOKED           - signature error: selector
                                           p= empty
 O - DKIM_SELECTOR_DOMAIN_NAME_TOO_LONG  - signature error: selector domain
                                           name too long to request
 P - DKIM_SELECTOR_DNS_TEMP_FAILURE      - signature error: temporary dns
                                           failure requesting selector
 Q - DKIM_SELECTOR_DNS_PERM_FAILURE      - signature error: permanent dns
                                           failure requesting selector
 R - DKIM_SELECTOR_PUBLIC_KEY_INVALID    - signature error: selector
                                           p= value invalid or wrong format
 S - DKIM_NO_SIGNATURES                  - no signatures
 T - DKIM_NO_VALID_SIGNATURES            - no valid signatures
 U - DKIM_BODY_HASH_MISMATCH             - sigature verify error: message
                                           body does not hash to bh value
 V - DKIM_SELECTOR_ALGORITHM_MISMATCH    - signature error: selector
                                           h= doesn't match signature a=
 W - DKIM_STAT_INCOMPAT                  - signature error: incompatible v=
 X - DKIM_UNSIGNED_FROM                  - signature error: not all message's
                                           From headers in signature

For example, if you want to permanently reject messages that have a
signature that is expired, include the letter 'K' in the
.B DKIMVERIFY
environment variable.  A conservative set of letters is
.BR FGHIKLMNOQRTUVWjp .
Reject permanently 3PS, FAILURE, SYNTAX, SIGNATURE_BAD, SIGNATURE_EXPIRED, SELECTOR_INVALID,
GRANULARITY_MISMATCH, SELECTOR_KEY_REVOKED, DOMAIN_NAME_TOO_LONG, SELECTOR_PUBLIC_KEY_INVALID,
NO_VALID_SIGNATURES and BODY_HASH_MISMATCH errors, and temporarily SIGNATURE_BAD_BUT_TESTING and DNS_TEMP_FAILURE .
Add in
.B S
if you want to reject messages that do not have a DKIM signature. You can use the control files
signaturedomains and nosignature domains (See Below) to further fine tune the action to be
taken when a mail arrives with no DKIM signature.  Note that
.B qmail-dkim
always inserts the 
.B DKIM-Status
header, so that messages can be
rejected later at delivery time, or in the mail reader. In that case you may set
.B DKIMVERIFY
to an empty string. If you want to check all message's From header in signature set the
\fBUNSIGNED_FROM\fR environment variable to an empty string. If you want to check messages
without signed subject header, set \fBUNSIGNED_SUBJECT\fR environment variable. If you want
to honor body lengh tag (l=), set \fBHONOR_BODYLENGTHTAG\fR environment variable.

qmail-dkim supports signing practice which can be additonall checked when a signature
verifcation fails -

.BR "SSP - Sender Signing Practice"

and

.BR "ADSP - Author Domain Signing Practice" .

When a signature fails to verify for a message, you can use SSP/ADSP to determine if the message is suspicious or not.
To verify a message against SSP/ADSP, set the
.B DKIMPRACTICE
environment variable to the desired set of letters allowed for DKIMVERIFY environment variable.
SSP/ADSP should be used only when signature verification fails. SSP/ADSP should be invoked only when libdkim returns the
error codes (F,G,H,I,J,K,L,M,N,P,Q,R,S,T,U,V,W,X) for signature verification. In case you want to test
against SSP/ADSP only for DKIM_NO_SIGNATURE and DKIM_NO_VALID_SIGNATURE
set the environment variable 
.BR DKIMPRACTICE="ST" .
If you want automatic behaviour, set DKIMPRACTICE to an empty string. In this case ADSP/SSP will be used when return code
matches "FGHIJKLMNPQRSTUVWX".
.B qmail-dkim
uses ADSP as the default signing practice. You can override this by setting the SIGN_PRACTICE to ssp, adsp, local (lowercase).
if you set SIGN_PRACTICE to \fIlocal\fB,
.B qmail-dkim
will check the domain against the control file
.I signaturedomains
(See Below). If the domain is found listed in
.I signaturedomains
.B qmail-dkim
will bypass ADSP/SSP and return DKIM_FAIL if signature fails to verify. Setting SIGN_PRACTICE
to anything else will cause
.B qmail-dkim
to disable Signing Practice.

If ADSP or SSP is checked,
.B qmail-dkim
will insert the
.B X-DKIM-ADSP
or
.B X-DKIM-SSP
header as given below

 A - DKIM_SUCCESS             - Message passes ADSP test
 B - DKIM_ADSP_UNKNOWN        - some messages may be signed
 C - DKIM_ADSP_ALL            - All message are signed with author signature 
 D - DKIM_ADSP_DISCARDABLE    - messages which fail verification are Discardable
 E - DKIM_ADSP_SCOPE          - domain is out of scope
 F - DKIM_ADSP_TEMPFAIL       - Temporary Error 

 or

 A - DKIM_SUCCESS            - Message passes ADSP test
 B - DKIM_SSP_UNKNOWN        - some messages may be signed
 C - DKIM_SSP_ALL            - All message are signed with author signature 
 D - DKIM_SSP_STRICT         - messages which fail verification are Discardable
 E - DKIM_SSP_SCOPE          - domain is out of scope
 F - DKIM_SSP_TEMPFAIL       - Temporary Error 

You can have a control file
.I signaturedomains
containing a list of domains which you know are sure to sign messages using DKIM. If a message comes
from a domain listed in
.IR signaturedomains ,
and the signature fails verification (any of DKIM failure status), 
.B qmail-dkim
will bypass ADSP/SSP checks and return DKIM_FAIL. The name of this control file can be
overriden by the environment variable
.BR SIGNATUREDOMAINS .

You can have a control file
.I nosignaturedomains
containing a list of domains which you know are sure not to sign messages using DKIM.
If a message comes from a domain listed in
.IR nosignaturedomains ,
and does not have a DKIM-Signature header, 
.B qmail-dkim
will bypass ADSP/SSP checks and return DKIM_NEUTRAL. The wildcard entry '*' in this file, will
result in all mails which do not have a signature to pass DKIM test (unless the domain is listed
in the control file
.BR signaturedomains ).
The name of this control file can be overriden by the environment variable
.BR NOSIGNATUREDOMAINS .

Typically, you would sign messages generated on-host by setting
.B DKIMSIGN
in the environment before running an \fBqmail-smtpd\fR(8) or \fBsendmail(1)\fR / \fBqmail-inject\fR(8).  DKIMSIGN will be carried
through qmail-smtpd or through qmail's sendmail emulation through 
.B qmail-inject
to
.BR qmail-dkim .
You would also set it for
.B qmail-smtpd
at the same time
.B RELAYCLIENT
is set, most often in the tcpserver cdb file.  If a host is authorized
to relay, you probably want to sign messages sent by that host.
.B DKIMVERIFY
should be set for all other hosts.

If neither
.B DKIMSIGN
nor
.B DKIMVERIFY
are set, then
.B DKIMSIGN
will be set to @controldir@/domainkeys/%/default. The % will be replaced by the domain in the
From: header. If such a file does not exist, then it will be set to
@controldir@/domainkeys/default. If such a private key exists, it will be used to sign the
domain. You can also set \fBDKIMKEY\fR to chose a key different from
@controldir@/domainkeys/%/default. \fBDKIMKEY\fR can also have % character that will be
replaced by the domain in the From: header. If the private key does not exist, qmail-dkim
will exit with return code 35.

By default
.B qmail-dkim
will use all of the headers when signing a message.

.B qmail-dkim
will ordinarily spawn
.BR qmail-multi ,
but if DKIMQUEUE is set in the environment,
the program that it points to will be executed instead.

.SH "EXIT CODES"
.B qmail-dkim
returns the same exit codes as qmail-queue with these additions:
.TP 5
.B 35
The private key file does not exist.
.TP 5
.B 57
Trouble waiting for qmail-queue to exit.
.TP 5
.B 58
Unable to vfork.
.TP 5
.B 59
Unable to create a pipe to qmail-queue.
.SH "SEE ALSO"
addresses(5),
envelopes(5),
qmail-header(5),
dknewkey(8),
dkim(8),
dktest(8),
qmail-inject(8),
qmail-qmqpc(8),
qmail-queue(8),
qmail-send(8),
qmail-smtpd(8),
qmail-dk(8),
domain-keys(5)

