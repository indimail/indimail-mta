static const uint8_t unicode_rangetab[][2]={
	{0x0000 & 0xFF, 0x0040 & 0xFF},
	{0x0041 & 0xFF, 0x005a & 0xFF},
	{0x005b & 0xFF, 0x0060 & 0xFF},
	{0x0061 & 0xFF, 0x007a & 0xFF},
	{0x007b & 0xFF, 0x00a9 & 0xFF},
	{0x00aa & 0xFF, 0x00aa & 0xFF},
	{0x00ab & 0xFF, 0x00b9 & 0xFF},
	{0x00ba & 0xFF, 0x00ba & 0xFF},
	{0x00bb & 0xFF, 0x00bf & 0xFF},
	{0x00c0 & 0xFF, 0x00d6 & 0xFF},
	{0x00d7 & 0xFF, 0x00d7 & 0xFF},
	{0x00d8 & 0xFF, 0x00f6 & 0xFF},
	{0x00f7 & 0xFF, 0x00f7 & 0xFF},
	{0x00f8 & 0xFF, 0x00ff & 0xFF},
	{0x0100 & 0xFF, 0x01ff & 0xFF},
	{0x0200 & 0xFF, 0x02b8 & 0xFF},
	{0x02b9 & 0xFF, 0x02df & 0xFF},
	{0x02e0 & 0xFF, 0x02e4 & 0xFF},
	{0x02e5 & 0xFF, 0x02e9 & 0xFF},
	{0x02ea & 0xFF, 0x02eb & 0xFF},
	{0x02ec & 0xFF, 0x02ff & 0xFF},
	{0x0300 & 0xFF, 0x036f & 0xFF},
	{0x0370 & 0xFF, 0x0373 & 0xFF},
	{0x0374 & 0xFF, 0x0374 & 0xFF},
	{0x0375 & 0xFF, 0x0377 & 0xFF},
	{0x037a & 0xFF, 0x037d & 0xFF},
	{0x037e & 0xFF, 0x037e & 0xFF},
	{0x037f & 0xFF, 0x037f & 0xFF},
	{0x0384 & 0xFF, 0x0384 & 0xFF},
	{0x0385 & 0xFF, 0x0385 & 0xFF},
	{0x0386 & 0xFF, 0x0386 & 0xFF},
	{0x0387 & 0xFF, 0x0387 & 0xFF},
	{0x0388 & 0xFF, 0x038a & 0xFF},
	{0x038c & 0xFF, 0x038c & 0xFF},
	{0x038e & 0xFF, 0x03a1 & 0xFF},
	{0x03a3 & 0xFF, 0x03e1 & 0xFF},
	{0x03e2 & 0xFF, 0x03ef & 0xFF},
	{0x03f0 & 0xFF, 0x03ff & 0xFF},
	{0x0400 & 0xFF, 0x0484 & 0xFF},
	{0x0485 & 0xFF, 0x0486 & 0xFF},
	{0x0487 & 0xFF, 0x04ff & 0xFF},
	{0x0500 & 0xFF, 0x052f & 0xFF},
	{0x0531 & 0xFF, 0x0556 & 0xFF},
	{0x0559 & 0xFF, 0x055f & 0xFF},
	{0x0561 & 0xFF, 0x0587 & 0xFF},
	{0x0589 & 0xFF, 0x0589 & 0xFF},
	{0x058a & 0xFF, 0x058a & 0xFF},
	{0x058d & 0xFF, 0x058f & 0xFF},
	{0x0591 & 0xFF, 0x05c7 & 0xFF},
	{0x05d0 & 0xFF, 0x05ea & 0xFF},
	{0x05f0 & 0xFF, 0x05f4 & 0xFF},
	{0x0600 & 0xFF, 0x0604 & 0xFF},
	{0x0605 & 0xFF, 0x0605 & 0xFF},
	{0x0606 & 0xFF, 0x060b & 0xFF},
	{0x060c & 0xFF, 0x060c & 0xFF},
	{0x060d & 0xFF, 0x061a & 0xFF},
	{0x061b & 0xFF, 0x061c & 0xFF},
	{0x061e & 0xFF, 0x061e & 0xFF},
	{0x061f & 0xFF, 0x061f & 0xFF},
	{0x0620 & 0xFF, 0x063f & 0xFF},
	{0x0640 & 0xFF, 0x0640 & 0xFF},
	{0x0641 & 0xFF, 0x064a & 0xFF},
	{0x064b & 0xFF, 0x0655 & 0xFF},
	{0x0656 & 0xFF, 0x066f & 0xFF},
	{0x0670 & 0xFF, 0x0670 & 0xFF},
	{0x0671 & 0xFF, 0x06dc & 0xFF},
	{0x06dd & 0xFF, 0x06dd & 0xFF},
	{0x06de & 0xFF, 0x06ff & 0xFF},
	{0x0700 & 0xFF, 0x070d & 0xFF},
	{0x070f & 0xFF, 0x074a & 0xFF},
	{0x074d & 0xFF, 0x074f & 0xFF},
	{0x0750 & 0xFF, 0x077f & 0xFF},
	{0x0780 & 0xFF, 0x07b1 & 0xFF},
	{0x07c0 & 0xFF, 0x07fa & 0xFF},
	{0x0800 & 0xFF, 0x082d & 0xFF},
	{0x0830 & 0xFF, 0x083e & 0xFF},
	{0x0840 & 0xFF, 0x085b & 0xFF},
	{0x085e & 0xFF, 0x085e & 0xFF},
	{0x08a0 & 0xFF, 0x08b4 & 0xFF},
	{0x08e3 & 0xFF, 0x08ff & 0xFF},
	{0x0900 & 0xFF, 0x0950 & 0xFF},
	{0x0951 & 0xFF, 0x0952 & 0xFF},
	{0x0953 & 0xFF, 0x0963 & 0xFF},
	{0x0964 & 0xFF, 0x0965 & 0xFF},
	{0x0966 & 0xFF, 0x097f & 0xFF},
	{0x0980 & 0xFF, 0x0983 & 0xFF},
	{0x0985 & 0xFF, 0x098c & 0xFF},
	{0x098f & 0xFF, 0x0990 & 0xFF},
	{0x0993 & 0xFF, 0x09a8 & 0xFF},
	{0x09aa & 0xFF, 0x09b0 & 0xFF},
	{0x09b2 & 0xFF, 0x09b2 & 0xFF},
	{0x09b6 & 0xFF, 0x09b9 & 0xFF},
	{0x09bc & 0xFF, 0x09c4 & 0xFF},
	{0x09c7 & 0xFF, 0x09c8 & 0xFF},
	{0x09cb & 0xFF, 0x09ce & 0xFF},
	{0x09d7 & 0xFF, 0x09d7 & 0xFF},
	{0x09dc & 0xFF, 0x09dd & 0xFF},
	{0x09df & 0xFF, 0x09e3 & 0xFF},
	{0x09e6 & 0xFF, 0x09fb & 0xFF},
	{0x0a01 & 0xFF, 0x0a03 & 0xFF},
	{0x0a05 & 0xFF, 0x0a0a & 0xFF},
	{0x0a0f & 0xFF, 0x0a10 & 0xFF},
	{0x0a13 & 0xFF, 0x0a28 & 0xFF},
	{0x0a2a & 0xFF, 0x0a30 & 0xFF},
	{0x0a32 & 0xFF, 0x0a33 & 0xFF},
	{0x0a35 & 0xFF, 0x0a36 & 0xFF},
	{0x0a38 & 0xFF, 0x0a39 & 0xFF},
	{0x0a3c & 0xFF, 0x0a3c & 0xFF},
	{0x0a3e & 0xFF, 0x0a42 & 0xFF},
	{0x0a47 & 0xFF, 0x0a48 & 0xFF},
	{0x0a4b & 0xFF, 0x0a4d & 0xFF},
	{0x0a51 & 0xFF, 0x0a51 & 0xFF},
	{0x0a59 & 0xFF, 0x0a5c & 0xFF},
	{0x0a5e & 0xFF, 0x0a5e & 0xFF},
	{0x0a66 & 0xFF, 0x0a75 & 0xFF},
	{0x0a81 & 0xFF, 0x0a83 & 0xFF},
	{0x0a85 & 0xFF, 0x0a8d & 0xFF},
	{0x0a8f & 0xFF, 0x0a91 & 0xFF},
	{0x0a93 & 0xFF, 0x0aa8 & 0xFF},
	{0x0aaa & 0xFF, 0x0ab0 & 0xFF},
	{0x0ab2 & 0xFF, 0x0ab3 & 0xFF},
	{0x0ab5 & 0xFF, 0x0ab9 & 0xFF},
	{0x0abc & 0xFF, 0x0ac5 & 0xFF},
	{0x0ac7 & 0xFF, 0x0ac9 & 0xFF},
	{0x0acb & 0xFF, 0x0acd & 0xFF},
	{0x0ad0 & 0xFF, 0x0ad0 & 0xFF},
	{0x0ae0 & 0xFF, 0x0ae3 & 0xFF},
	{0x0ae6 & 0xFF, 0x0af1 & 0xFF},
	{0x0af9 & 0xFF, 0x0af9 & 0xFF},
	{0x0b01 & 0xFF, 0x0b03 & 0xFF},
	{0x0b05 & 0xFF, 0x0b0c & 0xFF},
	{0x0b0f & 0xFF, 0x0b10 & 0xFF},
	{0x0b13 & 0xFF, 0x0b28 & 0xFF},
	{0x0b2a & 0xFF, 0x0b30 & 0xFF},
	{0x0b32 & 0xFF, 0x0b33 & 0xFF},
	{0x0b35 & 0xFF, 0x0b39 & 0xFF},
	{0x0b3c & 0xFF, 0x0b44 & 0xFF},
	{0x0b47 & 0xFF, 0x0b48 & 0xFF},
	{0x0b4b & 0xFF, 0x0b4d & 0xFF},
	{0x0b56 & 0xFF, 0x0b57 & 0xFF},
	{0x0b5c & 0xFF, 0x0b5d & 0xFF},
	{0x0b5f & 0xFF, 0x0b63 & 0xFF},
	{0x0b66 & 0xFF, 0x0b77 & 0xFF},
	{0x0b82 & 0xFF, 0x0b83 & 0xFF},
	{0x0b85 & 0xFF, 0x0b8a & 0xFF},
	{0x0b8e & 0xFF, 0x0b90 & 0xFF},
	{0x0b92 & 0xFF, 0x0b95 & 0xFF},
	{0x0b99 & 0xFF, 0x0b9a & 0xFF},
	{0x0b9c & 0xFF, 0x0b9c & 0xFF},
	{0x0b9e & 0xFF, 0x0b9f & 0xFF},
	{0x0ba3 & 0xFF, 0x0ba4 & 0xFF},
	{0x0ba8 & 0xFF, 0x0baa & 0xFF},
	{0x0bae & 0xFF, 0x0bb9 & 0xFF},
	{0x0bbe & 0xFF, 0x0bc2 & 0xFF},
	{0x0bc6 & 0xFF, 0x0bc8 & 0xFF},
	{0x0bca & 0xFF, 0x0bcd & 0xFF},
	{0x0bd0 & 0xFF, 0x0bd0 & 0xFF},
	{0x0bd7 & 0xFF, 0x0bd7 & 0xFF},
	{0x0be6 & 0xFF, 0x0bfa & 0xFF},
	{0x0c00 & 0xFF, 0x0c03 & 0xFF},
	{0x0c05 & 0xFF, 0x0c0c & 0xFF},
	{0x0c0e & 0xFF, 0x0c10 & 0xFF},
	{0x0c12 & 0xFF, 0x0c28 & 0xFF},
	{0x0c2a & 0xFF, 0x0c39 & 0xFF},
	{0x0c3d & 0xFF, 0x0c44 & 0xFF},
	{0x0c46 & 0xFF, 0x0c48 & 0xFF},
	{0x0c4a & 0xFF, 0x0c4d & 0xFF},
	{0x0c55 & 0xFF, 0x0c56 & 0xFF},
	{0x0c58 & 0xFF, 0x0c5a & 0xFF},
	{0x0c60 & 0xFF, 0x0c63 & 0xFF},
	{0x0c66 & 0xFF, 0x0c6f & 0xFF},
	{0x0c78 & 0xFF, 0x0c7f & 0xFF},
	{0x0c81 & 0xFF, 0x0c83 & 0xFF},
	{0x0c85 & 0xFF, 0x0c8c & 0xFF},
	{0x0c8e & 0xFF, 0x0c90 & 0xFF},
	{0x0c92 & 0xFF, 0x0ca8 & 0xFF},
	{0x0caa & 0xFF, 0x0cb3 & 0xFF},
	{0x0cb5 & 0xFF, 0x0cb9 & 0xFF},
	{0x0cbc & 0xFF, 0x0cc4 & 0xFF},
	{0x0cc6 & 0xFF, 0x0cc8 & 0xFF},
	{0x0cca & 0xFF, 0x0ccd & 0xFF},
	{0x0cd5 & 0xFF, 0x0cd6 & 0xFF},
	{0x0cde & 0xFF, 0x0cde & 0xFF},
	{0x0ce0 & 0xFF, 0x0ce3 & 0xFF},
	{0x0ce6 & 0xFF, 0x0cef & 0xFF},
	{0x0cf1 & 0xFF, 0x0cf2 & 0xFF},
	{0x0d01 & 0xFF, 0x0d03 & 0xFF},
	{0x0d05 & 0xFF, 0x0d0c & 0xFF},
	{0x0d0e & 0xFF, 0x0d10 & 0xFF},
	{0x0d12 & 0xFF, 0x0d3a & 0xFF},
	{0x0d3d & 0xFF, 0x0d44 & 0xFF},
	{0x0d46 & 0xFF, 0x0d48 & 0xFF},
	{0x0d4a & 0xFF, 0x0d4e & 0xFF},
	{0x0d57 & 0xFF, 0x0d57 & 0xFF},
	{0x0d5f & 0xFF, 0x0d63 & 0xFF},
	{0x0d66 & 0xFF, 0x0d75 & 0xFF},
	{0x0d79 & 0xFF, 0x0d7f & 0xFF},
	{0x0d82 & 0xFF, 0x0d83 & 0xFF},
	{0x0d85 & 0xFF, 0x0d96 & 0xFF},
	{0x0d9a & 0xFF, 0x0db1 & 0xFF},
	{0x0db3 & 0xFF, 0x0dbb & 0xFF},
	{0x0dbd & 0xFF, 0x0dbd & 0xFF},
	{0x0dc0 & 0xFF, 0x0dc6 & 0xFF},
	{0x0dca & 0xFF, 0x0dca & 0xFF},
	{0x0dcf & 0xFF, 0x0dd4 & 0xFF},
	{0x0dd6 & 0xFF, 0x0dd6 & 0xFF},
	{0x0dd8 & 0xFF, 0x0ddf & 0xFF},
	{0x0de6 & 0xFF, 0x0def & 0xFF},
	{0x0df2 & 0xFF, 0x0df4 & 0xFF},
	{0x0e01 & 0xFF, 0x0e3a & 0xFF},
	{0x0e3f & 0xFF, 0x0e3f & 0xFF},
	{0x0e40 & 0xFF, 0x0e5b & 0xFF},
	{0x0e81 & 0xFF, 0x0e82 & 0xFF},
	{0x0e84 & 0xFF, 0x0e84 & 0xFF},
	{0x0e87 & 0xFF, 0x0e88 & 0xFF},
	{0x0e8a & 0xFF, 0x0e8a & 0xFF},
	{0x0e8d & 0xFF, 0x0e8d & 0xFF},
	{0x0e94 & 0xFF, 0x0e97 & 0xFF},
	{0x0e99 & 0xFF, 0x0e9f & 0xFF},
	{0x0ea1 & 0xFF, 0x0ea3 & 0xFF},
	{0x0ea5 & 0xFF, 0x0ea5 & 0xFF},
	{0x0ea7 & 0xFF, 0x0ea7 & 0xFF},
	{0x0eaa & 0xFF, 0x0eab & 0xFF},
	{0x0ead & 0xFF, 0x0eb9 & 0xFF},
	{0x0ebb & 0xFF, 0x0ebd & 0xFF},
	{0x0ec0 & 0xFF, 0x0ec4 & 0xFF},
	{0x0ec6 & 0xFF, 0x0ec6 & 0xFF},
	{0x0ec8 & 0xFF, 0x0ecd & 0xFF},
	{0x0ed0 & 0xFF, 0x0ed9 & 0xFF},
	{0x0edc & 0xFF, 0x0edf & 0xFF},
	{0x0f00 & 0xFF, 0x0f47 & 0xFF},
	{0x0f49 & 0xFF, 0x0f6c & 0xFF},
	{0x0f71 & 0xFF, 0x0f97 & 0xFF},
	{0x0f99 & 0xFF, 0x0fbc & 0xFF},
	{0x0fbe & 0xFF, 0x0fcc & 0xFF},
	{0x0fce & 0xFF, 0x0fd4 & 0xFF},
	{0x0fd5 & 0xFF, 0x0fd8 & 0xFF},
	{0x0fd9 & 0xFF, 0x0fda & 0xFF},
	{0x1000 & 0xFF, 0x109f & 0xFF},
	{0x10a0 & 0xFF, 0x10c5 & 0xFF},
	{0x10c7 & 0xFF, 0x10c7 & 0xFF},
	{0x10cd & 0xFF, 0x10cd & 0xFF},
	{0x10d0 & 0xFF, 0x10fa & 0xFF},
	{0x10fb & 0xFF, 0x10fb & 0xFF},
	{0x10fc & 0xFF, 0x10ff & 0xFF},
	{0x1100 & 0xFF, 0x11ff & 0xFF},
	{0x1200 & 0xFF, 0x1248 & 0xFF},
	{0x124a & 0xFF, 0x124d & 0xFF},
	{0x1250 & 0xFF, 0x1256 & 0xFF},
	{0x1258 & 0xFF, 0x1258 & 0xFF},
	{0x125a & 0xFF, 0x125d & 0xFF},
	{0x1260 & 0xFF, 0x1288 & 0xFF},
	{0x128a & 0xFF, 0x128d & 0xFF},
	{0x1290 & 0xFF, 0x12b0 & 0xFF},
	{0x12b2 & 0xFF, 0x12b5 & 0xFF},
	{0x12b8 & 0xFF, 0x12be & 0xFF},
	{0x12c0 & 0xFF, 0x12c0 & 0xFF},
	{0x12c2 & 0xFF, 0x12c5 & 0xFF},
	{0x12c8 & 0xFF, 0x12d6 & 0xFF},
	{0x12d8 & 0xFF, 0x12ff & 0xFF},
	{0x1300 & 0xFF, 0x1310 & 0xFF},
	{0x1312 & 0xFF, 0x1315 & 0xFF},
	{0x1318 & 0xFF, 0x135a & 0xFF},
	{0x135d & 0xFF, 0x137c & 0xFF},
	{0x1380 & 0xFF, 0x1399 & 0xFF},
	{0x13a0 & 0xFF, 0x13f5 & 0xFF},
	{0x13f8 & 0xFF, 0x13fd & 0xFF},
	{0x1400 & 0xFF, 0x14ff & 0xFF},
	{0x1500 & 0xFF, 0x15ff & 0xFF},
	{0x1600 & 0xFF, 0x167f & 0xFF},
	{0x1680 & 0xFF, 0x169c & 0xFF},
	{0x16a0 & 0xFF, 0x16ea & 0xFF},
	{0x16eb & 0xFF, 0x16ed & 0xFF},
	{0x16ee & 0xFF, 0x16f8 & 0xFF},
	{0x1700 & 0xFF, 0x170c & 0xFF},
	{0x170e & 0xFF, 0x1714 & 0xFF},
	{0x1720 & 0xFF, 0x1734 & 0xFF},
	{0x1735 & 0xFF, 0x1736 & 0xFF},
	{0x1740 & 0xFF, 0x1753 & 0xFF},
	{0x1760 & 0xFF, 0x176c & 0xFF},
	{0x176e & 0xFF, 0x1770 & 0xFF},
	{0x1772 & 0xFF, 0x1773 & 0xFF},
	{0x1780 & 0xFF, 0x17dd & 0xFF},
	{0x17e0 & 0xFF, 0x17e9 & 0xFF},
	{0x17f0 & 0xFF, 0x17f9 & 0xFF},
	{0x1800 & 0xFF, 0x1801 & 0xFF},
	{0x1802 & 0xFF, 0x1803 & 0xFF},
	{0x1804 & 0xFF, 0x1804 & 0xFF},
	{0x1805 & 0xFF, 0x1805 & 0xFF},
	{0x1806 & 0xFF, 0x180e & 0xFF},
	{0x1810 & 0xFF, 0x1819 & 0xFF},
	{0x1820 & 0xFF, 0x1877 & 0xFF},
	{0x1880 & 0xFF, 0x18aa & 0xFF},
	{0x18b0 & 0xFF, 0x18f5 & 0xFF},
	{0x1900 & 0xFF, 0x191e & 0xFF},
	{0x1920 & 0xFF, 0x192b & 0xFF},
	{0x1930 & 0xFF, 0x193b & 0xFF},
	{0x1940 & 0xFF, 0x1940 & 0xFF},
	{0x1944 & 0xFF, 0x194f & 0xFF},
	{0x1950 & 0xFF, 0x196d & 0xFF},
	{0x1970 & 0xFF, 0x1974 & 0xFF},
	{0x1980 & 0xFF, 0x19ab & 0xFF},
	{0x19b0 & 0xFF, 0x19c9 & 0xFF},
	{0x19d0 & 0xFF, 0x19da & 0xFF},
	{0x19de & 0xFF, 0x19df & 0xFF},
	{0x19e0 & 0xFF, 0x19ff & 0xFF},
	{0x1a00 & 0xFF, 0x1a1b & 0xFF},
	{0x1a1e & 0xFF, 0x1a1f & 0xFF},
	{0x1a20 & 0xFF, 0x1a5e & 0xFF},
	{0x1a60 & 0xFF, 0x1a7c & 0xFF},
	{0x1a7f & 0xFF, 0x1a89 & 0xFF},
	{0x1a90 & 0xFF, 0x1a99 & 0xFF},
	{0x1aa0 & 0xFF, 0x1aad & 0xFF},
	{0x1ab0 & 0xFF, 0x1abe & 0xFF},
	{0x1b00 & 0xFF, 0x1b4b & 0xFF},
	{0x1b50 & 0xFF, 0x1b7c & 0xFF},
	{0x1b80 & 0xFF, 0x1bbf & 0xFF},
	{0x1bc0 & 0xFF, 0x1bf3 & 0xFF},
	{0x1bfc & 0xFF, 0x1bff & 0xFF},
	{0x1c00 & 0xFF, 0x1c37 & 0xFF},
	{0x1c3b & 0xFF, 0x1c49 & 0xFF},
	{0x1c4d & 0xFF, 0x1c4f & 0xFF},
	{0x1c50 & 0xFF, 0x1c7f & 0xFF},
	{0x1cc0 & 0xFF, 0x1cc7 & 0xFF},
	{0x1cd0 & 0xFF, 0x1cd2 & 0xFF},
	{0x1cd3 & 0xFF, 0x1cd3 & 0xFF},
	{0x1cd4 & 0xFF, 0x1ce0 & 0xFF},
	{0x1ce1 & 0xFF, 0x1ce1 & 0xFF},
	{0x1ce2 & 0xFF, 0x1ce8 & 0xFF},
	{0x1ce9 & 0xFF, 0x1cec & 0xFF},
	{0x1ced & 0xFF, 0x1ced & 0xFF},
	{0x1cee & 0xFF, 0x1cf3 & 0xFF},
	{0x1cf4 & 0xFF, 0x1cf4 & 0xFF},
	{0x1cf5 & 0xFF, 0x1cf6 & 0xFF},
	{0x1cf8 & 0xFF, 0x1cf9 & 0xFF},
	{0x1d00 & 0xFF, 0x1d25 & 0xFF},
	{0x1d26 & 0xFF, 0x1d2a & 0xFF},
	{0x1d2b & 0xFF, 0x1d2b & 0xFF},
	{0x1d2c & 0xFF, 0x1d5c & 0xFF},
	{0x1d5d & 0xFF, 0x1d61 & 0xFF},
	{0x1d62 & 0xFF, 0x1d65 & 0xFF},
	{0x1d66 & 0xFF, 0x1d6a & 0xFF},
	{0x1d6b & 0xFF, 0x1d77 & 0xFF},
	{0x1d78 & 0xFF, 0x1d78 & 0xFF},
	{0x1d79 & 0xFF, 0x1dbe & 0xFF},
	{0x1dbf & 0xFF, 0x1dbf & 0xFF},
	{0x1dc0 & 0xFF, 0x1df5 & 0xFF},
	{0x1dfc & 0xFF, 0x1dff & 0xFF},
	{0x1e00 & 0xFF, 0x1eff & 0xFF},
	{0x1f00 & 0xFF, 0x1f15 & 0xFF},
	{0x1f18 & 0xFF, 0x1f1d & 0xFF},
	{0x1f20 & 0xFF, 0x1f45 & 0xFF},
	{0x1f48 & 0xFF, 0x1f4d & 0xFF},
	{0x1f50 & 0xFF, 0x1f57 & 0xFF},
	{0x1f59 & 0xFF, 0x1f59 & 0xFF},
	{0x1f5b & 0xFF, 0x1f5b & 0xFF},
	{0x1f5d & 0xFF, 0x1f5d & 0xFF},
	{0x1f5f & 0xFF, 0x1f7d & 0xFF},
	{0x1f80 & 0xFF, 0x1fb4 & 0xFF},
	{0x1fb6 & 0xFF, 0x1fc4 & 0xFF},
	{0x1fc6 & 0xFF, 0x1fd3 & 0xFF},
	{0x1fd6 & 0xFF, 0x1fdb & 0xFF},
	{0x1fdd & 0xFF, 0x1fef & 0xFF},
	{0x1ff2 & 0xFF, 0x1ff4 & 0xFF},
	{0x1ff6 & 0xFF, 0x1ffe & 0xFF},
	{0x2000 & 0xFF, 0x200b & 0xFF},
	{0x200c & 0xFF, 0x200d & 0xFF},
	{0x200e & 0xFF, 0x2064 & 0xFF},
	{0x2066 & 0xFF, 0x2070 & 0xFF},
	{0x2071 & 0xFF, 0x2071 & 0xFF},
	{0x2074 & 0xFF, 0x207e & 0xFF},
	{0x207f & 0xFF, 0x207f & 0xFF},
	{0x2080 & 0xFF, 0x208e & 0xFF},
	{0x2090 & 0xFF, 0x209c & 0xFF},
	{0x20a0 & 0xFF, 0x20be & 0xFF},
	{0x20d0 & 0xFF, 0x20f0 & 0xFF},
	{0x2100 & 0xFF, 0x2125 & 0xFF},
	{0x2126 & 0xFF, 0x2126 & 0xFF},
	{0x2127 & 0xFF, 0x2129 & 0xFF},
	{0x212a & 0xFF, 0x212b & 0xFF},
	{0x212c & 0xFF, 0x2131 & 0xFF},
	{0x2132 & 0xFF, 0x2132 & 0xFF},
	{0x2133 & 0xFF, 0x214d & 0xFF},
	{0x214e & 0xFF, 0x214e & 0xFF},
	{0x214f & 0xFF, 0x215f & 0xFF},
	{0x2160 & 0xFF, 0x2188 & 0xFF},
	{0x2189 & 0xFF, 0x218b & 0xFF},
	{0x2190 & 0xFF, 0x21ff & 0xFF},
	{0x2200 & 0xFF, 0x22ff & 0xFF},
	{0x2300 & 0xFF, 0x23fa & 0xFF},
	{0x2400 & 0xFF, 0x2426 & 0xFF},
	{0x2440 & 0xFF, 0x244a & 0xFF},
	{0x2460 & 0xFF, 0x24ff & 0xFF},
	{0x2500 & 0xFF, 0x25ff & 0xFF},
	{0x2600 & 0xFF, 0x26ff & 0xFF},
	{0x2700 & 0xFF, 0x27ff & 0xFF},
	{0x2800 & 0xFF, 0x28ff & 0xFF},
	{0x2900 & 0xFF, 0x29ff & 0xFF},
	{0x2a00 & 0xFF, 0x2aff & 0xFF},
	{0x2b00 & 0xFF, 0x2b73 & 0xFF},
	{0x2b76 & 0xFF, 0x2b95 & 0xFF},
	{0x2b98 & 0xFF, 0x2bb9 & 0xFF},
	{0x2bbd & 0xFF, 0x2bc8 & 0xFF},
	{0x2bca & 0xFF, 0x2bd1 & 0xFF},
	{0x2bec & 0xFF, 0x2bef & 0xFF},
	{0x2c00 & 0xFF, 0x2c2e & 0xFF},
	{0x2c30 & 0xFF, 0x2c5e & 0xFF},
	{0x2c60 & 0xFF, 0x2c7f & 0xFF},
	{0x2c80 & 0xFF, 0x2cf3 & 0xFF},
	{0x2cf9 & 0xFF, 0x2cff & 0xFF},
	{0x2d00 & 0xFF, 0x2d25 & 0xFF},
	{0x2d27 & 0xFF, 0x2d27 & 0xFF},
	{0x2d2d & 0xFF, 0x2d2d & 0xFF},
	{0x2d30 & 0xFF, 0x2d67 & 0xFF},
	{0x2d6f & 0xFF, 0x2d70 & 0xFF},
	{0x2d7f & 0xFF, 0x2d7f & 0xFF},
	{0x2d80 & 0xFF, 0x2d96 & 0xFF},
	{0x2da0 & 0xFF, 0x2da6 & 0xFF},
	{0x2da8 & 0xFF, 0x2dae & 0xFF},
	{0x2db0 & 0xFF, 0x2db6 & 0xFF},
	{0x2db8 & 0xFF, 0x2dbe & 0xFF},
	{0x2dc0 & 0xFF, 0x2dc6 & 0xFF},
	{0x2dc8 & 0xFF, 0x2dce & 0xFF},
	{0x2dd0 & 0xFF, 0x2dd6 & 0xFF},
	{0x2dd8 & 0xFF, 0x2dde & 0xFF},
	{0x2de0 & 0xFF, 0x2dff & 0xFF},
	{0x2e00 & 0xFF, 0x2e42 & 0xFF},
	{0x2e80 & 0xFF, 0x2e99 & 0xFF},
	{0x2e9b & 0xFF, 0x2ef3 & 0xFF},
	{0x2f00 & 0xFF, 0x2fd5 & 0xFF},
	{0x2ff0 & 0xFF, 0x2ffb & 0xFF},
	{0x3000 & 0xFF, 0x3004 & 0xFF},
	{0x3005 & 0xFF, 0x3005 & 0xFF},
	{0x3006 & 0xFF, 0x3006 & 0xFF},
	{0x3007 & 0xFF, 0x3007 & 0xFF},
	{0x3008 & 0xFF, 0x3020 & 0xFF},
	{0x3021 & 0xFF, 0x3029 & 0xFF},
	{0x302a & 0xFF, 0x302d & 0xFF},
	{0x302e & 0xFF, 0x302f & 0xFF},
	{0x3030 & 0xFF, 0x3037 & 0xFF},
	{0x3038 & 0xFF, 0x303b & 0xFF},
	{0x303c & 0xFF, 0x303f & 0xFF},
	{0x3041 & 0xFF, 0x3096 & 0xFF},
	{0x3099 & 0xFF, 0x309a & 0xFF},
	{0x309b & 0xFF, 0x309c & 0xFF},
	{0x309d & 0xFF, 0x309f & 0xFF},
	{0x30a0 & 0xFF, 0x30a0 & 0xFF},
	{0x30a1 & 0xFF, 0x30fa & 0xFF},
	{0x30fb & 0xFF, 0x30fc & 0xFF},
	{0x30fd & 0xFF, 0x30ff & 0xFF},
	{0x3105 & 0xFF, 0x312d & 0xFF},
	{0x3131 & 0xFF, 0x318e & 0xFF},
	{0x3190 & 0xFF, 0x319f & 0xFF},
	{0x31a0 & 0xFF, 0x31ba & 0xFF},
	{0x31c0 & 0xFF, 0x31e3 & 0xFF},
	{0x31f0 & 0xFF, 0x31ff & 0xFF},
	{0x3200 & 0xFF, 0x321e & 0xFF},
	{0x3220 & 0xFF, 0x325f & 0xFF},
	{0x3260 & 0xFF, 0x327e & 0xFF},
	{0x327f & 0xFF, 0x32cf & 0xFF},
	{0x32d0 & 0xFF, 0x32fe & 0xFF},
	{0x3300 & 0xFF, 0x3357 & 0xFF},
	{0x3358 & 0xFF, 0x33ff & 0xFF},
	{0x3400 & 0xFF, 0x34ff & 0xFF},
	{0x3500 & 0xFF, 0x35ff & 0xFF},
	{0x3600 & 0xFF, 0x36ff & 0xFF},
	{0x3700 & 0xFF, 0x37ff & 0xFF},
	{0x3800 & 0xFF, 0x38ff & 0xFF},
	{0x3900 & 0xFF, 0x39ff & 0xFF},
	{0x3a00 & 0xFF, 0x3aff & 0xFF},
	{0x3b00 & 0xFF, 0x3bff & 0xFF},
	{0x3c00 & 0xFF, 0x3cff & 0xFF},
	{0x3d00 & 0xFF, 0x3dff & 0xFF},
	{0x3e00 & 0xFF, 0x3eff & 0xFF},
	{0x3f00 & 0xFF, 0x3fff & 0xFF},
	{0x4000 & 0xFF, 0x40ff & 0xFF},
	{0x4100 & 0xFF, 0x41ff & 0xFF},
	{0x4200 & 0xFF, 0x42ff & 0xFF},
	{0x4300 & 0xFF, 0x43ff & 0xFF},
	{0x4400 & 0xFF, 0x44ff & 0xFF},
	{0x4500 & 0xFF, 0x45ff & 0xFF},
	{0x4600 & 0xFF, 0x46ff & 0xFF},
	{0x4700 & 0xFF, 0x47ff & 0xFF},
	{0x4800 & 0xFF, 0x48ff & 0xFF},
	{0x4900 & 0xFF, 0x49ff & 0xFF},
	{0x4a00 & 0xFF, 0x4aff & 0xFF},
	{0x4b00 & 0xFF, 0x4bff & 0xFF},
	{0x4c00 & 0xFF, 0x4cff & 0xFF},
	{0x4d00 & 0xFF, 0x4db5 & 0xFF},
	{0x4dc0 & 0xFF, 0x4dff & 0xFF},
	{0x4e00 & 0xFF, 0x4eff & 0xFF},
	{0x4f00 & 0xFF, 0x4fff & 0xFF},
	{0x5000 & 0xFF, 0x50ff & 0xFF},
	{0x5100 & 0xFF, 0x51ff & 0xFF},
	{0x5200 & 0xFF, 0x52ff & 0xFF},
	{0x5300 & 0xFF, 0x53ff & 0xFF},
	{0x5400 & 0xFF, 0x54ff & 0xFF},
	{0x5500 & 0xFF, 0x55ff & 0xFF},
	{0x5600 & 0xFF, 0x56ff & 0xFF},
	{0x5700 & 0xFF, 0x57ff & 0xFF},
	{0x5800 & 0xFF, 0x58ff & 0xFF},
	{0x5900 & 0xFF, 0x59ff & 0xFF},
	{0x5a00 & 0xFF, 0x5aff & 0xFF},
	{0x5b00 & 0xFF, 0x5bff & 0xFF},
	{0x5c00 & 0xFF, 0x5cff & 0xFF},
	{0x5d00 & 0xFF, 0x5dff & 0xFF},
	{0x5e00 & 0xFF, 0x5eff & 0xFF},
	{0x5f00 & 0xFF, 0x5fff & 0xFF},
	{0x6000 & 0xFF, 0x60ff & 0xFF},
	{0x6100 & 0xFF, 0x61ff & 0xFF},
	{0x6200 & 0xFF, 0x62ff & 0xFF},
	{0x6300 & 0xFF, 0x63ff & 0xFF},
	{0x6400 & 0xFF, 0x64ff & 0xFF},
	{0x6500 & 0xFF, 0x65ff & 0xFF},
	{0x6600 & 0xFF, 0x66ff & 0xFF},
	{0x6700 & 0xFF, 0x67ff & 0xFF},
	{0x6800 & 0xFF, 0x68ff & 0xFF},
	{0x6900 & 0xFF, 0x69ff & 0xFF},
	{0x6a00 & 0xFF, 0x6aff & 0xFF},
	{0x6b00 & 0xFF, 0x6bff & 0xFF},
	{0x6c00 & 0xFF, 0x6cff & 0xFF},
	{0x6d00 & 0xFF, 0x6dff & 0xFF},
	{0x6e00 & 0xFF, 0x6eff & 0xFF},
	{0x6f00 & 0xFF, 0x6fff & 0xFF},
	{0x7000 & 0xFF, 0x70ff & 0xFF},
	{0x7100 & 0xFF, 0x71ff & 0xFF},
	{0x7200 & 0xFF, 0x72ff & 0xFF},
	{0x7300 & 0xFF, 0x73ff & 0xFF},
	{0x7400 & 0xFF, 0x74ff & 0xFF},
	{0x7500 & 0xFF, 0x75ff & 0xFF},
	{0x7600 & 0xFF, 0x76ff & 0xFF},
	{0x7700 & 0xFF, 0x77ff & 0xFF},
	{0x7800 & 0xFF, 0x78ff & 0xFF},
	{0x7900 & 0xFF, 0x79ff & 0xFF},
	{0x7a00 & 0xFF, 0x7aff & 0xFF},
	{0x7b00 & 0xFF, 0x7bff & 0xFF},
	{0x7c00 & 0xFF, 0x7cff & 0xFF},
	{0x7d00 & 0xFF, 0x7dff & 0xFF},
	{0x7e00 & 0xFF, 0x7eff & 0xFF},
	{0x7f00 & 0xFF, 0x7fff & 0xFF},
	{0x8000 & 0xFF, 0x80ff & 0xFF},
	{0x8100 & 0xFF, 0x81ff & 0xFF},
	{0x8200 & 0xFF, 0x82ff & 0xFF},
	{0x8300 & 0xFF, 0x83ff & 0xFF},
	{0x8400 & 0xFF, 0x84ff & 0xFF},
	{0x8500 & 0xFF, 0x85ff & 0xFF},
	{0x8600 & 0xFF, 0x86ff & 0xFF},
	{0x8700 & 0xFF, 0x87ff & 0xFF},
	{0x8800 & 0xFF, 0x88ff & 0xFF},
	{0x8900 & 0xFF, 0x89ff & 0xFF},
	{0x8a00 & 0xFF, 0x8aff & 0xFF},
	{0x8b00 & 0xFF, 0x8bff & 0xFF},
	{0x8c00 & 0xFF, 0x8cff & 0xFF},
	{0x8d00 & 0xFF, 0x8dff & 0xFF},
	{0x8e00 & 0xFF, 0x8eff & 0xFF},
	{0x8f00 & 0xFF, 0x8fff & 0xFF},
	{0x9000 & 0xFF, 0x90ff & 0xFF},
	{0x9100 & 0xFF, 0x91ff & 0xFF},
	{0x9200 & 0xFF, 0x92ff & 0xFF},
	{0x9300 & 0xFF, 0x93ff & 0xFF},
	{0x9400 & 0xFF, 0x94ff & 0xFF},
	{0x9500 & 0xFF, 0x95ff & 0xFF},
	{0x9600 & 0xFF, 0x96ff & 0xFF},
	{0x9700 & 0xFF, 0x97ff & 0xFF},
	{0x9800 & 0xFF, 0x98ff & 0xFF},
	{0x9900 & 0xFF, 0x99ff & 0xFF},
	{0x9a00 & 0xFF, 0x9aff & 0xFF},
	{0x9b00 & 0xFF, 0x9bff & 0xFF},
	{0x9c00 & 0xFF, 0x9cff & 0xFF},
	{0x9d00 & 0xFF, 0x9dff & 0xFF},
	{0x9e00 & 0xFF, 0x9eff & 0xFF},
	{0x9f00 & 0xFF, 0x9fd5 & 0xFF},
	{0xa000 & 0xFF, 0xa0ff & 0xFF},
	{0xa100 & 0xFF, 0xa1ff & 0xFF},
	{0xa200 & 0xFF, 0xa2ff & 0xFF},
	{0xa300 & 0xFF, 0xa3ff & 0xFF},
	{0xa400 & 0xFF, 0xa48c & 0xFF},
	{0xa490 & 0xFF, 0xa4c6 & 0xFF},
	{0xa4d0 & 0xFF, 0xa4ff & 0xFF},
	{0xa500 & 0xFF, 0xa5ff & 0xFF},
	{0xa600 & 0xFF, 0xa62b & 0xFF},
	{0xa640 & 0xFF, 0xa69f & 0xFF},
	{0xa6a0 & 0xFF, 0xa6f7 & 0xFF},
	{0xa700 & 0xFF, 0xa721 & 0xFF},
	{0xa722 & 0xFF, 0xa787 & 0xFF},
	{0xa788 & 0xFF, 0xa78a & 0xFF},
	{0xa78b & 0xFF, 0xa7ad & 0xFF},
	{0xa7b0 & 0xFF, 0xa7b7 & 0xFF},
	{0xa7f7 & 0xFF, 0xa7ff & 0xFF},
	{0xa800 & 0xFF, 0xa82b & 0xFF},
	{0xa830 & 0xFF, 0xa839 & 0xFF},
	{0xa840 & 0xFF, 0xa877 & 0xFF},
	{0xa880 & 0xFF, 0xa8c4 & 0xFF},
	{0xa8ce & 0xFF, 0xa8d9 & 0xFF},
	{0xa8e0 & 0xFF, 0xa8fd & 0xFF},
	{0xa900 & 0xFF, 0xa92d & 0xFF},
	{0xa92e & 0xFF, 0xa92e & 0xFF},
	{0xa92f & 0xFF, 0xa92f & 0xFF},
	{0xa930 & 0xFF, 0xa953 & 0xFF},
	{0xa95f & 0xFF, 0xa95f & 0xFF},
	{0xa960 & 0xFF, 0xa97c & 0xFF},
	{0xa980 & 0xFF, 0xa9cd & 0xFF},
	{0xa9cf & 0xFF, 0xa9cf & 0xFF},
	{0xa9d0 & 0xFF, 0xa9d9 & 0xFF},
	{0xa9de & 0xFF, 0xa9df & 0xFF},
	{0xa9e0 & 0xFF, 0xa9fe & 0xFF},
	{0xaa00 & 0xFF, 0xaa36 & 0xFF},
	{0xaa40 & 0xFF, 0xaa4d & 0xFF},
	{0xaa50 & 0xFF, 0xaa59 & 0xFF},
	{0xaa5c & 0xFF, 0xaa5f & 0xFF},
	{0xaa60 & 0xFF, 0xaa7f & 0xFF},
	{0xaa80 & 0xFF, 0xaac2 & 0xFF},
	{0xaadb & 0xFF, 0xaadf & 0xFF},
	{0xaae0 & 0xFF, 0xaaf6 & 0xFF},
	{0xab01 & 0xFF, 0xab06 & 0xFF},
	{0xab09 & 0xFF, 0xab0e & 0xFF},
	{0xab11 & 0xFF, 0xab16 & 0xFF},
	{0xab20 & 0xFF, 0xab26 & 0xFF},
	{0xab28 & 0xFF, 0xab2e & 0xFF},
	{0xab30 & 0xFF, 0xab5a & 0xFF},
	{0xab5b & 0xFF, 0xab5b & 0xFF},
	{0xab5c & 0xFF, 0xab64 & 0xFF},
	{0xab65 & 0xFF, 0xab65 & 0xFF},
	{0xab70 & 0xFF, 0xabbf & 0xFF},
	{0xabc0 & 0xFF, 0xabed & 0xFF},
	{0xabf0 & 0xFF, 0xabf9 & 0xFF},
	{0xac00 & 0xFF, 0xacff & 0xFF},
	{0xad00 & 0xFF, 0xadff & 0xFF},
	{0xae00 & 0xFF, 0xaeff & 0xFF},
	{0xaf00 & 0xFF, 0xafff & 0xFF},
	{0xb000 & 0xFF, 0xb0ff & 0xFF},
	{0xb100 & 0xFF, 0xb1ff & 0xFF},
	{0xb200 & 0xFF, 0xb2ff & 0xFF},
	{0xb300 & 0xFF, 0xb3ff & 0xFF},
	{0xb400 & 0xFF, 0xb4ff & 0xFF},
	{0xb500 & 0xFF, 0xb5ff & 0xFF},
	{0xb600 & 0xFF, 0xb6ff & 0xFF},
	{0xb700 & 0xFF, 0xb7ff & 0xFF},
	{0xb800 & 0xFF, 0xb8ff & 0xFF},
	{0xb900 & 0xFF, 0xb9ff & 0xFF},
	{0xba00 & 0xFF, 0xbaff & 0xFF},
	{0xbb00 & 0xFF, 0xbbff & 0xFF},
	{0xbc00 & 0xFF, 0xbcff & 0xFF},
	{0xbd00 & 0xFF, 0xbdff & 0xFF},
	{0xbe00 & 0xFF, 0xbeff & 0xFF},
	{0xbf00 & 0xFF, 0xbfff & 0xFF},
	{0xc000 & 0xFF, 0xc0ff & 0xFF},
	{0xc100 & 0xFF, 0xc1ff & 0xFF},
	{0xc200 & 0xFF, 0xc2ff & 0xFF},
	{0xc300 & 0xFF, 0xc3ff & 0xFF},
	{0xc400 & 0xFF, 0xc4ff & 0xFF},
	{0xc500 & 0xFF, 0xc5ff & 0xFF},
	{0xc600 & 0xFF, 0xc6ff & 0xFF},
	{0xc700 & 0xFF, 0xc7ff & 0xFF},
	{0xc800 & 0xFF, 0xc8ff & 0xFF},
	{0xc900 & 0xFF, 0xc9ff & 0xFF},
	{0xca00 & 0xFF, 0xcaff & 0xFF},
	{0xcb00 & 0xFF, 0xcbff & 0xFF},
	{0xcc00 & 0xFF, 0xccff & 0xFF},
	{0xcd00 & 0xFF, 0xcdff & 0xFF},
	{0xce00 & 0xFF, 0xceff & 0xFF},
	{0xcf00 & 0xFF, 0xcfff & 0xFF},
	{0xd000 & 0xFF, 0xd0ff & 0xFF},
	{0xd100 & 0xFF, 0xd1ff & 0xFF},
	{0xd200 & 0xFF, 0xd2ff & 0xFF},
	{0xd300 & 0xFF, 0xd3ff & 0xFF},
	{0xd400 & 0xFF, 0xd4ff & 0xFF},
	{0xd500 & 0xFF, 0xd5ff & 0xFF},
	{0xd600 & 0xFF, 0xd6ff & 0xFF},
	{0xd700 & 0xFF, 0xd7a3 & 0xFF},
	{0xd7b0 & 0xFF, 0xd7c6 & 0xFF},
	{0xd7cb & 0xFF, 0xd7fb & 0xFF},
	{0xf900 & 0xFF, 0xf9ff & 0xFF},
	{0xfa00 & 0xFF, 0xfa6d & 0xFF},
	{0xfa70 & 0xFF, 0xfad9 & 0xFF},
	{0xfb00 & 0xFF, 0xfb06 & 0xFF},
	{0xfb13 & 0xFF, 0xfb17 & 0xFF},
	{0xfb1d & 0xFF, 0xfb36 & 0xFF},
	{0xfb38 & 0xFF, 0xfb3c & 0xFF},
	{0xfb3e & 0xFF, 0xfb3e & 0xFF},
	{0xfb40 & 0xFF, 0xfb41 & 0xFF},
	{0xfb43 & 0xFF, 0xfb44 & 0xFF},
	{0xfb46 & 0xFF, 0xfb4f & 0xFF},
	{0xfb50 & 0xFF, 0xfbc1 & 0xFF},
	{0xfbd3 & 0xFF, 0xfbff & 0xFF},
	{0xfc00 & 0xFF, 0xfcff & 0xFF},
	{0xfd00 & 0xFF, 0xfd3d & 0xFF},
	{0xfd3e & 0xFF, 0xfd3f & 0xFF},
	{0xfd50 & 0xFF, 0xfd8f & 0xFF},
	{0xfd92 & 0xFF, 0xfdc7 & 0xFF},
	{0xfdf0 & 0xFF, 0xfdfd & 0xFF},
	{0xfe00 & 0xFF, 0xfe0f & 0xFF},
	{0xfe10 & 0xFF, 0xfe19 & 0xFF},
	{0xfe20 & 0xFF, 0xfe2d & 0xFF},
	{0xfe2e & 0xFF, 0xfe2f & 0xFF},
	{0xfe30 & 0xFF, 0xfe52 & 0xFF},
	{0xfe54 & 0xFF, 0xfe66 & 0xFF},
	{0xfe68 & 0xFF, 0xfe6b & 0xFF},
	{0xfe70 & 0xFF, 0xfe74 & 0xFF},
	{0xfe76 & 0xFF, 0xfefc & 0xFF},
	{0xfeff & 0xFF, 0xfeff & 0xFF},
	{0xff01 & 0xFF, 0xff20 & 0xFF},
	{0xff21 & 0xFF, 0xff3a & 0xFF},
	{0xff3b & 0xFF, 0xff40 & 0xFF},
	{0xff41 & 0xFF, 0xff5a & 0xFF},
	{0xff5b & 0xFF, 0xff65 & 0xFF},
	{0xff66 & 0xFF, 0xff6f & 0xFF},
	{0xff70 & 0xFF, 0xff70 & 0xFF},
	{0xff71 & 0xFF, 0xff9d & 0xFF},
	{0xff9e & 0xFF, 0xff9f & 0xFF},
	{0xffa0 & 0xFF, 0xffbe & 0xFF},
	{0xffc2 & 0xFF, 0xffc7 & 0xFF},
	{0xffca & 0xFF, 0xffcf & 0xFF},
	{0xffd2 & 0xFF, 0xffd7 & 0xFF},
	{0xffda & 0xFF, 0xffdc & 0xFF},
	{0xffe0 & 0xFF, 0xffe6 & 0xFF},
	{0xffe8 & 0xFF, 0xffee & 0xFF},
	{0xfff9 & 0xFF, 0xfffd & 0xFF},
	{0x10000 & 0xFF, 0x1000b & 0xFF},
	{0x1000d & 0xFF, 0x10026 & 0xFF},
	{0x10028 & 0xFF, 0x1003a & 0xFF},
	{0x1003c & 0xFF, 0x1003d & 0xFF},
	{0x1003f & 0xFF, 0x1004d & 0xFF},
	{0x10050 & 0xFF, 0x1005d & 0xFF},
	{0x10080 & 0xFF, 0x100fa & 0xFF},
	{0x10100 & 0xFF, 0x10102 & 0xFF},
	{0x10107 & 0xFF, 0x10133 & 0xFF},
	{0x10137 & 0xFF, 0x1013f & 0xFF},
	{0x10140 & 0xFF, 0x1018c & 0xFF},
	{0x10190 & 0xFF, 0x1019b & 0xFF},
	{0x101a0 & 0xFF, 0x101a0 & 0xFF},
	{0x101d0 & 0xFF, 0x101fc & 0xFF},
	{0x101fd & 0xFF, 0x101fd & 0xFF},
	{0x10280 & 0xFF, 0x1029c & 0xFF},
	{0x102a0 & 0xFF, 0x102d0 & 0xFF},
	{0x102e0 & 0xFF, 0x102e0 & 0xFF},
	{0x102e1 & 0xFF, 0x102fb & 0xFF},
	{0x10300 & 0xFF, 0x10323 & 0xFF},
	{0x10330 & 0xFF, 0x1034a & 0xFF},
	{0x10350 & 0xFF, 0x1037a & 0xFF},
	{0x10380 & 0xFF, 0x1039d & 0xFF},
	{0x1039f & 0xFF, 0x1039f & 0xFF},
	{0x103a0 & 0xFF, 0x103c3 & 0xFF},
	{0x103c8 & 0xFF, 0x103d5 & 0xFF},
	{0x10400 & 0xFF, 0x1044f & 0xFF},
	{0x10450 & 0xFF, 0x1047f & 0xFF},
	{0x10480 & 0xFF, 0x1049d & 0xFF},
	{0x104a0 & 0xFF, 0x104a9 & 0xFF},
	{0x10500 & 0xFF, 0x10527 & 0xFF},
	{0x10530 & 0xFF, 0x10563 & 0xFF},
	{0x1056f & 0xFF, 0x1056f & 0xFF},
	{0x10600 & 0xFF, 0x106ff & 0xFF},
	{0x10700 & 0xFF, 0x10736 & 0xFF},
	{0x10740 & 0xFF, 0x10755 & 0xFF},
	{0x10760 & 0xFF, 0x10767 & 0xFF},
	{0x10800 & 0xFF, 0x10805 & 0xFF},
	{0x10808 & 0xFF, 0x10808 & 0xFF},
	{0x1080a & 0xFF, 0x10835 & 0xFF},
	{0x10837 & 0xFF, 0x10838 & 0xFF},
	{0x1083c & 0xFF, 0x1083c & 0xFF},
	{0x1083f & 0xFF, 0x1083f & 0xFF},
	{0x10840 & 0xFF, 0x10855 & 0xFF},
	{0x10857 & 0xFF, 0x1085f & 0xFF},
	{0x10860 & 0xFF, 0x1087f & 0xFF},
	{0x10880 & 0xFF, 0x1089e & 0xFF},
	{0x108a7 & 0xFF, 0x108af & 0xFF},
	{0x108e0 & 0xFF, 0x108f2 & 0xFF},
	{0x108f4 & 0xFF, 0x108f5 & 0xFF},
	{0x108fb & 0xFF, 0x108ff & 0xFF},
	{0x10900 & 0xFF, 0x1091b & 0xFF},
	{0x1091f & 0xFF, 0x1091f & 0xFF},
	{0x10920 & 0xFF, 0x10939 & 0xFF},
	{0x1093f & 0xFF, 0x1093f & 0xFF},
	{0x10980 & 0xFF, 0x1099f & 0xFF},
	{0x109a0 & 0xFF, 0x109b7 & 0xFF},
	{0x109bc & 0xFF, 0x109cf & 0xFF},
	{0x109d2 & 0xFF, 0x109ff & 0xFF},
	{0x10a00 & 0xFF, 0x10a03 & 0xFF},
	{0x10a05 & 0xFF, 0x10a06 & 0xFF},
	{0x10a0c & 0xFF, 0x10a13 & 0xFF},
	{0x10a15 & 0xFF, 0x10a17 & 0xFF},
	{0x10a19 & 0xFF, 0x10a33 & 0xFF},
	{0x10a38 & 0xFF, 0x10a3a & 0xFF},
	{0x10a3f & 0xFF, 0x10a47 & 0xFF},
	{0x10a50 & 0xFF, 0x10a58 & 0xFF},
	{0x10a60 & 0xFF, 0x10a7f & 0xFF},
	{0x10a80 & 0xFF, 0x10a9f & 0xFF},
	{0x10ac0 & 0xFF, 0x10ae6 & 0xFF},
	{0x10aeb & 0xFF, 0x10af6 & 0xFF},
	{0x10b00 & 0xFF, 0x10b35 & 0xFF},
	{0x10b39 & 0xFF, 0x10b3f & 0xFF},
	{0x10b40 & 0xFF, 0x10b55 & 0xFF},
	{0x10b58 & 0xFF, 0x10b5f & 0xFF},
	{0x10b60 & 0xFF, 0x10b72 & 0xFF},
	{0x10b78 & 0xFF, 0x10b7f & 0xFF},
	{0x10b80 & 0xFF, 0x10b91 & 0xFF},
	{0x10b99 & 0xFF, 0x10b9c & 0xFF},
	{0x10ba9 & 0xFF, 0x10baf & 0xFF},
	{0x10c00 & 0xFF, 0x10c48 & 0xFF},
	{0x10c80 & 0xFF, 0x10cb2 & 0xFF},
	{0x10cc0 & 0xFF, 0x10cf2 & 0xFF},
	{0x10cfa & 0xFF, 0x10cff & 0xFF},
	{0x10e60 & 0xFF, 0x10e7e & 0xFF},
	{0x11000 & 0xFF, 0x1104d & 0xFF},
	{0x11052 & 0xFF, 0x1106f & 0xFF},
	{0x1107f & 0xFF, 0x1107f & 0xFF},
	{0x11080 & 0xFF, 0x110c1 & 0xFF},
	{0x110d0 & 0xFF, 0x110e8 & 0xFF},
	{0x110f0 & 0xFF, 0x110f9 & 0xFF},
	{0x11100 & 0xFF, 0x11134 & 0xFF},
	{0x11136 & 0xFF, 0x11143 & 0xFF},
	{0x11150 & 0xFF, 0x11176 & 0xFF},
	{0x11180 & 0xFF, 0x111cd & 0xFF},
	{0x111d0 & 0xFF, 0x111df & 0xFF},
	{0x111e1 & 0xFF, 0x111f4 & 0xFF},
	{0x11200 & 0xFF, 0x11211 & 0xFF},
	{0x11213 & 0xFF, 0x1123d & 0xFF},
	{0x11280 & 0xFF, 0x11286 & 0xFF},
	{0x11288 & 0xFF, 0x11288 & 0xFF},
	{0x1128a & 0xFF, 0x1128d & 0xFF},
	{0x1128f & 0xFF, 0x1129d & 0xFF},
	{0x1129f & 0xFF, 0x112a9 & 0xFF},
	{0x112b0 & 0xFF, 0x112ea & 0xFF},
	{0x112f0 & 0xFF, 0x112f9 & 0xFF},
	{0x11300 & 0xFF, 0x11303 & 0xFF},
	{0x11305 & 0xFF, 0x1130c & 0xFF},
	{0x1130f & 0xFF, 0x11310 & 0xFF},
	{0x11313 & 0xFF, 0x11328 & 0xFF},
	{0x1132a & 0xFF, 0x11330 & 0xFF},
	{0x11332 & 0xFF, 0x11333 & 0xFF},
	{0x11335 & 0xFF, 0x11339 & 0xFF},
	{0x1133c & 0xFF, 0x11344 & 0xFF},
	{0x11347 & 0xFF, 0x11348 & 0xFF},
	{0x1134b & 0xFF, 0x1134d & 0xFF},
	{0x11350 & 0xFF, 0x11350 & 0xFF},
	{0x11357 & 0xFF, 0x11357 & 0xFF},
	{0x1135d & 0xFF, 0x11363 & 0xFF},
	{0x11366 & 0xFF, 0x1136c & 0xFF},
	{0x11370 & 0xFF, 0x11374 & 0xFF},
	{0x11480 & 0xFF, 0x114c7 & 0xFF},
	{0x114d0 & 0xFF, 0x114d9 & 0xFF},
	{0x11580 & 0xFF, 0x115b5 & 0xFF},
	{0x115b8 & 0xFF, 0x115dd & 0xFF},
	{0x11600 & 0xFF, 0x11644 & 0xFF},
	{0x11650 & 0xFF, 0x11659 & 0xFF},
	{0x11680 & 0xFF, 0x116b7 & 0xFF},
	{0x116c0 & 0xFF, 0x116c9 & 0xFF},
	{0x11700 & 0xFF, 0x11719 & 0xFF},
	{0x1171d & 0xFF, 0x1172b & 0xFF},
	{0x11730 & 0xFF, 0x1173f & 0xFF},
	{0x118a0 & 0xFF, 0x118f2 & 0xFF},
	{0x118ff & 0xFF, 0x118ff & 0xFF},
	{0x11ac0 & 0xFF, 0x11af8 & 0xFF},
	{0x12000 & 0xFF, 0x120ff & 0xFF},
	{0x12100 & 0xFF, 0x121ff & 0xFF},
	{0x12200 & 0xFF, 0x122ff & 0xFF},
	{0x12300 & 0xFF, 0x12399 & 0xFF},
	{0x12400 & 0xFF, 0x1246e & 0xFF},
	{0x12470 & 0xFF, 0x12474 & 0xFF},
	{0x12480 & 0xFF, 0x124ff & 0xFF},
	{0x12500 & 0xFF, 0x12543 & 0xFF},
	{0x13000 & 0xFF, 0x130ff & 0xFF},
	{0x13100 & 0xFF, 0x131ff & 0xFF},
	{0x13200 & 0xFF, 0x132ff & 0xFF},
	{0x13300 & 0xFF, 0x133ff & 0xFF},
	{0x13400 & 0xFF, 0x1342e & 0xFF},
	{0x14400 & 0xFF, 0x144ff & 0xFF},
	{0x14500 & 0xFF, 0x145ff & 0xFF},
	{0x14600 & 0xFF, 0x14646 & 0xFF},
	{0x16800 & 0xFF, 0x168ff & 0xFF},
	{0x16900 & 0xFF, 0x169ff & 0xFF},
	{0x16a00 & 0xFF, 0x16a38 & 0xFF},
	{0x16a40 & 0xFF, 0x16a5e & 0xFF},
	{0x16a60 & 0xFF, 0x16a69 & 0xFF},
	{0x16a6e & 0xFF, 0x16a6f & 0xFF},
	{0x16ad0 & 0xFF, 0x16aed & 0xFF},
	{0x16af0 & 0xFF, 0x16af5 & 0xFF},
	{0x16b00 & 0xFF, 0x16b45 & 0xFF},
	{0x16b50 & 0xFF, 0x16b59 & 0xFF},
	{0x16b5b & 0xFF, 0x16b61 & 0xFF},
	{0x16b63 & 0xFF, 0x16b77 & 0xFF},
	{0x16b7d & 0xFF, 0x16b8f & 0xFF},
	{0x16f00 & 0xFF, 0x16f44 & 0xFF},
	{0x16f50 & 0xFF, 0x16f7e & 0xFF},
	{0x16f8f & 0xFF, 0x16f9f & 0xFF},
	{0x1b000 & 0xFF, 0x1b000 & 0xFF},
	{0x1b001 & 0xFF, 0x1b001 & 0xFF},
	{0x1bc00 & 0xFF, 0x1bc6a & 0xFF},
	{0x1bc70 & 0xFF, 0x1bc7c & 0xFF},
	{0x1bc80 & 0xFF, 0x1bc88 & 0xFF},
	{0x1bc90 & 0xFF, 0x1bc99 & 0xFF},
	{0x1bc9c & 0xFF, 0x1bc9f & 0xFF},
	{0x1bca0 & 0xFF, 0x1bca3 & 0xFF},
	{0x1d000 & 0xFF, 0x1d0f5 & 0xFF},
	{0x1d100 & 0xFF, 0x1d126 & 0xFF},
	{0x1d129 & 0xFF, 0x1d166 & 0xFF},
	{0x1d167 & 0xFF, 0x1d169 & 0xFF},
	{0x1d16a & 0xFF, 0x1d17a & 0xFF},
	{0x1d17b & 0xFF, 0x1d182 & 0xFF},
	{0x1d183 & 0xFF, 0x1d184 & 0xFF},
	{0x1d185 & 0xFF, 0x1d18b & 0xFF},
	{0x1d18c & 0xFF, 0x1d1a9 & 0xFF},
	{0x1d1aa & 0xFF, 0x1d1ad & 0xFF},
	{0x1d1ae & 0xFF, 0x1d1e8 & 0xFF},
	{0x1d200 & 0xFF, 0x1d245 & 0xFF},
	{0x1d300 & 0xFF, 0x1d356 & 0xFF},
	{0x1d360 & 0xFF, 0x1d371 & 0xFF},
	{0x1d400 & 0xFF, 0x1d454 & 0xFF},
	{0x1d456 & 0xFF, 0x1d49c & 0xFF},
	{0x1d49e & 0xFF, 0x1d49f & 0xFF},
	{0x1d4a2 & 0xFF, 0x1d4a2 & 0xFF},
	{0x1d4a5 & 0xFF, 0x1d4a6 & 0xFF},
	{0x1d4a9 & 0xFF, 0x1d4ac & 0xFF},
	{0x1d4ae & 0xFF, 0x1d4b9 & 0xFF},
	{0x1d4bb & 0xFF, 0x1d4bb & 0xFF},
	{0x1d4bd & 0xFF, 0x1d4c3 & 0xFF},
	{0x1d4c5 & 0xFF, 0x1d4ff & 0xFF},
	{0x1d500 & 0xFF, 0x1d505 & 0xFF},
	{0x1d507 & 0xFF, 0x1d50a & 0xFF},
	{0x1d50d & 0xFF, 0x1d514 & 0xFF},
	{0x1d516 & 0xFF, 0x1d51c & 0xFF},
	{0x1d51e & 0xFF, 0x1d539 & 0xFF},
	{0x1d53b & 0xFF, 0x1d53e & 0xFF},
	{0x1d540 & 0xFF, 0x1d544 & 0xFF},
	{0x1d546 & 0xFF, 0x1d546 & 0xFF},
	{0x1d54a & 0xFF, 0x1d550 & 0xFF},
	{0x1d552 & 0xFF, 0x1d5ff & 0xFF},
	{0x1d600 & 0xFF, 0x1d6a5 & 0xFF},
	{0x1d6a8 & 0xFF, 0x1d6ff & 0xFF},
	{0x1d700 & 0xFF, 0x1d7cb & 0xFF},
	{0x1d7ce & 0xFF, 0x1d7ff & 0xFF},
	{0x1d800 & 0xFF, 0x1d8ff & 0xFF},
	{0x1d900 & 0xFF, 0x1d9ff & 0xFF},
	{0x1da00 & 0xFF, 0x1da8b & 0xFF},
	{0x1da9b & 0xFF, 0x1da9f & 0xFF},
	{0x1daa1 & 0xFF, 0x1daaf & 0xFF},
	{0x1e800 & 0xFF, 0x1e8c4 & 0xFF},
	{0x1e8c7 & 0xFF, 0x1e8d6 & 0xFF},
	{0x1ee00 & 0xFF, 0x1ee03 & 0xFF},
	{0x1ee05 & 0xFF, 0x1ee1f & 0xFF},
	{0x1ee21 & 0xFF, 0x1ee22 & 0xFF},
	{0x1ee24 & 0xFF, 0x1ee24 & 0xFF},
	{0x1ee27 & 0xFF, 0x1ee27 & 0xFF},
	{0x1ee29 & 0xFF, 0x1ee32 & 0xFF},
	{0x1ee34 & 0xFF, 0x1ee37 & 0xFF},
	{0x1ee39 & 0xFF, 0x1ee39 & 0xFF},
	{0x1ee3b & 0xFF, 0x1ee3b & 0xFF},
	{0x1ee42 & 0xFF, 0x1ee42 & 0xFF},
	{0x1ee47 & 0xFF, 0x1ee47 & 0xFF},
	{0x1ee49 & 0xFF, 0x1ee49 & 0xFF},
	{0x1ee4b & 0xFF, 0x1ee4b & 0xFF},
	{0x1ee4d & 0xFF, 0x1ee4f & 0xFF},
	{0x1ee51 & 0xFF, 0x1ee52 & 0xFF},
	{0x1ee54 & 0xFF, 0x1ee54 & 0xFF},
	{0x1ee57 & 0xFF, 0x1ee57 & 0xFF},
	{0x1ee59 & 0xFF, 0x1ee59 & 0xFF},
	{0x1ee5b & 0xFF, 0x1ee5b & 0xFF},
	{0x1ee5d & 0xFF, 0x1ee5d & 0xFF},
	{0x1ee5f & 0xFF, 0x1ee5f & 0xFF},
	{0x1ee61 & 0xFF, 0x1ee62 & 0xFF},
	{0x1ee64 & 0xFF, 0x1ee64 & 0xFF},
	{0x1ee67 & 0xFF, 0x1ee6a & 0xFF},
	{0x1ee6c & 0xFF, 0x1ee72 & 0xFF},
	{0x1ee74 & 0xFF, 0x1ee77 & 0xFF},
	{0x1ee79 & 0xFF, 0x1ee7c & 0xFF},
	{0x1ee7e & 0xFF, 0x1ee7e & 0xFF},
	{0x1ee80 & 0xFF, 0x1ee89 & 0xFF},
	{0x1ee8b & 0xFF, 0x1ee9b & 0xFF},
	{0x1eea1 & 0xFF, 0x1eea3 & 0xFF},
	{0x1eea5 & 0xFF, 0x1eea9 & 0xFF},
	{0x1eeab & 0xFF, 0x1eebb & 0xFF},
	{0x1eef0 & 0xFF, 0x1eef1 & 0xFF},
	{0x1f000 & 0xFF, 0x1f02b & 0xFF},
	{0x1f030 & 0xFF, 0x1f093 & 0xFF},
	{0x1f0a0 & 0xFF, 0x1f0ae & 0xFF},
	{0x1f0b1 & 0xFF, 0x1f0bf & 0xFF},
	{0x1f0c1 & 0xFF, 0x1f0cf & 0xFF},
	{0x1f0d1 & 0xFF, 0x1f0f5 & 0xFF},
	{0x1f100 & 0xFF, 0x1f10c & 0xFF},
	{0x1f110 & 0xFF, 0x1f12e & 0xFF},
	{0x1f130 & 0xFF, 0x1f16b & 0xFF},
	{0x1f170 & 0xFF, 0x1f19a & 0xFF},
	{0x1f1e6 & 0xFF, 0x1f1ff & 0xFF},
	{0x1f200 & 0xFF, 0x1f200 & 0xFF},
	{0x1f201 & 0xFF, 0x1f202 & 0xFF},
	{0x1f210 & 0xFF, 0x1f23a & 0xFF},
	{0x1f240 & 0xFF, 0x1f248 & 0xFF},
	{0x1f250 & 0xFF, 0x1f251 & 0xFF},
	{0x1f300 & 0xFF, 0x1f3ff & 0xFF},
	{0x1f400 & 0xFF, 0x1f4ff & 0xFF},
	{0x1f500 & 0xFF, 0x1f579 & 0xFF},
	{0x1f57b & 0xFF, 0x1f5a3 & 0xFF},
	{0x1f5a5 & 0xFF, 0x1f5ff & 0xFF},
	{0x1f600 & 0xFF, 0x1f6d0 & 0xFF},
	{0x1f6e0 & 0xFF, 0x1f6ec & 0xFF},
	{0x1f6f0 & 0xFF, 0x1f6f3 & 0xFF},
	{0x1f700 & 0xFF, 0x1f773 & 0xFF},
	{0x1f780 & 0xFF, 0x1f7d4 & 0xFF},
	{0x1f800 & 0xFF, 0x1f80b & 0xFF},
	{0x1f810 & 0xFF, 0x1f847 & 0xFF},
	{0x1f850 & 0xFF, 0x1f859 & 0xFF},
	{0x1f860 & 0xFF, 0x1f887 & 0xFF},
	{0x1f890 & 0xFF, 0x1f8ad & 0xFF},
	{0x1f910 & 0xFF, 0x1f918 & 0xFF},
	{0x1f980 & 0xFF, 0x1f984 & 0xFF},
	{0x1f9c0 & 0xFF, 0x1f9c0 & 0xFF},
	{0x20000 & 0xFF, 0x200ff & 0xFF},
	{0x20100 & 0xFF, 0x201ff & 0xFF},
	{0x20200 & 0xFF, 0x202ff & 0xFF},
	{0x20300 & 0xFF, 0x203ff & 0xFF},
	{0x20400 & 0xFF, 0x204ff & 0xFF},
	{0x20500 & 0xFF, 0x205ff & 0xFF},
	{0x20600 & 0xFF, 0x206ff & 0xFF},
	{0x20700 & 0xFF, 0x207ff & 0xFF},
	{0x20800 & 0xFF, 0x208ff & 0xFF},
	{0x20900 & 0xFF, 0x209ff & 0xFF},
	{0x20a00 & 0xFF, 0x20aff & 0xFF},
	{0x20b00 & 0xFF, 0x20bff & 0xFF},
	{0x20c00 & 0xFF, 0x20cff & 0xFF},
	{0x20d00 & 0xFF, 0x20dff & 0xFF},
	{0x20e00 & 0xFF, 0x20eff & 0xFF},
	{0x20f00 & 0xFF, 0x20fff & 0xFF},
	{0x21000 & 0xFF, 0x210ff & 0xFF},
	{0x21100 & 0xFF, 0x211ff & 0xFF},
	{0x21200 & 0xFF, 0x212ff & 0xFF},
	{0x21300 & 0xFF, 0x213ff & 0xFF},
	{0x21400 & 0xFF, 0x214ff & 0xFF},
	{0x21500 & 0xFF, 0x215ff & 0xFF},
	{0x21600 & 0xFF, 0x216ff & 0xFF},
	{0x21700 & 0xFF, 0x217ff & 0xFF},
	{0x21800 & 0xFF, 0x218ff & 0xFF},
	{0x21900 & 0xFF, 0x219ff & 0xFF},
	{0x21a00 & 0xFF, 0x21aff & 0xFF},
	{0x21b00 & 0xFF, 0x21bff & 0xFF},
	{0x21c00 & 0xFF, 0x21cff & 0xFF},
	{0x21d00 & 0xFF, 0x21dff & 0xFF},
	{0x21e00 & 0xFF, 0x21eff & 0xFF},
	{0x21f00 & 0xFF, 0x21fff & 0xFF},
	{0x22000 & 0xFF, 0x220ff & 0xFF},
	{0x22100 & 0xFF, 0x221ff & 0xFF},
	{0x22200 & 0xFF, 0x222ff & 0xFF},
	{0x22300 & 0xFF, 0x223ff & 0xFF},
	{0x22400 & 0xFF, 0x224ff & 0xFF},
	{0x22500 & 0xFF, 0x225ff & 0xFF},
	{0x22600 & 0xFF, 0x226ff & 0xFF},
	{0x22700 & 0xFF, 0x227ff & 0xFF},
	{0x22800 & 0xFF, 0x228ff & 0xFF},
	{0x22900 & 0xFF, 0x229ff & 0xFF},
	{0x22a00 & 0xFF, 0x22aff & 0xFF},
	{0x22b00 & 0xFF, 0x22bff & 0xFF},
	{0x22c00 & 0xFF, 0x22cff & 0xFF},
	{0x22d00 & 0xFF, 0x22dff & 0xFF},
	{0x22e00 & 0xFF, 0x22eff & 0xFF},
	{0x22f00 & 0xFF, 0x22fff & 0xFF},
	{0x23000 & 0xFF, 0x230ff & 0xFF},
	{0x23100 & 0xFF, 0x231ff & 0xFF},
	{0x23200 & 0xFF, 0x232ff & 0xFF},
	{0x23300 & 0xFF, 0x233ff & 0xFF},
	{0x23400 & 0xFF, 0x234ff & 0xFF},
	{0x23500 & 0xFF, 0x235ff & 0xFF},
	{0x23600 & 0xFF, 0x236ff & 0xFF},
	{0x23700 & 0xFF, 0x237ff & 0xFF},
	{0x23800 & 0xFF, 0x238ff & 0xFF},
	{0x23900 & 0xFF, 0x239ff & 0xFF},
	{0x23a00 & 0xFF, 0x23aff & 0xFF},
	{0x23b00 & 0xFF, 0x23bff & 0xFF},
	{0x23c00 & 0xFF, 0x23cff & 0xFF},
	{0x23d00 & 0xFF, 0x23dff & 0xFF},
	{0x23e00 & 0xFF, 0x23eff & 0xFF},
	{0x23f00 & 0xFF, 0x23fff & 0xFF},
	{0x24000 & 0xFF, 0x240ff & 0xFF},
	{0x24100 & 0xFF, 0x241ff & 0xFF},
	{0x24200 & 0xFF, 0x242ff & 0xFF},
	{0x24300 & 0xFF, 0x243ff & 0xFF},
	{0x24400 & 0xFF, 0x244ff & 0xFF},
	{0x24500 & 0xFF, 0x245ff & 0xFF},
	{0x24600 & 0xFF, 0x246ff & 0xFF},
	{0x24700 & 0xFF, 0x247ff & 0xFF},
	{0x24800 & 0xFF, 0x248ff & 0xFF},
	{0x24900 & 0xFF, 0x249ff & 0xFF},
	{0x24a00 & 0xFF, 0x24aff & 0xFF},
	{0x24b00 & 0xFF, 0x24bff & 0xFF},
	{0x24c00 & 0xFF, 0x24cff & 0xFF},
	{0x24d00 & 0xFF, 0x24dff & 0xFF},
	{0x24e00 & 0xFF, 0x24eff & 0xFF},
	{0x24f00 & 0xFF, 0x24fff & 0xFF},
	{0x25000 & 0xFF, 0x250ff & 0xFF},
	{0x25100 & 0xFF, 0x251ff & 0xFF},
	{0x25200 & 0xFF, 0x252ff & 0xFF},
	{0x25300 & 0xFF, 0x253ff & 0xFF},
	{0x25400 & 0xFF, 0x254ff & 0xFF},
	{0x25500 & 0xFF, 0x255ff & 0xFF},
	{0x25600 & 0xFF, 0x256ff & 0xFF},
	{0x25700 & 0xFF, 0x257ff & 0xFF},
	{0x25800 & 0xFF, 0x258ff & 0xFF},
	{0x25900 & 0xFF, 0x259ff & 0xFF},
	{0x25a00 & 0xFF, 0x25aff & 0xFF},
	{0x25b00 & 0xFF, 0x25bff & 0xFF},
	{0x25c00 & 0xFF, 0x25cff & 0xFF},
	{0x25d00 & 0xFF, 0x25dff & 0xFF},
	{0x25e00 & 0xFF, 0x25eff & 0xFF},
	{0x25f00 & 0xFF, 0x25fff & 0xFF},
	{0x26000 & 0xFF, 0x260ff & 0xFF},
	{0x26100 & 0xFF, 0x261ff & 0xFF},
	{0x26200 & 0xFF, 0x262ff & 0xFF},
	{0x26300 & 0xFF, 0x263ff & 0xFF},
	{0x26400 & 0xFF, 0x264ff & 0xFF},
	{0x26500 & 0xFF, 0x265ff & 0xFF},
	{0x26600 & 0xFF, 0x266ff & 0xFF},
	{0x26700 & 0xFF, 0x267ff & 0xFF},
	{0x26800 & 0xFF, 0x268ff & 0xFF},
	{0x26900 & 0xFF, 0x269ff & 0xFF},
	{0x26a00 & 0xFF, 0x26aff & 0xFF},
	{0x26b00 & 0xFF, 0x26bff & 0xFF},
	{0x26c00 & 0xFF, 0x26cff & 0xFF},
	{0x26d00 & 0xFF, 0x26dff & 0xFF},
	{0x26e00 & 0xFF, 0x26eff & 0xFF},
	{0x26f00 & 0xFF, 0x26fff & 0xFF},
	{0x27000 & 0xFF, 0x270ff & 0xFF},
	{0x27100 & 0xFF, 0x271ff & 0xFF},
	{0x27200 & 0xFF, 0x272ff & 0xFF},
	{0x27300 & 0xFF, 0x273ff & 0xFF},
	{0x27400 & 0xFF, 0x274ff & 0xFF},
	{0x27500 & 0xFF, 0x275ff & 0xFF},
	{0x27600 & 0xFF, 0x276ff & 0xFF},
	{0x27700 & 0xFF, 0x277ff & 0xFF},
	{0x27800 & 0xFF, 0x278ff & 0xFF},
	{0x27900 & 0xFF, 0x279ff & 0xFF},
	{0x27a00 & 0xFF, 0x27aff & 0xFF},
	{0x27b00 & 0xFF, 0x27bff & 0xFF},
	{0x27c00 & 0xFF, 0x27cff & 0xFF},
	{0x27d00 & 0xFF, 0x27dff & 0xFF},
	{0x27e00 & 0xFF, 0x27eff & 0xFF},
	{0x27f00 & 0xFF, 0x27fff & 0xFF},
	{0x28000 & 0xFF, 0x280ff & 0xFF},
	{0x28100 & 0xFF, 0x281ff & 0xFF},
	{0x28200 & 0xFF, 0x282ff & 0xFF},
	{0x28300 & 0xFF, 0x283ff & 0xFF},
	{0x28400 & 0xFF, 0x284ff & 0xFF},
	{0x28500 & 0xFF, 0x285ff & 0xFF},
	{0x28600 & 0xFF, 0x286ff & 0xFF},
	{0x28700 & 0xFF, 0x287ff & 0xFF},
	{0x28800 & 0xFF, 0x288ff & 0xFF},
	{0x28900 & 0xFF, 0x289ff & 0xFF},
	{0x28a00 & 0xFF, 0x28aff & 0xFF},
	{0x28b00 & 0xFF, 0x28bff & 0xFF},
	{0x28c00 & 0xFF, 0x28cff & 0xFF},
	{0x28d00 & 0xFF, 0x28dff & 0xFF},
	{0x28e00 & 0xFF, 0x28eff & 0xFF},
	{0x28f00 & 0xFF, 0x28fff & 0xFF},
	{0x29000 & 0xFF, 0x290ff & 0xFF},
	{0x29100 & 0xFF, 0x291ff & 0xFF},
	{0x29200 & 0xFF, 0x292ff & 0xFF},
	{0x29300 & 0xFF, 0x293ff & 0xFF},
	{0x29400 & 0xFF, 0x294ff & 0xFF},
	{0x29500 & 0xFF, 0x295ff & 0xFF},
	{0x29600 & 0xFF, 0x296ff & 0xFF},
	{0x29700 & 0xFF, 0x297ff & 0xFF},
	{0x29800 & 0xFF, 0x298ff & 0xFF},
	{0x29900 & 0xFF, 0x299ff & 0xFF},
	{0x29a00 & 0xFF, 0x29aff & 0xFF},
	{0x29b00 & 0xFF, 0x29bff & 0xFF},
	{0x29c00 & 0xFF, 0x29cff & 0xFF},
	{0x29d00 & 0xFF, 0x29dff & 0xFF},
	{0x29e00 & 0xFF, 0x29eff & 0xFF},
	{0x29f00 & 0xFF, 0x29fff & 0xFF},
	{0x2a000 & 0xFF, 0x2a0ff & 0xFF},
	{0x2a100 & 0xFF, 0x2a1ff & 0xFF},
	{0x2a200 & 0xFF, 0x2a2ff & 0xFF},
	{0x2a300 & 0xFF, 0x2a3ff & 0xFF},
	{0x2a400 & 0xFF, 0x2a4ff & 0xFF},
	{0x2a500 & 0xFF, 0x2a5ff & 0xFF},
	{0x2a600 & 0xFF, 0x2a6d6 & 0xFF},
	{0x2a700 & 0xFF, 0x2a7ff & 0xFF},
	{0x2a800 & 0xFF, 0x2a8ff & 0xFF},
	{0x2a900 & 0xFF, 0x2a9ff & 0xFF},
	{0x2aa00 & 0xFF, 0x2aaff & 0xFF},
	{0x2ab00 & 0xFF, 0x2abff & 0xFF},
	{0x2ac00 & 0xFF, 0x2acff & 0xFF},
	{0x2ad00 & 0xFF, 0x2adff & 0xFF},
	{0x2ae00 & 0xFF, 0x2aeff & 0xFF},
	{0x2af00 & 0xFF, 0x2afff & 0xFF},
	{0x2b000 & 0xFF, 0x2b0ff & 0xFF},
	{0x2b100 & 0xFF, 0x2b1ff & 0xFF},
	{0x2b200 & 0xFF, 0x2b2ff & 0xFF},
	{0x2b300 & 0xFF, 0x2b3ff & 0xFF},
	{0x2b400 & 0xFF, 0x2b4ff & 0xFF},
	{0x2b500 & 0xFF, 0x2b5ff & 0xFF},
	{0x2b600 & 0xFF, 0x2b6ff & 0xFF},
	{0x2b700 & 0xFF, 0x2b734 & 0xFF},
	{0x2b740 & 0xFF, 0x2b7ff & 0xFF},
	{0x2b800 & 0xFF, 0x2b81d & 0xFF},
	{0x2b820 & 0xFF, 0x2b8ff & 0xFF},
	{0x2b900 & 0xFF, 0x2b9ff & 0xFF},
	{0x2ba00 & 0xFF, 0x2baff & 0xFF},
	{0x2bb00 & 0xFF, 0x2bbff & 0xFF},
	{0x2bc00 & 0xFF, 0x2bcff & 0xFF},
	{0x2bd00 & 0xFF, 0x2bdff & 0xFF},
	{0x2be00 & 0xFF, 0x2beff & 0xFF},
	{0x2bf00 & 0xFF, 0x2bfff & 0xFF},
	{0x2c000 & 0xFF, 0x2c0ff & 0xFF},
	{0x2c100 & 0xFF, 0x2c1ff & 0xFF},
	{0x2c200 & 0xFF, 0x2c2ff & 0xFF},
	{0x2c300 & 0xFF, 0x2c3ff & 0xFF},
	{0x2c400 & 0xFF, 0x2c4ff & 0xFF},
	{0x2c500 & 0xFF, 0x2c5ff & 0xFF},
	{0x2c600 & 0xFF, 0x2c6ff & 0xFF},
	{0x2c700 & 0xFF, 0x2c7ff & 0xFF},
	{0x2c800 & 0xFF, 0x2c8ff & 0xFF},
	{0x2c900 & 0xFF, 0x2c9ff & 0xFF},
	{0x2ca00 & 0xFF, 0x2caff & 0xFF},
	{0x2cb00 & 0xFF, 0x2cbff & 0xFF},
	{0x2cc00 & 0xFF, 0x2ccff & 0xFF},
	{0x2cd00 & 0xFF, 0x2cdff & 0xFF},
	{0x2ce00 & 0xFF, 0x2cea1 & 0xFF},
	{0x2f800 & 0xFF, 0x2f8ff & 0xFF},
	{0x2f900 & 0xFF, 0x2f9ff & 0xFF},
	{0x2fa00 & 0xFF, 0x2fa1d & 0xFF},
	{0xe0001 & 0xFF, 0xe0001 & 0xFF},
	{0xe0020 & 0xFF, 0xe007f & 0xFF},
	{0xe0100 & 0xFF, 0xe01ef & 0xFF}};

static const uint8_t unicode_classtab[]={
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_latin,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_bopomofo,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_coptic,
	unicode_script_greek,
	unicode_script_cyrillic,
	unicode_script_inherited,
	unicode_script_cyrillic,
	unicode_script_cyrillic,
	unicode_script_armenian,
	unicode_script_armenian,
	unicode_script_armenian,
	unicode_script_common,
	unicode_script_armenian,
	unicode_script_armenian,
	unicode_script_hebrew,
	unicode_script_hebrew,
	unicode_script_hebrew,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_arabic,
	unicode_script_inherited,
	unicode_script_arabic,
	unicode_script_inherited,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_arabic,
	unicode_script_syriac,
	unicode_script_syriac,
	unicode_script_syriac,
	unicode_script_arabic,
	unicode_script_thaana,
	unicode_script_nko,
	unicode_script_samaritan,
	unicode_script_samaritan,
	unicode_script_mandaic,
	unicode_script_mandaic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_devanagari,
	unicode_script_inherited,
	unicode_script_devanagari,
	unicode_script_common,
	unicode_script_devanagari,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_bengali,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gurmukhi,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_gujarati,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_oriya,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_tamil,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_telugu,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_kannada,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_malayalam,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_sinhala,
	unicode_script_thai,
	unicode_script_common,
	unicode_script_thai,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_lao,
	unicode_script_tibetan,
	unicode_script_tibetan,
	unicode_script_tibetan,
	unicode_script_tibetan,
	unicode_script_tibetan,
	unicode_script_tibetan,
	unicode_script_common,
	unicode_script_tibetan,
	unicode_script_myanmar,
	unicode_script_georgian,
	unicode_script_georgian,
	unicode_script_georgian,
	unicode_script_georgian,
	unicode_script_common,
	unicode_script_georgian,
	unicode_script_hangul,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_cherokee,
	unicode_script_cherokee,
	unicode_script_canadian_aboriginal,
	unicode_script_canadian_aboriginal,
	unicode_script_canadian_aboriginal,
	unicode_script_ogham,
	unicode_script_runic,
	unicode_script_common,
	unicode_script_runic,
	unicode_script_tagalog,
	unicode_script_tagalog,
	unicode_script_hanunoo,
	unicode_script_common,
	unicode_script_buhid,
	unicode_script_tagbanwa,
	unicode_script_tagbanwa,
	unicode_script_tagbanwa,
	unicode_script_khmer,
	unicode_script_khmer,
	unicode_script_khmer,
	unicode_script_mongolian,
	unicode_script_common,
	unicode_script_mongolian,
	unicode_script_common,
	unicode_script_mongolian,
	unicode_script_mongolian,
	unicode_script_mongolian,
	unicode_script_mongolian,
	unicode_script_canadian_aboriginal,
	unicode_script_limbu,
	unicode_script_limbu,
	unicode_script_limbu,
	unicode_script_limbu,
	unicode_script_limbu,
	unicode_script_tai_le,
	unicode_script_tai_le,
	unicode_script_new_tai_lue,
	unicode_script_new_tai_lue,
	unicode_script_new_tai_lue,
	unicode_script_new_tai_lue,
	unicode_script_khmer,
	unicode_script_buginese,
	unicode_script_buginese,
	unicode_script_tai_tham,
	unicode_script_tai_tham,
	unicode_script_tai_tham,
	unicode_script_tai_tham,
	unicode_script_tai_tham,
	unicode_script_inherited,
	unicode_script_balinese,
	unicode_script_balinese,
	unicode_script_sundanese,
	unicode_script_batak,
	unicode_script_batak,
	unicode_script_lepcha,
	unicode_script_lepcha,
	unicode_script_lepcha,
	unicode_script_ol_chiki,
	unicode_script_sundanese,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_latin,
	unicode_script_greek,
	unicode_script_cyrillic,
	unicode_script_latin,
	unicode_script_greek,
	unicode_script_latin,
	unicode_script_greek,
	unicode_script_latin,
	unicode_script_cyrillic,
	unicode_script_latin,
	unicode_script_greek,
	unicode_script_inherited,
	unicode_script_inherited,
	unicode_script_latin,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_braille,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_glagolitic,
	unicode_script_glagolitic,
	unicode_script_latin,
	unicode_script_coptic,
	unicode_script_coptic,
	unicode_script_georgian,
	unicode_script_georgian,
	unicode_script_georgian,
	unicode_script_tifinagh,
	unicode_script_tifinagh,
	unicode_script_tifinagh,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_cyrillic,
	unicode_script_common,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_common,
	unicode_script_common,
	unicode_script_han,
	unicode_script_common,
	unicode_script_han,
	unicode_script_common,
	unicode_script_han,
	unicode_script_inherited,
	unicode_script_hangul,
	unicode_script_common,
	unicode_script_han,
	unicode_script_common,
	unicode_script_hiragana,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_hiragana,
	unicode_script_common,
	unicode_script_katakana,
	unicode_script_common,
	unicode_script_katakana,
	unicode_script_bopomofo,
	unicode_script_hangul,
	unicode_script_common,
	unicode_script_bopomofo,
	unicode_script_common,
	unicode_script_katakana,
	unicode_script_hangul,
	unicode_script_common,
	unicode_script_hangul,
	unicode_script_common,
	unicode_script_katakana,
	unicode_script_katakana,
	unicode_script_common,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_common,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_yi,
	unicode_script_yi,
	unicode_script_yi,
	unicode_script_yi,
	unicode_script_yi,
	unicode_script_yi,
	unicode_script_lisu,
	unicode_script_vai,
	unicode_script_vai,
	unicode_script_cyrillic,
	unicode_script_bamum,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_latin,
	unicode_script_latin,
	unicode_script_syloti_nagri,
	unicode_script_common,
	unicode_script_phags_pa,
	unicode_script_saurashtra,
	unicode_script_saurashtra,
	unicode_script_devanagari,
	unicode_script_kayah_li,
	unicode_script_common,
	unicode_script_kayah_li,
	unicode_script_rejang,
	unicode_script_rejang,
	unicode_script_hangul,
	unicode_script_javanese,
	unicode_script_common,
	unicode_script_javanese,
	unicode_script_javanese,
	unicode_script_myanmar,
	unicode_script_cham,
	unicode_script_cham,
	unicode_script_cham,
	unicode_script_cham,
	unicode_script_myanmar,
	unicode_script_tai_viet,
	unicode_script_tai_viet,
	unicode_script_meetei_mayek,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_ethiopic,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_greek,
	unicode_script_cherokee,
	unicode_script_meetei_mayek,
	unicode_script_meetei_mayek,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_latin,
	unicode_script_armenian,
	unicode_script_hebrew,
	unicode_script_hebrew,
	unicode_script_hebrew,
	unicode_script_hebrew,
	unicode_script_hebrew,
	unicode_script_hebrew,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_cyrillic,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_latin,
	unicode_script_common,
	unicode_script_katakana,
	unicode_script_common,
	unicode_script_katakana,
	unicode_script_common,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_hangul,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_linear_b,
	unicode_script_linear_b,
	unicode_script_linear_b,
	unicode_script_linear_b,
	unicode_script_linear_b,
	unicode_script_linear_b,
	unicode_script_linear_b,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_lycian,
	unicode_script_carian,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_old_italic,
	unicode_script_gothic,
	unicode_script_old_permic,
	unicode_script_ugaritic,
	unicode_script_ugaritic,
	unicode_script_old_persian,
	unicode_script_old_persian,
	unicode_script_deseret,
	unicode_script_shavian,
	unicode_script_osmanya,
	unicode_script_osmanya,
	unicode_script_elbasan,
	unicode_script_caucasian_albanian,
	unicode_script_caucasian_albanian,
	unicode_script_linear_a,
	unicode_script_linear_a,
	unicode_script_linear_a,
	unicode_script_linear_a,
	unicode_script_cypriot,
	unicode_script_cypriot,
	unicode_script_cypriot,
	unicode_script_cypriot,
	unicode_script_cypriot,
	unicode_script_cypriot,
	unicode_script_imperial_aramaic,
	unicode_script_imperial_aramaic,
	unicode_script_palmyrene,
	unicode_script_nabataean,
	unicode_script_nabataean,
	unicode_script_hatran,
	unicode_script_hatran,
	unicode_script_hatran,
	unicode_script_phoenician,
	unicode_script_phoenician,
	unicode_script_lydian,
	unicode_script_lydian,
	unicode_script_meroitic_hieroglyphs,
	unicode_script_meroitic_cursive,
	unicode_script_meroitic_cursive,
	unicode_script_meroitic_cursive,
	unicode_script_kharoshthi,
	unicode_script_kharoshthi,
	unicode_script_kharoshthi,
	unicode_script_kharoshthi,
	unicode_script_kharoshthi,
	unicode_script_kharoshthi,
	unicode_script_kharoshthi,
	unicode_script_kharoshthi,
	unicode_script_old_south_arabian,
	unicode_script_old_north_arabian,
	unicode_script_manichaean,
	unicode_script_manichaean,
	unicode_script_avestan,
	unicode_script_avestan,
	unicode_script_inscriptional_parthian,
	unicode_script_inscriptional_parthian,
	unicode_script_inscriptional_pahlavi,
	unicode_script_inscriptional_pahlavi,
	unicode_script_psalter_pahlavi,
	unicode_script_psalter_pahlavi,
	unicode_script_psalter_pahlavi,
	unicode_script_old_turkic,
	unicode_script_old_hungarian,
	unicode_script_old_hungarian,
	unicode_script_old_hungarian,
	unicode_script_arabic,
	unicode_script_brahmi,
	unicode_script_brahmi,
	unicode_script_brahmi,
	unicode_script_kaithi,
	unicode_script_sora_sompeng,
	unicode_script_sora_sompeng,
	unicode_script_chakma,
	unicode_script_chakma,
	unicode_script_mahajani,
	unicode_script_sharada,
	unicode_script_sharada,
	unicode_script_sinhala,
	unicode_script_khojki,
	unicode_script_khojki,
	unicode_script_multani,
	unicode_script_multani,
	unicode_script_multani,
	unicode_script_multani,
	unicode_script_multani,
	unicode_script_khudawadi,
	unicode_script_khudawadi,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_grantha,
	unicode_script_tirhuta,
	unicode_script_tirhuta,
	unicode_script_siddham,
	unicode_script_siddham,
	unicode_script_modi,
	unicode_script_modi,
	unicode_script_takri,
	unicode_script_takri,
	unicode_script_ahom,
	unicode_script_ahom,
	unicode_script_ahom,
	unicode_script_warang_citi,
	unicode_script_warang_citi,
	unicode_script_pau_cin_hau,
	unicode_script_cuneiform,
	unicode_script_cuneiform,
	unicode_script_cuneiform,
	unicode_script_cuneiform,
	unicode_script_cuneiform,
	unicode_script_cuneiform,
	unicode_script_cuneiform,
	unicode_script_cuneiform,
	unicode_script_egyptian_hieroglyphs,
	unicode_script_egyptian_hieroglyphs,
	unicode_script_egyptian_hieroglyphs,
	unicode_script_egyptian_hieroglyphs,
	unicode_script_egyptian_hieroglyphs,
	unicode_script_anatolian_hieroglyphs,
	unicode_script_anatolian_hieroglyphs,
	unicode_script_anatolian_hieroglyphs,
	unicode_script_bamum,
	unicode_script_bamum,
	unicode_script_bamum,
	unicode_script_mro,
	unicode_script_mro,
	unicode_script_mro,
	unicode_script_bassa_vah,
	unicode_script_bassa_vah,
	unicode_script_pahawh_hmong,
	unicode_script_pahawh_hmong,
	unicode_script_pahawh_hmong,
	unicode_script_pahawh_hmong,
	unicode_script_pahawh_hmong,
	unicode_script_miao,
	unicode_script_miao,
	unicode_script_miao,
	unicode_script_katakana,
	unicode_script_hiragana,
	unicode_script_duployan,
	unicode_script_duployan,
	unicode_script_duployan,
	unicode_script_duployan,
	unicode_script_duployan,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_inherited,
	unicode_script_common,
	unicode_script_greek,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_signwriting,
	unicode_script_signwriting,
	unicode_script_signwriting,
	unicode_script_signwriting,
	unicode_script_signwriting,
	unicode_script_mende_kikakui,
	unicode_script_mende_kikakui,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_arabic,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_hiragana,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_common,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_han,
	unicode_script_common,
	unicode_script_common,
	unicode_script_inherited};

static const size_t unicode_indextab[]={
	0,
	14,
	15,
	21,
	38,
	41,
	51,
	68,
	74,
	80,
	99,
	129,
	159,
	186,
	209,
	230,
	238,
	245,
	246,
	260,
	267,
	268,
	269,
	274,
	285,
	294,
	306,
	314,
	319,
	335,
	348,
	349,
	365,
	376,
	388,
	389,
	390,
	393,
	394,
	395,
	396,
	397,
	398,
	399,
	405,
	410,
	426,
	429,
	431,
	450,
	456,
	461,
	463,
	464,
	465,
	466,
	467,
	468,
	469,
	470,
	471,
	472,
	473,
	474,
	475,
	476,
	477,
	478,
	479,
	480,
	481,
	482,
	483,
	484,
	485,
	486,
	487,
	488,
	490,
	491,
	492,
	493,
	494,
	495,
	496,
	497,
	498,
	499,
	500,
	501,
	502,
	503,
	504,
	505,
	506,
	507,
	508,
	509,
	510,
	511,
	512,
	513,
	514,
	515,
	516,
	517,
	518,
	519,
	520,
	521,
	522,
	523,
	524,
	525,
	526,
	527,
	528,
	529,
	530,
	531,
	532,
	533,
	534,
	535,
	536,
	537,
	538,
	539,
	540,
	541,
	542,
	543,
	544,
	545,
	546,
	547,
	548,
	549,
	550,
	551,
	552,
	553,
	554,
	555,
	556,
	557,
	558,
	559,
	560,
	561,
	562,
	563,
	564,
	565,
	566,
	567,
	568,
	569,
	570,
	571,
	572,
	573,
	574,
	575,
	576,
	579,
	580,
	583,
	589,
	595,
	606,
	614,
	626,
	627,
	628,
	629,
	630,
	631,
	632,
	633,
	634,
	635,
	636,
	637,
	638,
	639,
	640,
	641,
	642,
	643,
	644,
	645,
	646,
	647,
	648,
	649,
	650,
	651,
	652,
	653,
	654,
	655,
	656,
	657,
	658,
	659,
	660,
	661,
	662,
	663,
	664,
	665,
	666,
	667,
	668,
	669,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	672,
	673,
	675,
	685,
	686,
	691,
	701,
	718,
	725,
	733,
	737,
	744,
	748,
	751,
	752,
	755,
	769,
	777,
	789,
	798,
	802,
	802,
	803,
	803,
	809,
	815,
	824,
	839,
	841,
	843,
	847,
	850,
	852,
	852,
	853,
	853,
	853,
	853,
	853,
	853,
	854,
	855,
	856,
	857,
	860,
	861,
	861,
	861,
	861,
	861,
	861,
	861,
	861,
	861,
	861,
	861,
	862,
	863,
	864,
	865,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	866,
	867,
	868,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	869,
	870,
	871,
	877,
	882,
	882,
	882,
	882,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	885,
	887,
	887,
	887,
	887,
	887,
	887,
	887,
	887,
	887,
	887,
	887,
	887,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	893,
	894,
	904,
	905,
	907,
	917,
	927,
	929,
	931,
	932,
	933,
	936,
	936,
	936,
	936,
	936,
	936,
	936,
	936,
	936,
	936,
	936,
	936,
	936,
	936,
	938,
	938,
	938,
	938,
	938,
	938,
	972,
	972,
	978,
	983,
	988,
	989,
	990,
	993,
	996,
	998,
	1003,
	1006,
	1006,
	1006,
	1006,
	1006,
	1006,
	1006,
	1007,
	1008,
	1009,
	1010,
	1011,
	1012,
	1013,
	1014,
	1015,
	1016,
	1017,
	1018,
	1019,
	1020,
	1021,
	1022,
	1023,
	1024,
	1025,
	1026,
	1027,
	1028,
	1029,
	1030,
	1031,
	1032,
	1033,
	1034,
	1035,
	1036,
	1037,
	1038,
	1039,
	1040,
	1041,
	1042,
	1043,
	1044,
	1045,
	1046,
	1047,
	1048,
	1049,
	1050,
	1051,
	1052,
	1053,
	1054,
	1055,
	1056,
	1057,
	1058,
	1059,
	1060,
	1061,
	1062,
	1063,
	1064,
	1065,
	1066,
	1067,
	1068,
	1069,
	1070,
	1071,
	1072,
	1073,
	1074,
	1075,
	1076,
	1077,
	1078,
	1079,
	1080,
	1081,
	1082,
	1083,
	1084,
	1085,
	1086,
	1087,
	1088,
	1089,
	1090,
	1091,
	1092,
	1093,
	1094,
	1095,
	1096,
	1097,
	1098,
	1099,
	1100,
	1101,
	1102,
	1103,
	1104,
	1105,
	1106,
	1107,
	1108,
	1109,
	1110,
	1111,
	1112,
	1113,
	1114,
	1115,
	1116,
	1117,
	1118,
	1119,
	1120,
	1121,
	1122,
	1123,
	1124,
	1125,
	1126,
	1127,
	1128,
	1129,
	1130,
	1131,
	1132,
	1133,
	1134,
	1135,
	1136,
	1137,
	1138,
	1139,
	1140,
	1141,
	1142,
	1143,
	1144,
	1145,
	1146,
	1147,
	1148,
	1149,
	1150,
	1151,
	1152,
	1153,
	1154,
	1155,
	1156,
	1157,
	1158,
	1159,
	1160,
	1161,
	1162,
	1163,
	1164,
	1165,
	1166,
	1167,
	1168,
	1169,
	1170,
	1171,
	1172,
	1173,
	1174,
	1175,
	1176,
	1177,
	1178,
	1179,
	1180,
	1181,
	1182,
	1183,
	1184,
	1185,
	1186,
	1187,
	1188,
	1189,
	1191,
	1193,
	1194,
	1195,
	1196,
	1197,
	1198,
	1199,
	1200,
	1201,
	1202,
	1203,
	1204,
	1205,
	1206,
	1207,
	1208,
	1209,
	1210,
	1211,
	1212,
	1213,
	1214,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1215,
	1216,
	1217,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1218,
	1220,
	1221};

