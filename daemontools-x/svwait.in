#
# $Log: svwait.in,v $
# Revision 1.3  2020-10-04 11:55:48+05:30  Cprogrammer
# replace builtin echo with /bin/echo -n (for Darwin)
#
# Revision 1.2  2020-10-03 07:40:24+05:30  Cprogrammer
# fix date command syntax for Darwin, FreeBSD
#
# Revision 1.1  2020-09-27 14:41:09+05:30  Cprogrammer
# Initial revision
#
#
# $Id: svwait.in,v 1.3 2020-10-04 11:55:48+05:30 Cprogrammer Exp mbhangui $
#
host=@HOST@
if [ $# != 2 ] ; then
	echo "usage: svwait service wait_interval" 1>&2
	exit 1
fi
# if not running under svscan
if [ -z "$SCANINTERVAL" ] ; then
	exit 0
fi
count=0
service_pwd=`pwd`
while true
do
	i=$(@prefix@/bin/svstat $1)
	if [ $? -eq 0 ] ; then
		# come out only when service is up
		break
	fi
	if [ -d $service_pwd/supervise ] ; then
		/bin/echo -n "$i" > $service_pwd/supervise/wait
		# open this file so that fuser, lsof
		# and friends can find which services are waiting
		# for some service to start
		exec 3<$service_pwd/supervise/wait
	fi
	sleep 1
	count=$(expr $count + 1)
done
count=$(echo $i| awk '{print $5}')
if [ $count -lt $2 ] ; then
	remaining=$(expr $2 - $count)
	if [ -d $service_pwd/supervise ] ; then
		cur_time=$(date +'%s')
		nxt_time=$(expr $cur_time + $remaining)
		case "$host" in
			*-*-darwin*|*-*-freebsd*)
			/bin/echo -n "wait until `date --r $nxt_time`" > $service_pwd/supervise/wait
			;;
			*)
			/bin/echo -n "wait until `date --date=@"$nxt_time"`" > $service_pwd/supervise/wait
			;;
		esac
	fi
	sleep $remaining
	if [ -d $service_pwd/supervise ] ; then
		/bin/rm -f $service_pwd/supervise/wait
		# close file descriptor
		exec 3<&-
	fi
fi
exit 0
