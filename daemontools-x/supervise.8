.TH supervise 8
.SH NAME
supervise \- starts and monitors a service.

.SH SYNOPSIS
\fBsupervise\fR \fIs\fR

.SH DESCRIPTION
\fBsupervise\fR switches to the directory named \fIs\fR and starts ./init.
It starts ./init if ./init exits with non-zero status. It pauses for a
second after starting ./init, so that it does not loop to quickly if ./init
exits immediately.

After ./init exits with zero exit status, \fBsupervise\fR starts ./run.
It restarts ./run if ./run exits. It pauses for a second after
starting ./run, so that it does not loop too quickly if ./run exits
immediately. 

If the file \fIs\fR/down exists, \fBsupervise\fR does not start ./run
immediately. You can use \fBsvc\fR(8) to start ./run and to give other
commands to \fBsupervise\fR.

if the file \fIs\fR/shutdown exists \fBsupervise\fR executes
\fIshutdown\fR when asked to exit.

if the file \fIs\fR/alert exists \fBsupervise\fR executes \fIalert\fR
whenever run exits. The pid of the process that exited is passed as the
first argument to \fIalert\fR. The exit value or signal (if killed by
signal) is passed as the second argument to \fIalert\fR. The third argument
is either \fIexited\fR or \fIstopped / signalled\fR.

supervises uses directory \fIrun\fR/svscan/\fIs\fR/supervise where\fIrun\fR
is either /run or /var/run, depending on your operating system.

\fBsupervise\fR maintains status information in a binary format in the
directory \fIrun\fR\fIs\fR/supervise. This directory \fIrun\fR\fIs\fR must
be writable to \fBsupervise\fR. The status information can be read by
\fBsvstat\fR(8).

\fBsupervise\fR may exit immediately after startup if it cannot find the
files it needs in \fIs\fR or if another copy of \fBsupervise\fR is already
running in \fIs\fR. Once \fBsupervise\fR is successfully running, it will
not exit unless it is killed or specifically asked to exit. You can use
\fBsvok\fR(8) to check whether \fBsupervise\fR is successfully running. You
can use \fBsvscan\fR(8) to reliably start a collection of \fBsupervise\fR
processes. \fBsvscan\fR mirrors the service directory in /run or /var/run
directory (whichever is found first). So /run/\fIs\fR will be analogous
to /service/\fIs\fR. When started by \fBsvscan\fR, error messages printed
by \fBsupervise\fR will go the standard error output of \fBsvscan\fR
process.

\fBsupervise\fR can wait for another service by having a file named
\fIs\fR/\fIwait\fR. This file has two lines. The first line is a service
name \fIw\fR and the second line is time in seconds \fIt\fR. \fIw\fR
refers to the service for which service \fIs\fR should wait for \fIt\fR
secs once service \fIw\fR is up and runnng. The amount of time \fIt\fR
is limited to a max of 32767 secs. Any value above this value will be
limited to 60 secs.

.SH SEE ALSO
svc(8),
svok(8),
svstat(8),
svps(1),
svscanboot(8),
svscan(8),
svctool(8),
minisvc(8),
readproctitle(8),
fghack(8),  
pgrphack(8),
multilog(8),
tai64n(8),
tai64nlocal(8),
setuidgid(8),
envuidgid(8),
envdir(8),
softlimit(8),
setlock(8)
