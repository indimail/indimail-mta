#!/bin/sh
# $Log: create_rpm,v $
# Revision 1.1  2020-10-21 18:10:08+05:30  Cprogrammer
# Initial revision
#
#
# $Id: create_rpm,v 1.1 2020-10-21 18:10:08+05:30 Cprogrammer Exp mbhangui $
#
version=$(head -1 conf-version)

get_tar_files()
{
(
for i in `grep "^Source" daemontools-x/daemontools.spec.in | awk '{print $2}' | grep "\.tar"`
do
	i=`basename $i`
	echo $i
done
) | uniq | sed \
	-e 's/%{name}/daemontools/g' \
	-e "s/%{version}/$version/g"
}

get_non_tar_files()
{
(
for i in `grep "^Source" $1 | grep -v "\.tar" | awk '{print $2}'`
do
	i=`basename $i`
	echo $i
done
) | sort -u | sed \
	-e 's/%{name}/daemontools/g' \
	-e "s/%{version}/$version/g"
}

get_dirname()
{
	echo $1 | sed \
		-e 's}.tar.gz}}g' \
		-e 's}.tar.bz2}}g' \
		-e 's}.tar.xz}}g'
}

if [ -f /etc/debian_version ] ; then
	echo "you can't do rpmbuild on an insane system" 1>&2
	exit 1
fi

verbose=0
while test $# -gt 0; do
    case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'`
	;;
    *) optarg=
	;;
    esac

    case "$1" in
    --verbose)
	verbose=1
    ;;
    --release=*)
	release=$optarg
    ;;
    *)
    echo "invalid option [$1]"
    read key
    usage 1
    ;;
    esac

    shift
done

if test -f $HOME/.rpmmacros
then
	topdir=`grep ^%_topdir $HOME/.rpmmacros | awk '{print $2}'`
	if test -n "$topdir"
	then
		rpmbuild=$topdir
	else
		rpmbuild=$HOME/rpmbuild
	fi
else
	rpmbuild=$HOME/rpmbuild
fi

copy_src=0
echo -n "Copy Source Files - "
read key
if [ " $key" = " y" -o " $key" = " Y" ] ; then
	copy_src=1
fi

SYSTEM=`uname -s | tr "[:lower:]" "[:upper:]"`
if [ $copy_src -eq 1 ] ; then
make SYSTEM=$SYSTEM -s daemontools.spec
if [ $? -ne 0 ] ; then
	echo "make failed" 1>&2
	exit 1
fi
if [ -d ../stage ] ; then
	/bin/rm -rf ../stage
fi
mkdir ../stage
cd ..
list=`get_tar_files`
for i in $list
do
	dir=`get_dirname $i`
	case "$dir" in
		daemontools-$version)
		if [ ! -d daemontools-x ] ; then
			echo "$i: No such file or directory" 1>&2
			exit 1
		fi
		echo "Preparing daemontools-"$version""
		/bin/cp -rp daemontools-x stage/daemontools-"$version"
		cd stage/daemontools-"$version"
		echo "Cleaning daemontools"
		make SYSTEM=$SYSTEM -s clean > /dev/null
		make SYSTEM=$SYSTEM -s distclean > /dev/null
		/bin/rm -rf autom4te.cache .deps
		cd ..
		tar \
			--exclude="daemontools-$version/.git" \
			--exclude="daemontools-$version/debian" \
			--exclude="daemontools-$version/RCS" \
			-cf - daemontools-"$version" \
			| gzip -c > $rpmbuild/SOURCES/daemontools-"$version".tar.gz
		SRC="$rpmbuild/SOURCES/daemontools-"$version".tar.gz $SRC"
		cd ..
		continue
		;;
	esac
done
echo "Copying permissions files and rpmlintrc"
for i in `get_non_tar_files daemontools-x/daemontools.spec.in`
do
	/bin/cp -p stage/daemontools-"$version"/$i $rpmbuild/SOURCES
	SRC="$rpmbuild/SOURCES/$i $SRC"
done
echo "Clearing stage directory"
/bin/rm -rf stage
else
	cd ..
fi
dist=`uname -r |cut -d . -f4`
if [ -z "$release" ] ; then
	if [ -f /usr/sbin/svscan ] ; then
		idist=$(rpm -qf /usr/sbin/svscan|cut -d- -f3|cut -d. -f3)
		if [ " $dist" = " $idist" ] ; then
			iversion=$(rpm -qf /usr/sbin/svscan|cut -d- -f2)
			if [ "$iversion" = "$version" ] ; then
				release=$(rpm -qf /usr/sbin/svscan | cut -d- -f3 | cut -d. -f2)
				release=$(expr $release + 1)
			else
				release=1
			fi
		else
			release=1
		fi
	else
		release=1
	fi
fi
echo -n "Build RPM for daemontools-"$version"-1."$release" (Y/N) - "
read key
if [ " $key" = " Y" -o " $key" = " y" ] ; then
	tmprel=`cat daemontools-x/conf-release 2>/dev/null`
	if [ ! " $tmprel" = " 1.$release" ] ; then
		echo 1.$release > daemontools-x/conf-release
		cd daemontools-x
		make SYSTEM=$SYSTEM daemontools.spec
		cp daemontools.spec /tmp
		cd debian
		make
		cd ../..
	else
		cp daemontools-x/daemontools.spec /tmp
	fi
	build_arch=`rpmbuild --showrc|grep "^build arch" | awk '{print $4}'`
	if [ $verbose -eq 0 ] ; then
		echo "rpmbuild -ba --clean --quiet /tmp/daemontools.spec"
		rpmbuild -ba --clean --quiet /tmp/daemontools.spec
	else
		echo "rpmbuild -ba --clean /tmp/daemontools.spec"
		rpmbuild -ba --clean /tmp/daemontools.spec
	fi
	if [ $? -eq 0 ] ; then
		/bin/rm -f /tmp/daemontools.spec
		rpm --addsign $rpmbuild/RPMS/$build_arch/daemontools-"$version"-"1.$release".$dist.$build_arch.rpm
		rpm --addsign $rpmbuild/SRPMS/daemontools-"$version"-"1.$release".$dist.src.rpm
		echo -n "RPM lint for daemontools-"$version"-1."$release" (Y/N) - "
		read key
		if [ " $key" = " Y" -o " $key" = " y" ] ; then
			(
			echo daemontools-"$version"-"1.$release".$dist.rpm
			rpmlint $rpmbuild/RPMS/$build_arch/daemontools-"$version"-"1.$release".$dist.$build_arch.rpm
			echo ------------------------
			echo daemontools-"$version"-"1.$release".$dist.src.rpm
			rpmlint $rpmbuild/SRPMS/daemontools-"$version"-"1.$release".$dist.src.rpm
			echo ------------------------
			) 2>&1 | less
		fi
	else
		/bin/rm -f /tmp/daemontools.spec
	fi
fi
if [ $copy_src -eq 1 ] ; then
	echo -n "Remove Source (Y/N) - "
	read key
	if [ " $key" = " Y" -o " $key" = " y" ] ; then
		for i in $SRC
		do
			echo "/bin/rm -f $i"
			/bin/rm -f $i
		done
	fi
fi
