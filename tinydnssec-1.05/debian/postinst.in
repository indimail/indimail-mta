#!/bin/sh
set -e

prefix=@prefix@
sysconfdir=@sysconfdir@

ID=`id -u`
if [ $ID -ne 0 ] ; then
	echo "You are not root" >&2
	exit 1
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

# we are doing upgrade or removal

case "$1" in
    configure)
		if [ " $2" = " " ] ; then
		echo "installing tinydnssec"
		else
		echo "upgrading tinydnssec $2"
		fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    exit 0
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

/bin/rmdir --ignore-fail-on-non-empty ${sysconfdir}/dnscache 2>/dev/null
/bin/rmdir --ignore-fail-on-non-empty ${sysconfdir}/tinydns 2>/dev/null
if [ ! -d ${sysconfdir}/dnscache ] ; then
  ${prefix}/sbin/dnscache-conf Gdnscache qmaill ${sysconfdir}/dnscache 127.0.0.1 || true
  if [ $? -eq 0 ] ; then
    if [ ! -h /service/dnscache ] ; then
      ln -s ${sysconfdir}/dnscache /service/dnscache || true
    fi
  fi
else
  if [ ! -h /service/dnscache ] ; then
    ln -sf ${sysconfdir}/dnscache /service/dnscache || true
  fi
fi
for i in tinydns dqcache curvedns
do
  if [ " $i" = " dqcache" ] ; then
    acct=Gdnscache
  else
    acct=Gtinydns
  fi
  if [ " $i" = " curvedns" ] ; then
    ip=x.x.x.x
  else
    ip=127.0.0.1
  fi
  if [ ! -d ${sysconfdir}/$i ] ; then
    ${prefix}/sbin/$i-conf $acct qmaill ${sysconfdir}/$i $ip || true
    if [ ! " $i" = " curvedns" ] ; then
      continue
    fi
    if [ -d ${sysconfdir}/$i ] ; then
      mask=`umask`
      umask 077
      # Generate private key
      sed -n \$p ${sysconfdir}/curvedns/private.key > ${sysconfdir}/$i/curvedns.keygen
      /bin/sh ${sysconfdir}/$i/curvedns.keygen && /bin/rm -f ${_sysconfdir}/$i/curvedns.keygen
      umask $mask
    fi
  fi
done
